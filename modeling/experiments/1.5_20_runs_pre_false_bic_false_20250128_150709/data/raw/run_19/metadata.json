{
  "task_description": "In the  experiment, each participant is given 36 different proposals to respond to. Each is designated by a trial number in the data set This gives 36 instances for the learnable parameters to be trained. There is also a pretask where the participant finds a number of tokens that correspond to their contribution to the group. This is designated by the variable \"token_self\". The other variable, \"token_opp\", is the number of tokens found the opponent's and represents the opoonents contribution to the shared pot that will be later divided by the opponent.\n\nNote that in each trial there is a variable amount of money in the combined earning, so that two equal split_self variables do not represent the same \"fairness\".\n\nBelow is the description of each variable in the dataset, which will be followed by information about the data type of the variable:\n\ntrial_type = how much was the contribution [1 = equal, 2 = opponent more, 3 = participant more]\ntrial_role = the role of the participant [1 = responder, 2 = proposer]\ntoken_opp = number of tokens found by the opponent\ntoken_self = number of tokens found by the participant\ncombined_earning = amount of money earned in total (note that each token found is \u00a33)\nsplit_opp = the proposed share of the opponent (in \u00a3)\nsplit_self = the proposed share for the participant (in \u00a3)\nsplitperc_opp = same but in %\nsplit_perc_self = same but in %\naccept = whether the participant responded accept (1) or reject (0)\naccepted_amount = if accepted, what is the amount gain (in \u00a3)\naccepted_perc = same as above but in %\nproposed_perc = when participant is the proposer, what is the % proposed to the opponent\n\nDataset:\n\nDataset Structure:\nVariables available:\n- ID (int64)\n- group (object)\n- trial_number (int64)\n- trial_type (int64)\n- trial_role (int64)\n- token_opp (int64)\n- token_self (int64)\n- combined_earning (int64)\n- split_opp (float64)\n- split_self (float64)\n- splitperc_opp (int64)\n- splitperc_self (int64)\n- accept (float64)\n- accepted_amount (float64)\n- accepted_perc (float64)\n- proposed_perc (float64)\n- proposed_amount (float64)\n\nNumber of observations: 3276\n\nDataset:\n\nDataset Structure:\nVariables available:\n- ID (int64)\n- group (object)\n- trial_number (int64)\n- trial_type (int64)\n- trial_role (int64)\n- token_opp (int64)\n- token_self (int64)\n- combined_earning (int64)\n- split_opp (float64)\n- split_self (float64)\n- splitperc_opp (int64)\n- splitperc_self (int64)\n- accept (float64)\n- accepted_amount (float64)\n- accepted_perc (float64)\n- proposed_perc (float64)\n- proposed_amount (float64)\n\nNumber of observations: 3276",
  "output_description": "Design a computational model for the given task. The model should obtain the utility, (not the probability of choosing an action).  Your goal is to eventually explore the entire space of possible explainations and mechanisms by which the observed behavior arises.\n\nYour model should use the given variables appropriately, but does not necessary need to use all or even most of the variables. Do not include the model for the utility of rejecting an offer. \n\nThe model should:\n1. Predict only responder behavior.\n2. Build on relevant psychological principles.\n3. Be considerate of high covariance between learnable parameters as the model\nwill have to pass parameter recovery tests.\n4. Be applicable to the dataset given within the task description (i.e. the model should be able to be run using only the provided dataset structure).\n5. Not include parameters to simulate general stochasticity of behavior, because this will be handled later by a temperature parameter.\n6. Should have no more than two learnable parameters.\n7. This specific model should calculate the utility of an action, which will then be used to determine\nthe probability of choosing that action. Negative values should represent a negative utility, and thus an unlikly action.\n\nFor any learnable parameters in your model, you must specify finite numerical bounds (it just can not be infinity) in the variable descriptions. However, this bound should be generous. The utility variable may be unbounded (-inf to inf).\n\nFirst, reason step by step about:\n* The key psychological mechanisms involved\n* How these mechanisms interact\n* What mathematical form could capture these interactions\n* What parameters would be needed to calibrate the model\n* How the model variables map to observable behavior\n\nThen, provide your formal mathematical model between <MODEL> tags, followed by variable descriptions between <VARIABLES> tags. Use clear mathematical notation and ensure each variable is fully described. Every variable must be utilized within the mathematical formula provided between <MODEL> and </MODEL>. For variable descriptions, provide them in a JSON format with the following structure: <VARIABLES> Bounds are by default inclusive. Please spell out the greek variable names instead of using the symbols. Finally, you should provide a short description of the model in the summary tags <SUMMARY> </SUMMARY>. This will be used to compare different computational models of the task; it should be concise and purely descriptive. Do not include generic information about the name of the tasks, since that is implied. \n\n{\n  \"variables\": {\n    \"variable_name\": {\n      \"description\": \"Clear description\",\n      \"range\": {\n        \"min\": value,\n        \"max\": value,\n        \"inclusive_min\": boolean,\n        \"inclusive_max\": boolean\n      },\n      \"distribution\": {\n        \"type\": \"distribution type\",\n        \"parameters\": {}\n      },\n      \"learnable\": boolean,\n      \"source\": \"learnable/data/calculated\"\n    }\n  }\n}\n</VARIABLES>\n\nExample #1: \n<EXAMPLE>\n(Model of a Random Choice Task):\nLet me think through this step by step...\n[your reasoning here]\n\n<MODEL>\nU_i = \u03b2 + \u03b5E + \u03b7N\n</MODEL>\n\n<VARIABLES>\n{\n  \"variables\": {\n    \"U_i\": {\n      \"description\": \"Utility of choosing action i\",\n      \"range\": {\n        \"min\": \"-inf\",\n        \"max\": \"inf\"\n      },\n      \"learnable\": false,\n      \"source\": \"calculated\"\n    },\n    \"beta\": {\n      \"description\": \"Base tendency parameter (inherent preference)\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": 1\n      },\n      \"learnable\": true,\n      \"source\": \"learnable\"\n    },\n    \"epsilon\": {\n      \"description\": \"Environmental sensitivity parameter\",\n      \"range\": {\n        \"min\": \"-inf\",\n        \"max\": \"inf\"\n      },\n      \"learnable\": true,\n      \"source\": \"learnable\"\n    },\n    \"E\": {\n      \"description\": \"Environmental cue value\",\n      \"range\": {\n        \"min\": \"-inf\",\n        \"max\": \"inf\"\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"eta\": {\n      \"description\": \"Noise parameter\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": 1,\n        \"exclusive_max\": true\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"N\": {\n      \"description\": \"Random noise drawn from normal distribution N(0,1)\",\n      \"distribution\": {\n        \"type\": \"normal\",\n        \"mean\": 0,\n        \"std\": 1\n      },\n      \"learnable\": false,\n      \"source\": \"calculated\"\n    }\n  }\n}\n</VARIABLES>\n<SUMMARY>\nA linear utility model combining base preference, environmental influence, and stochastic noise. The model uses two learnable parameters: a base tendency parameter (\u03b2) constrained to [0,1] and an unconstrained environmental sensitivity parameter (\u03b5). Environmental cues and normally distributed noise modify the base utility, allowing for both systematic and random variation in choice behavior.\n</SUMMARY>\n</EXAMPLE>\n\nPlease be sure to provide the mathematical formula for the model between <MODEL> and </MODEL>, and the variable descriptions between <VARIABLES> and </VARIABLES>. No description of the model should be provided within the <MODEL> tags.\n\nThe parameter names you choose in your <VARIABLES> section will be used exactly as specified in subsequent code generation. Please choose clear, non-reserved parameter names that can be used directly in Python code. For example, avoid Python reserved words like 'lambda' and use alternatives like 'learning_rate' or 'lambda_param'.",
  "dataset_info": "\nDataset Structure:\nVariables available:\n- ID (int64)\n- group (object)\n- trial_number (int64)\n- trial_type (int64)\n- trial_role (int64)\n- token_opp (int64)\n- token_self (int64)\n- combined_earning (int64)\n- split_opp (float64)\n- split_self (float64)\n- splitperc_opp (int64)\n- splitperc_self (int64)\n- accept (float64)\n- accepted_amount (float64)\n- accepted_perc (float64)\n- proposed_perc (float64)\n- proposed_amount (float64)\n\nNumber of observations: 3276",
  "learnable_parameters": {
    "fairness_weight": {
      "description": "Weight given to fairness in the utility calculation",
      "range": {
        "min": 0,
        "max": 10,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": null,
      "learnable": true,
      "source": "learnable"
    },
    "self_interest_weight": {
      "description": "Weight given to self-interest in the utility calculation",
      "range": {
        "min": 0,
        "max": 10,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": null,
      "learnable": true,
      "source": "learnable"
    }
  },
  "model_specification": "U_accept = fairness_weight * (split_perc_self - (token_self / (token_self + token_opp)) * 100) + self_interest_weight * split_perc_self",
  "variable_descriptions": {
    "U_accept": {
      "description": "Utility of accepting the offer",
      "range": {
        "min": "-inf",
        "max": "inf",
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": null,
      "learnable": false,
      "source": "calculated"
    },
    "fairness_weight": {
      "description": "Weight given to fairness in the utility calculation",
      "range": {
        "min": 0,
        "max": 10,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": null,
      "learnable": true,
      "source": "learnable"
    },
    "self_interest_weight": {
      "description": "Weight given to self-interest in the utility calculation",
      "range": {
        "min": 0,
        "max": 10,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": null,
      "learnable": true,
      "source": "learnable"
    },
    "split_perc_self": {
      "description": "Percentage of the combined earnings proposed to the participant",
      "range": {
        "min": 0,
        "max": 100,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": null,
      "learnable": false,
      "source": "data"
    },
    "token_self": {
      "description": "Number of tokens found by the participant",
      "range": {
        "min": 0,
        "max": 1000,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": null,
      "learnable": false,
      "source": "data"
    },
    "token_opp": {
      "description": "Number of tokens found by the opponent",
      "range": {
        "min": 0,
        "max": 1000,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": null,
      "learnable": false,
      "source": "data"
    }
  },
  "model_summary": "A linear utility model for responder acceptance decisions, combining fairness and self-interest.  Fairness is calculated as the difference between the participant's percentage of the earnings and their proportionally fair share based on token contributions. The model has two learnable parameters representing the weights assigned to fairness and self-interest.",
  "full_reasoning": "Let me think through this step by step...\n\n**Key Psychological Mechanisms:**\n\n1. **Fairness:** Responders likely consider the fairness of the offer relative to their contribution and the opponent's contribution.  A perfectly fair offer would split the combined earnings proportionally to each party's token contribution. Deviations from this ideal will influence the utility of accepting.\n\n2. **Self-interest:** Responders will prioritize maximizing their own monetary gain.  A higher monetary offer will increase the utility of acceptance.\n\n**How these Mechanisms Interact:**\n\nFairness and self-interest are likely intertwined. A responder might accept an unfair offer if the monetary gain is sufficiently high, but a highly unfair offer might be rejected even if it offers a substantial monetary benefit.  The relative weight of fairness versus self-interest will vary across individuals.\n\n**Mathematical Form:**\n\nA simple model can capture this interaction by using a weighted sum of fairness and self-interest. We can use the percentage of the combined earning that the responder receives as a measure of self-interest. Fairness can be measured by the deviation from proportional fairness.\n\n**Parameters:**\n\nWe can use two learnable parameters:\n\n1.  `fairness_weight`: Represents the relative importance of fairness in decision-making. A higher value indicates a stronger preference for fairness.\n2.  `self_interest_weight`: Represents the relative importance of self-interest. A higher value indicates a stronger preference for maximizing monetary gain.\n\nThese two parameters will determine the relative contribution of fairness and self-interest to the utility of accepting an offer.\n\n**Model Variables Mapping to Observable Behavior:**\n\nThe model will predict the utility of accepting an offer based on `split_perc_self` (self-interest) and a calculation of fairness based on `token_self`, `token_opp`, and `combined_earning`. A higher utility corresponds to a higher likelihood of acceptance (which will be handled by the temperature parameter in a subsequent step).\n\n<MODEL>\nU_accept = fairness_weight * (split_perc_self - (token_self / (token_self + token_opp)) * 100) + self_interest_weight * split_perc_self\n</MODEL>\n\n<VARIABLES>\n{\n  \"variables\": {\n    \"U_accept\": {\n      \"description\": \"Utility of accepting the offer\",\n      \"range\": {\n        \"min\": \"-inf\",\n        \"max\": \"inf\"\n      },\n      \"learnable\": false,\n      \"source\": \"calculated\"\n    },\n    \"fairness_weight\": {\n      \"description\": \"Weight given to fairness in the utility calculation\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": 10,\n        \"inclusive_min\": true,\n        \"inclusive_max\": true\n      },\n      \"learnable\": true,\n      \"source\": \"learnable\"\n    },\n    \"self_interest_weight\": {\n      \"description\": \"Weight given to self-interest in the utility calculation\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": 10,\n        \"inclusive_min\": true,\n        \"inclusive_max\": true\n      },\n      \"learnable\": true,\n      \"source\": \"learnable\"\n    },\n    \"split_perc_self\": {\n      \"description\": \"Percentage of the combined earnings proposed to the participant\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": 100,\n        \"inclusive_min\": true,\n        \"inclusive_max\": true\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"token_self\": {\n      \"description\": \"Number of tokens found by the participant\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": 1000, \n        \"inclusive_min\": true,\n        \"inclusive_max\": true\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"token_opp\": {\n      \"description\": \"Number of tokens found by the opponent\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": 1000,\n        \"inclusive_min\": true,\n        \"inclusive_max\": true\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    }\n  }\n}\n</VARIABLES>\n\n<SUMMARY>\nA linear utility model for responder acceptance decisions, combining fairness and self-interest.  Fairness is calculated as the difference between the participant's percentage of the earnings and their proportionally fair share based on token contributions. The model has two learnable parameters representing the weights assigned to fairness and self-interest.\n</SUMMARY>\n",
  "simulation_code": "def simulate_model(trial_data, fairness_weight=1, self_interest_weight=1):\n    utility_values = []\n    for trial in trial_data:\n        try:\n            split_perc_self = trial['splitperc_self']\n            token_self = trial['token_self']\n            token_opp = trial['token_opp']\n\n            if token_self + token_opp == 0: #handle division by zero\n                fairness_component = 0\n            else:\n                fairness_component = split_perc_self - (token_self / (token_self + token_opp)) * 100\n\n            utility = fairness_weight * fairness_component + self_interest_weight * split_perc_self\n            utility_values.append(utility)\n        except KeyError as e:\n            print(f\"Error: Missing key in trial data: {e}\")\n            utility_values.append(float('nan')) # Handle missing keys gracefully\n\n    return utility_values",
  "fitting_results": [
    {
      "fairness_weight": 10.0,
      "self_interest_weight": 0.00979794707071077,
      "success": true,
      "log_likelihood": -47.425748473121715,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.20372093584738463,
      "self_interest_weight": 0.1379046684320545,
      "success": true,
      "log_likelihood": -15.874952355617022,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.4223420841157671,
      "self_interest_weight": 0.2852866194763109,
      "success": true,
      "log_likelihood": -9.464101772287478,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.2625581690547659,
      "self_interest_weight": 0.1375109562627141,
      "success": true,
      "log_likelihood": -14.062400402485359,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.48523225287434013,
      "self_interest_weight": 0.2500276134430913,
      "success": true,
      "log_likelihood": -8.834517119640196,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.24929334581283075,
      "self_interest_weight": 0.25726892964404924,
      "success": true,
      "log_likelihood": -11.629831035778539,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "self_interest_weight": 10.0,
      "success": true,
      "log_likelihood": 3.600000297685338e-09,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.24118914965658353,
      "self_interest_weight": 0.26485000477760773,
      "success": true,
      "log_likelihood": -11.471626097628791,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "self_interest_weight": 10.0,
      "success": true,
      "log_likelihood": 3.600000297685338e-09,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.40474765342865254,
      "self_interest_weight": 0.18371567105620207,
      "success": true,
      "log_likelihood": -10.337355181834965,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 10.0,
      "self_interest_weight": 6.287802874630408,
      "success": true,
      "log_likelihood": -0.05670478437405971,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.3080090017408463,
      "self_interest_weight": 0.0,
      "success": true,
      "log_likelihood": -9.26895085549159,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 10.0,
      "self_interest_weight": 4.681627869804564,
      "success": true,
      "log_likelihood": -23.029524121574177,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "self_interest_weight": 10.0,
      "success": true,
      "log_likelihood": 3.600000297685338e-09,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "self_interest_weight": 10.0,
      "success": true,
      "log_likelihood": 3.600000297685338e-09,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "self_interest_weight": 10.0,
      "success": true,
      "log_likelihood": 3.600000297685338e-09,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "self_interest_weight": 10.0,
      "success": true,
      "log_likelihood": 3.600000297685338e-09,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.3940927454062168,
      "self_interest_weight": 0.7698693539997437,
      "success": true,
      "log_likelihood": -3.585758253707217,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.20955464563618373,
      "self_interest_weight": 0.4704665563200174,
      "success": true,
      "log_likelihood": -5.648411142095085,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "self_interest_weight": 10.0,
      "success": true,
      "log_likelihood": 3.600000297685338e-09,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.24970478441349533,
      "self_interest_weight": 0.19139972009638795,
      "success": true,
      "log_likelihood": -13.467208888001942,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "self_interest_weight": 10.0,
      "success": true,
      "log_likelihood": -115.12925464660225,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.1814022693446671,
      "self_interest_weight": 0.08189363837716437,
      "success": true,
      "log_likelihood": -17.368962019735786,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.18080603423170355,
      "self_interest_weight": 0.14186433572921334,
      "success": true,
      "log_likelihood": -16.406809410040008,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 6.865323745497495,
      "self_interest_weight": 4.578379125273338,
      "success": true,
      "log_likelihood": -93.36513804123025,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.24669660032648794,
      "self_interest_weight": 0.20791561522366545,
      "success": true,
      "log_likelihood": -13.077543946061255,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.27503288364773093,
      "self_interest_weight": 0.23439176085101426,
      "success": true,
      "log_likelihood": -11.974512587080717,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 1.137979272686511,
      "self_interest_weight": 0.34750599086147677,
      "success": true,
      "log_likelihood": -3.804652335767215,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 1.1377767785728155,
      "self_interest_weight": 5.103313453461184,
      "success": true,
      "log_likelihood": -69.18596191429836,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.1004492439517735,
      "self_interest_weight": 0.1805571256093604,
      "success": true,
      "log_likelihood": -14.61992278757568,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "self_interest_weight": 10.0,
      "success": true,
      "log_likelihood": 3.600000297685338e-09,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 10.0,
      "self_interest_weight": 0.009797136704035762,
      "success": true,
      "log_likelihood": -47.42574847320999,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.12458906392891961,
      "self_interest_weight": 0.07073244006244038,
      "success": true,
      "log_likelihood": -20.178620696955225,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.2604342433059046,
      "self_interest_weight": 0.12625224551537234,
      "success": true,
      "log_likelihood": -14.185073833050822,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "self_interest_weight": 10.0,
      "success": true,
      "log_likelihood": 3.600000297685338e-09,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.1794759712227665,
      "self_interest_weight": 0.20355499798218427,
      "success": true,
      "log_likelihood": -14.01149378103652,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.35044364907612197,
      "self_interest_weight": 0.4074088998781572,
      "success": true,
      "log_likelihood": -7.961553758973449,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.24300806607759332,
      "self_interest_weight": 0.15668107890067062,
      "success": true,
      "log_likelihood": -14.385841632334055,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.12455709272512908,
      "self_interest_weight": 0.14856358134008352,
      "success": true,
      "log_likelihood": -16.992393931086966,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "self_interest_weight": 10.0,
      "success": true,
      "log_likelihood": -69.07755278652135,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.13120763615594844,
      "self_interest_weight": 0.13445146979725642,
      "success": true,
      "log_likelihood": -17.722848157308643,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 10.0,
      "self_interest_weight": 1.2769450132897504,
      "success": true,
      "log_likelihood": -46.34746540478631,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "self_interest_weight": 10.0,
      "success": true,
      "log_likelihood": -23.02585092644049,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.1779298507341247,
      "self_interest_weight": 0.15903802346779905,
      "success": true,
      "log_likelihood": -15.864468881445791,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.23227466985755876,
      "self_interest_weight": 0.22320317292922714,
      "success": true,
      "log_likelihood": -12.817816358933248,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.07945507189610442,
      "self_interest_weight": 0.14039912693065804,
      "success": true,
      "log_likelihood": -17.05672694260736,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.19798463794290408,
      "self_interest_weight": 0.15942057886182862,
      "success": true,
      "log_likelihood": -15.436555480288384,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.15688749623521622,
      "self_interest_weight": 0.06896160157976694,
      "success": true,
      "log_likelihood": -18.54104833887919,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.31179380782872285,
      "self_interest_weight": 0.14388929476879364,
      "success": true,
      "log_likelihood": -12.586114359571322,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.05013772408957193,
      "self_interest_weight": 0.04837792892379786,
      "success": true,
      "log_likelihood": -23.391579119454434,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 3.758653957941496,
      "self_interest_weight": 5.443490356679807,
      "success": true,
      "log_likelihood": -150.8965343388735,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 10.0,
      "self_interest_weight": 0.009797900546200162,
      "success": true,
      "log_likelihood": -93.47745033320085,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.1444281436821723,
      "self_interest_weight": 0.12049719504696828,
      "success": true,
      "log_likelihood": -18.101197125878144,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.04968824566267969,
      "self_interest_weight": 0.0665225419719576,
      "success": true,
      "log_likelihood": -22.384638221795452,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.1673397882690058,
      "self_interest_weight": 0.05242633512308523,
      "success": true,
      "log_likelihood": -17.697644444187933,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.8278949094669271,
      "self_interest_weight": 0.3107590185657136,
      "success": true,
      "log_likelihood": -5.220035540331311,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.40614353132281744,
      "self_interest_weight": 0.12372676626722262,
      "success": true,
      "log_likelihood": -10.036664900182481,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "self_interest_weight": 10.0,
      "success": true,
      "log_likelihood": -92.1034037165618,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 10.0,
      "self_interest_weight": 0.009797763830541196,
      "success": true,
      "log_likelihood": -70.45159940316529,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.07215419770275705,
      "self_interest_weight": 0.1845660792281131,
      "success": true,
      "log_likelihood": -13.322371237923198,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.09832858541022942,
      "self_interest_weight": 0.10974770856612762,
      "success": true,
      "log_likelihood": -19.45156166279033,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.23399971014131976,
      "self_interest_weight": 0.15794227374367056,
      "success": true,
      "log_likelihood": -14.59701359948533,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 10.0,
      "self_interest_weight": 0.009797374537329363,
      "success": true,
      "log_likelihood": -47.42574847316685,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.1362923884065958,
      "self_interest_weight": 0.08125266494572189,
      "success": true,
      "log_likelihood": -19.50079408665638,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.3575273981869709,
      "self_interest_weight": 0.07880099117711732,
      "success": true,
      "log_likelihood": -10.509606981083856,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.235606896869989,
      "self_interest_weight": 0.1999735463186642,
      "success": true,
      "log_likelihood": -13.479322335605447,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "self_interest_weight": 10.0,
      "success": true,
      "log_likelihood": -69.07755278652131,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.5489715123830252,
      "self_interest_weight": 9.152094043463672,
      "success": true,
      "log_likelihood": -115.12913252952619,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.1744231656268044,
      "self_interest_weight": 0.15438554188566486,
      "success": true,
      "log_likelihood": -16.1094018886107,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "self_interest_weight": 0.1664106959722297,
      "success": true,
      "log_likelihood": -10.537471305339787,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 10.0,
      "self_interest_weight": 0.4678404353012299,
      "success": true,
      "log_likelihood": -0.00022376289404929978,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 10.0,
      "self_interest_weight": 0.009797879570823636,
      "success": true,
      "log_likelihood": -93.47745033320133,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.19871602962710733,
      "self_interest_weight": 0.15124372217977605,
      "success": true,
      "log_likelihood": -15.667267892312656,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "self_interest_weight": 10.0,
      "success": true,
      "log_likelihood": -184.20680743672386,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0590671162161004,
      "self_interest_weight": 0.04444912267448715,
      "success": true,
      "log_likelihood": -23.339677437018135,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.16996375951668483,
      "self_interest_weight": 0.22345254914957252,
      "success": true,
      "log_likelihood": -13.14396793062073,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "self_interest_weight": 10.0,
      "success": true,
      "log_likelihood": -46.051701856480875,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 10.0,
      "self_interest_weight": 0.00979540461603952,
      "success": true,
      "log_likelihood": -70.45159940399598,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.039737816332618435,
      "self_interest_weight": 0.05940340893705607,
      "success": true,
      "log_likelihood": -22.802478515363077,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 10.0,
      "self_interest_weight": 0.009797855154815426,
      "success": true,
      "log_likelihood": -47.4257484731234,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.06250447131037246,
      "self_interest_weight": 0.056399965747437546,
      "success": true,
      "log_likelihood": -22.83897291111275,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "self_interest_weight": 10.0,
      "success": true,
      "log_likelihood": -69.07755278652131,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.21452935573130802,
      "self_interest_weight": 0.0,
      "success": true,
      "log_likelihood": -12.66107040836235,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.31910074675369143,
      "self_interest_weight": 0.22867496109576052,
      "success": true,
      "log_likelihood": -11.513300027011068,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.03529876302909117,
      "self_interest_weight": 0.0529514868757126,
      "success": true,
      "log_likelihood": -23.192332867333253,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 10.0,
      "self_interest_weight": 0.0097979733782835,
      "success": true,
      "log_likelihood": -24.399924188078828,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.09779176326403984,
      "self_interest_weight": 0.13888750136441835,
      "success": true,
      "log_likelihood": -17.506964582652056,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.20369024806727662,
      "self_interest_weight": 0.010216649334959572,
      "success": true,
      "log_likelihood": -13.793080181394913,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 2.227236231923548,
      "self_interest_weight": 10.0,
      "success": true,
      "log_likelihood": -23.033520247610436,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.21871776287699196,
      "self_interest_weight": 0.15093667589235688,
      "success": true,
      "log_likelihood": -15.15359687198805,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.042829047806011544,
      "self_interest_weight": 0.09493835978979182,
      "success": true,
      "log_likelihood": -19.91153677635368,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    }
  ],
  "parameter_recovery": {
    "correlations": {
      "fairness_weight": {
        "r": 0.8076102542285891,
        "p": 3.3020241731183182e-24
      },
      "self_interest_weight": {
        "r": 0.7278954712631897,
        "p": 9.545199297334377e-18
      }
    }
  },
  "bic_results": {
    "average_bic": 63.10674163083645,
    "individual_bics": [
      102.01853482315565,
      38.91694258814626,
      26.095241421487174,
      35.291838681882936,
      24.83607211619261,
      30.4266999484693,
      7.167037869712219,
      30.110290072169803,
      7.167037869712219,
      27.84174824058215,
      7.280447445660339,
      25.704939587895403,
      53.22608612006057,
      7.167037869712219,
      7.167037869712219,
      7.167037869712219,
      7.167037869712219,
      14.338554384326653,
      18.46386016110239,
      7.167037869712219,
      34.1014556529161,
      237.42554717011672,
      41.90496191638379,
      39.980656696992234,
      193.89731395937272,
      33.32212576903473,
      31.116063051073652,
      14.77634254844665,
      145.53896170550894,
      36.40688345206358,
      7.167037869712219,
      102.0185348233322,
      47.52427927082267,
      35.53718554301386,
      7.167037869712219,
      35.19002543898526,
      23.090145394859118,
      35.93872114158033,
      41.15182573908615,
      145.32214344995492,
      42.612734191529505,
      99.86196868648484,
      53.2187397297932,
      38.8959756398038,
      32.80267059477872,
      41.280491762126935,
      38.040148837488985,
      44.2491345546706,
      32.33926659605486,
      53.950196115821086,
      308.9601065546592,
      194.12193854331392,
      43.36943212866851,
      51.93631432050312,
      42.562326765288084,
      17.60710895757484,
      27.240367677277185,
      191.37384531003582,
      148.0702366832428,
      33.81178035275862,
      46.070161202492876,
      36.36106507588288,
      102.01853482324591,
      46.16862605022498,
      28.18625183907993,
      34.125682548123116,
      145.32214344995484,
      237.4253029359646,
      39.38584165413362,
      28.241980487591796,
      7.1674854027003185,
      194.12193854331488,
      38.501573661537535,
      375.58065275035995,
      53.84639275094849,
      33.45497373815368,
      99.27044158987397,
      148.0702366849042,
      52.77199490763837,
      102.01853482315902,
      52.84498369913772,
      145.32214344995484,
      32.48917869363692,
      30.193637930934358,
      53.55170361157872,
      55.96688625306987,
      42.18096704221633,
      34.753198239702044,
      53.23407837213309,
      37.47423162088832,
      46.99011142961958
    ],
    "num_parameters": 2,
    "bic_formula": "BIC = -2 * log_likelihood + k * log(n)"
  }
}