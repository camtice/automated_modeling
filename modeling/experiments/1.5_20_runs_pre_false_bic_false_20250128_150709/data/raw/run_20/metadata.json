{
  "task_description": "In the  experiment, each participant is given 36 different proposals to respond to. Each is designated by a trial number in the data set This gives 36 instances for the learnable parameters to be trained. There is also a pretask where the participant finds a number of tokens that correspond to their contribution to the group. This is designated by the variable \"token_self\". The other variable, \"token_opp\", is the number of tokens found the opponent's and represents the opoonents contribution to the shared pot that will be later divided by the opponent.\n\nNote that in each trial there is a variable amount of money in the combined earning, so that two equal split_self variables do not represent the same \"fairness\".\n\nBelow is the description of each variable in the dataset, which will be followed by information about the data type of the variable:\n\ntrial_type = how much was the contribution [1 = equal, 2 = opponent more, 3 = participant more]\ntrial_role = the role of the participant [1 = responder, 2 = proposer]\ntoken_opp = number of tokens found by the opponent\ntoken_self = number of tokens found by the participant\ncombined_earning = amount of money earned in total (note that each token found is \u00a33)\nsplit_opp = the proposed share of the opponent (in \u00a3)\nsplit_self = the proposed share for the participant (in \u00a3)\nsplitperc_opp = same but in %\nsplit_perc_self = same but in %\naccept = whether the participant responded accept (1) or reject (0)\naccepted_amount = if accepted, what is the amount gain (in \u00a3)\naccepted_perc = same as above but in %\nproposed_perc = when participant is the proposer, what is the % proposed to the opponent\n\nDataset:\n\nDataset Structure:\nVariables available:\n- ID (int64)\n- group (object)\n- trial_number (int64)\n- trial_type (int64)\n- trial_role (int64)\n- token_opp (int64)\n- token_self (int64)\n- combined_earning (int64)\n- split_opp (float64)\n- split_self (float64)\n- splitperc_opp (int64)\n- splitperc_self (int64)\n- accept (float64)\n- accepted_amount (float64)\n- accepted_perc (float64)\n- proposed_perc (float64)\n- proposed_amount (float64)\n\nNumber of observations: 3276\n\nDataset:\n\nDataset Structure:\nVariables available:\n- ID (int64)\n- group (object)\n- trial_number (int64)\n- trial_type (int64)\n- trial_role (int64)\n- token_opp (int64)\n- token_self (int64)\n- combined_earning (int64)\n- split_opp (float64)\n- split_self (float64)\n- splitperc_opp (int64)\n- splitperc_self (int64)\n- accept (float64)\n- accepted_amount (float64)\n- accepted_perc (float64)\n- proposed_perc (float64)\n- proposed_amount (float64)\n\nNumber of observations: 3276",
  "output_description": "Design a computational model for the given task. The model should obtain the utility, (not the probability of choosing an action).  Your goal is to eventually explore the entire space of possible explainations and mechanisms by which the observed behavior arises.\n\nYour model should use the given variables appropriately, but does not necessary need to use all or even most of the variables. Do not include the model for the utility of rejecting an offer. \n\nThe model should:\n1. Predict only responder behavior.\n2. Build on relevant psychological principles.\n3. Be considerate of high covariance between learnable parameters as the model\nwill have to pass parameter recovery tests.\n4. Be applicable to the dataset given within the task description (i.e. the model should be able to be run using only the provided dataset structure).\n5. Not include parameters to simulate general stochasticity of behavior, because this will be handled later by a temperature parameter.\n6. Should have no more than two learnable parameters.\n7. This specific model should calculate the utility of an action, which will then be used to determine\nthe probability of choosing that action. Negative values should represent a negative utility, and thus an unlikly action.\n\nFor any learnable parameters in your model, you must specify finite numerical bounds (it just can not be infinity) in the variable descriptions. However, this bound should be generous. The utility variable may be unbounded (-inf to inf).\n\nFirst, reason step by step about:\n* The key psychological mechanisms involved\n* How these mechanisms interact\n* What mathematical form could capture these interactions\n* What parameters would be needed to calibrate the model\n* How the model variables map to observable behavior\n\nThen, provide your formal mathematical model between <MODEL> tags, followed by variable descriptions between <VARIABLES> tags. Use clear mathematical notation and ensure each variable is fully described. Every variable must be utilized within the mathematical formula provided between <MODEL> and </MODEL>. For variable descriptions, provide them in a JSON format with the following structure: <VARIABLES> Bounds are by default inclusive. Please spell out the greek variable names instead of using the symbols. Finally, you should provide a short description of the model in the summary tags <SUMMARY> </SUMMARY>. This will be used to compare different computational models of the task; it should be concise and purely descriptive. Do not include generic information about the name of the tasks, since that is implied. \n\n{\n  \"variables\": {\n    \"variable_name\": {\n      \"description\": \"Clear description\",\n      \"range\": {\n        \"min\": value,\n        \"max\": value,\n        \"inclusive_min\": boolean,\n        \"inclusive_max\": boolean\n      },\n      \"distribution\": {\n        \"type\": \"distribution type\",\n        \"parameters\": {}\n      },\n      \"learnable\": boolean,\n      \"source\": \"learnable/data/calculated\"\n    }\n  }\n}\n</VARIABLES>\n\nExample #1: \n<EXAMPLE>\n(Model of a Random Choice Task):\nLet me think through this step by step...\n[your reasoning here]\n\n<MODEL>\nU_i = \u03b2 + \u03b5E + \u03b7N\n</MODEL>\n\n<VARIABLES>\n{\n  \"variables\": {\n    \"U_i\": {\n      \"description\": \"Utility of choosing action i\",\n      \"range\": {\n        \"min\": \"-inf\",\n        \"max\": \"inf\"\n      },\n      \"learnable\": false,\n      \"source\": \"calculated\"\n    },\n    \"beta\": {\n      \"description\": \"Base tendency parameter (inherent preference)\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": 1\n      },\n      \"learnable\": true,\n      \"source\": \"learnable\"\n    },\n    \"epsilon\": {\n      \"description\": \"Environmental sensitivity parameter\",\n      \"range\": {\n        \"min\": \"-inf\",\n        \"max\": \"inf\"\n      },\n      \"learnable\": true,\n      \"source\": \"learnable\"\n    },\n    \"E\": {\n      \"description\": \"Environmental cue value\",\n      \"range\": {\n        \"min\": \"-inf\",\n        \"max\": \"inf\"\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"eta\": {\n      \"description\": \"Noise parameter\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": 1,\n        \"exclusive_max\": true\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"N\": {\n      \"description\": \"Random noise drawn from normal distribution N(0,1)\",\n      \"distribution\": {\n        \"type\": \"normal\",\n        \"mean\": 0,\n        \"std\": 1\n      },\n      \"learnable\": false,\n      \"source\": \"calculated\"\n    }\n  }\n}\n</VARIABLES>\n<SUMMARY>\nA linear utility model combining base preference, environmental influence, and stochastic noise. The model uses two learnable parameters: a base tendency parameter (\u03b2) constrained to [0,1] and an unconstrained environmental sensitivity parameter (\u03b5). Environmental cues and normally distributed noise modify the base utility, allowing for both systematic and random variation in choice behavior.\n</SUMMARY>\n</EXAMPLE>\n\nPlease be sure to provide the mathematical formula for the model between <MODEL> and </MODEL>, and the variable descriptions between <VARIABLES> and </VARIABLES>. No description of the model should be provided within the <MODEL> tags.\n\nThe parameter names you choose in your <VARIABLES> section will be used exactly as specified in subsequent code generation. Please choose clear, non-reserved parameter names that can be used directly in Python code. For example, avoid Python reserved words like 'lambda' and use alternatives like 'learning_rate' or 'lambda_param'.",
  "dataset_info": "\nDataset Structure:\nVariables available:\n- ID (int64)\n- group (object)\n- trial_number (int64)\n- trial_type (int64)\n- trial_role (int64)\n- token_opp (int64)\n- token_self (int64)\n- combined_earning (int64)\n- split_opp (float64)\n- split_self (float64)\n- splitperc_opp (int64)\n- splitperc_self (int64)\n- accept (float64)\n- accepted_amount (float64)\n- accepted_perc (float64)\n- proposed_perc (float64)\n- proposed_amount (float64)\n\nNumber of observations: 3276",
  "learnable_parameters": {
    "fairness_weight": {
      "description": "Weight given to fairness in decision making. Higher values indicate stronger aversion to unfair offers.",
      "range": {
        "min": 0,
        "max": 10,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": null,
      "learnable": true,
      "source": "learnable"
    },
    "contribution_sensitivity": {
      "description": "Sensitivity to the ratio of self to opponent contributions. Higher values mean a stronger response to this ratio.",
      "range": {
        "min": 0,
        "max": 10,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": null,
      "learnable": true,
      "source": "learnable"
    }
  },
  "model_specification": "U = fairness_weight * (splitperc_self - 50) + contribution_sensitivity * (token_self / token_opp) * (splitperc_self - 50)",
  "variable_descriptions": {
    "U": {
      "description": "Utility of accepting the offer.",
      "range": {
        "min": "-inf",
        "max": "inf",
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": null,
      "learnable": false,
      "source": "calculated"
    },
    "fairness_weight": {
      "description": "Weight given to fairness in decision making. Higher values indicate stronger aversion to unfair offers.",
      "range": {
        "min": 0,
        "max": 10,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": null,
      "learnable": true,
      "source": "learnable"
    },
    "contribution_sensitivity": {
      "description": "Sensitivity to the ratio of self to opponent contributions. Higher values mean a stronger response to this ratio.",
      "range": {
        "min": 0,
        "max": 10,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": null,
      "learnable": true,
      "source": "learnable"
    },
    "splitperc_self": {
      "description": "Percentage of the combined earnings offered to the participant.",
      "range": {
        "min": 0,
        "max": 100,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": null,
      "learnable": false,
      "source": "data"
    },
    "token_self": {
      "description": "Number of tokens found by the participant.",
      "range": {
        "min": 0,
        "max": "inf",
        "inclusive_min": true,
        "inclusive_max": false
      },
      "distribution": null,
      "learnable": false,
      "source": "data"
    },
    "token_opp": {
      "description": "Number of tokens found by the opponent.",
      "range": {
        "min": 0,
        "max": "inf",
        "inclusive_min": true,
        "inclusive_max": false
      },
      "distribution": null,
      "learnable": false,
      "source": "data"
    }
  },
  "model_summary": "A linear utility model for responder behavior in an ultimatum game.  Utility is a function of the percentage of earnings offered to the responder and the ratio of the responder's contribution to the opponent's contribution. Two learnable parameters capture the weight given to fairness and the sensitivity to the contribution ratio.  The model assumes that a 50% split is considered neutral in terms of fairness.",
  "full_reasoning": "Let me think through this step by step...\n\n**Key Psychological Mechanisms:**\n\nThe key mechanism driving responder behavior in this ultimatum game is fairness perception. Responders don't just consider their own payoff; they also assess the fairness of the proposed split relative to their contribution and the opponent's contribution.  A perceived unfair offer (where the split significantly deviates from a perceived fair share based on relative contributions) will likely lead to rejection, even if accepting would yield a positive monetary gain.\n\nAnother important mechanism is the relative contribution of each player. If the proposer's contribution is significantly larger than the responder's, the responder might be more accepting of a relatively smaller share.  Conversely, a responder with a larger contribution might expect a more equitable split.\n\n**How these Mechanisms Interact:**\n\nFairness perception is influenced by the ratio of self-contribution to opponent's contribution and the proportion of the combined earnings each player is offered.  A simple ratio of contributions, alongside the percentage split offered to the responder, seems sufficient to capture the main effect. A higher ratio (self-contribution/opponent-contribution) could indicate a higher expectation for a larger share, whilst a smaller ratio could reduce this expectation.\n\n\n**Mathematical Form:**\n\nThe utility of accepting an offer can be modeled as a function of these two factors.  A linear combination seems appropriate initially, allowing for easy interpretation and parameter recovery.\n\n**Parameters:**\n\nWe need two learnable parameters:\n1.  `fairness_weight`: Reflects the importance of fairness in the responder's decision-making. A higher value indicates a stronger aversion to unfair offers.  Bounds: [0,10].\n2. `contribution_sensitivity`: Represents the sensitivity to relative contributions. A higher value signifies that the responder is more sensitive to the contribution ratio. Bounds: [0, 10].\n\n\n**How Model Variables Map to Observable Behavior:**\n\nThe model maps the `token_self`, `token_opp`, `splitperc_self` variables to the utility of accepting the offer. A higher utility indicates a greater likelihood of accepting the offer.  The model parameters `fairness_weight` and `contribution_sensitivity` allow us to tune the model's sensitivity to fairness and relative contributions.\n\n<MODEL>\nU = fairness_weight * (splitperc_self - 50) + contribution_sensitivity * (token_self / token_opp) * (splitperc_self - 50)\n</MODEL>\n\n<VARIABLES>\n{\n  \"variables\": {\n    \"U\": {\n      \"description\": \"Utility of accepting the offer.\",\n      \"range\": {\n        \"min\": \"-inf\",\n        \"max\": \"inf\"\n      },\n      \"learnable\": false,\n      \"source\": \"calculated\"\n    },\n    \"fairness_weight\": {\n      \"description\": \"Weight given to fairness in decision making. Higher values indicate stronger aversion to unfair offers.\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": 10,\n        \"inclusive_min\": true,\n        \"inclusive_max\": true\n      },\n      \"learnable\": true,\n      \"source\": \"learnable\"\n    },\n    \"contribution_sensitivity\": {\n      \"description\": \"Sensitivity to the ratio of self to opponent contributions. Higher values mean a stronger response to this ratio.\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": 10,\n        \"inclusive_min\": true,\n        \"inclusive_max\": true\n      },\n      \"learnable\": true,\n      \"source\": \"learnable\"\n    },\n    \"splitperc_self\": {\n      \"description\": \"Percentage of the combined earnings offered to the participant.\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": 100,\n        \"inclusive_min\": true,\n        \"inclusive_max\": true\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"token_self\": {\n      \"description\": \"Number of tokens found by the participant.\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": \"inf\",\n        \"inclusive_min\": true,\n        \"inclusive_max\": false\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"token_opp\": {\n      \"description\": \"Number of tokens found by the opponent.\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": \"inf\",\n        \"inclusive_min\": true,\n        \"inclusive_max\": false\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    }\n  }\n}\n</VARIABLES>\n\n<SUMMARY>\nA linear utility model for responder behavior in an ultimatum game.  Utility is a function of the percentage of earnings offered to the responder and the ratio of the responder's contribution to the opponent's contribution. Two learnable parameters capture the weight given to fairness and the sensitivity to the contribution ratio.  The model assumes that a 50% split is considered neutral in terms of fairness.\n</SUMMARY>\n",
  "simulation_code": "def simulate_model(trial_data, fairness_weight=1, contribution_sensitivity=1):\n    utility_values = []\n    for trial in trial_data:\n        try:\n            splitperc_self = trial['splitperc_self']\n            token_self = trial['token_self']\n            token_opp = trial['token_opp']\n\n            # Handle division by zero\n            if token_opp == 0:\n                contribution_ratio = 0  # or a very large number, depending on your interpretation\n            else:\n                contribution_ratio = token_self / token_opp\n\n            utility = fairness_weight * (splitperc_self - 50) + contribution_sensitivity * contribution_ratio * (splitperc_self - 50)\n            utility_values.append(utility)\n        except KeyError as e:\n            print(f\"Warning: Missing key '{e}' in trial data. Skipping trial.\")\n            utility_values.append(None) #Or handle the missing data differently, e.g., raise an exception\n    return utility_values",
  "fitting_results": [
    {
      "fairness_weight": 5.142455443637432,
      "contribution_sensitivity": 5.285807057064363,
      "success": true,
      "log_likelihood": -2.0794415377798354,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 6.290864482471094,
      "contribution_sensitivity": 1.4883119688779496,
      "success": true,
      "log_likelihood": -347.4671984054628,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 5.9176826154006275,
      "contribution_sensitivity": 0.8662287012856447,
      "success": true,
      "log_likelihood": -370.4927786307239,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "contribution_sensitivity": 0.0952077735842591,
      "success": true,
      "log_likelihood": -19.95764935741601,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "contribution_sensitivity": 0.09910637350535363,
      "success": true,
      "log_likelihood": -19.67431809875898,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "contribution_sensitivity": 0.019551149455126697,
      "success": true,
      "log_likelihood": -24.64608300107008,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 8.534710448722052,
      "contribution_sensitivity": 1.412807751737234,
      "success": true,
      "log_likelihood": -761.9325222289979,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 4.9850117579375475,
      "contribution_sensitivity": 2.988518058534842,
      "success": true,
      "log_likelihood": -485.6222187138206,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "contribution_sensitivity": 0.0,
      "success": true,
      "log_likelihood": -24.95329849295801,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "contribution_sensitivity": 0.11748484712300758,
      "success": true,
      "log_likelihood": -18.36973305573285,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "contribution_sensitivity": 0.10259677295882723,
      "success": true,
      "log_likelihood": -19.422218979820208,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 3.4317664235854006,
      "contribution_sensitivity": 4.351854991320041,
      "success": true,
      "log_likelihood": -25.10529246779747,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "contribution_sensitivity": 0.09685616039972297,
      "success": true,
      "log_likelihood": -19.83761240325464,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "contribution_sensitivity": 0.0,
      "success": true,
      "log_likelihood": -24.95329849295801,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 7.66446587816401,
      "contribution_sensitivity": 3.369205143114027,
      "success": true,
      "log_likelihood": -761.9325222290621,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "contribution_sensitivity": 0.0,
      "success": true,
      "log_likelihood": -24.95329849295801,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "contribution_sensitivity": 0.0,
      "success": true,
      "log_likelihood": -24.95329849295801,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 4.072638288106669,
      "contribution_sensitivity": 6.984245685535812,
      "success": true,
      "log_likelihood": -646.8032672034072,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "contribution_sensitivity": 0.0,
      "success": true,
      "log_likelihood": -24.95329849295801,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "contribution_sensitivity": 0.0,
      "success": true,
      "log_likelihood": -24.95329849295801,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "contribution_sensitivity": 0.04533867650028723,
      "success": true,
      "log_likelihood": -23.443786153913535,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 6.931758376451834,
      "contribution_sensitivity": 0.7781615149569893,
      "success": true,
      "log_likelihood": -646.8032652565084,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 4.175362094907096,
      "contribution_sensitivity": 3.9876772503648916,
      "success": true,
      "log_likelihood": -232.3375348477935,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 4.278602797844134,
      "contribution_sensitivity": 9.435754803974008,
      "success": true,
      "log_likelihood": -370.49305641813584,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "contribution_sensitivity": 0.06102068205803214,
      "success": true,
      "log_likelihood": -22.42835350638459,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 8.373235612172472,
      "contribution_sensitivity": 1.3576174661286278,
      "success": true,
      "log_likelihood": -416.54475827820164,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.02944438601902178,
      "contribution_sensitivity": 0.01679096046879139,
      "success": true,
      "log_likelihood": -23.691374139460613,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "contribution_sensitivity": 0.20279330051142203,
      "success": true,
      "log_likelihood": -13.37444885021475,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "contribution_sensitivity": 0.0,
      "success": true,
      "log_likelihood": -24.95329849295801,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "contribution_sensitivity": 0.0,
      "success": true,
      "log_likelihood": -24.95329849295801,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "contribution_sensitivity": 1.518484364686103e-16,
      "success": true,
      "log_likelihood": -24.95329849295807,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 6.501051015423855,
      "contribution_sensitivity": 2.485342640609134,
      "success": true,
      "log_likelihood": -2.0794415377798354,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.09277448392521873,
      "contribution_sensitivity": 0.0,
      "success": true,
      "log_likelihood": -20.956108798642507,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 3.9222263975954546,
      "contribution_sensitivity": 4.2357490534543825,
      "success": true,
      "log_likelihood": -255.36301384641365,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "contribution_sensitivity": 0.0,
      "success": true,
      "log_likelihood": -24.95329849295801,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 5.152728785399607,
      "contribution_sensitivity": 2.481686651700372,
      "success": true,
      "log_likelihood": -462.59631230604,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "contribution_sensitivity": 0.009664983648489911,
      "success": true,
      "log_likelihood": -24.87692439078761,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "contribution_sensitivity": 0.06102085752945434,
      "success": true,
      "log_likelihood": -22.428353506389787,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "contribution_sensitivity": 0.0,
      "success": true,
      "log_likelihood": -24.95329849295801,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "contribution_sensitivity": 0.0,
      "success": true,
      "log_likelihood": -24.95329849295801,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "contribution_sensitivity": 0.010177847713742773,
      "success": true,
      "log_likelihood": -24.86865646259381,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "contribution_sensitivity": 0.18805910411706314,
      "success": true,
      "log_likelihood": -14.10662995555487,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "contribution_sensitivity": 0.0,
      "success": true,
      "log_likelihood": -24.95329849295801,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 6.79612476746427,
      "contribution_sensitivity": 0.20279543087859322,
      "success": true,
      "log_likelihood": -393.5188754780517,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "contribution_sensitivity": 0.02766424025639456,
      "success": true,
      "log_likelihood": -24.35136417621818,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "contribution_sensitivity": 0.0,
      "success": true,
      "log_likelihood": -24.95329849295801,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.052789094924193605,
      "contribution_sensitivity": 0.0,
      "success": true,
      "log_likelihood": -23.47263278704232,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 8.001868063991425,
      "contribution_sensitivity": 0.23196974958715866,
      "success": true,
      "log_likelihood": -255.36380170464795,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "contribution_sensitivity": 0.09910639136396981,
      "success": true,
      "log_likelihood": -19.674318098674828,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.018441378260330554,
      "contribution_sensitivity": 0.0032858059756312287,
      "success": true,
      "log_likelihood": -24.677484592886955,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "contribution_sensitivity": 0.0,
      "success": true,
      "log_likelihood": -24.95329849295801,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 5.042801231961812,
      "contribution_sensitivity": 2.8866447821344554,
      "success": true,
      "log_likelihood": -48.131143337406506,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 6.899220993237969,
      "contribution_sensitivity": 0.32770123735661955,
      "success": true,
      "log_likelihood": -370.4930464764447,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 9.752209425686072,
      "contribution_sensitivity": 9.006047669077986,
      "success": true,
      "log_likelihood": -416.5447582785082,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "contribution_sensitivity": 0.0869154645533344,
      "success": true,
      "log_likelihood": -20.564278481953846,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "contribution_sensitivity": 0.15701888440562167,
      "success": true,
      "log_likelihood": -15.82367966087651,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "contribution_sensitivity": 0.18359386807462105,
      "success": true,
      "log_likelihood": -14.338890157642926,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 5.483346081172769,
      "contribution_sensitivity": 4.22331871014437,
      "success": true,
      "log_likelihood": -669.8291181775618,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.33516150524594324,
      "contribution_sensitivity": 5.973919781434522,
      "success": true,
      "log_likelihood": -25.105093021158005,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 5.011507013878824,
      "contribution_sensitivity": 3.348654780491083,
      "success": true,
      "log_likelihood": -600.7515335116905,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "contribution_sensitivity": 0.007086470587365434,
      "success": true,
      "log_likelihood": -24.911867808818005,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 8.606571836278064,
      "contribution_sensitivity": 1.602624678050446,
      "success": true,
      "log_likelihood": -347.46720548833855,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 5.853860614939829,
      "contribution_sensitivity": 8.278170551623061,
      "success": true,
      "log_likelihood": -2.0794415377798354,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "contribution_sensitivity": 0.06871436857696682,
      "success": true,
      "log_likelihood": -21.888234242172178,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.06954039054063503,
      "contribution_sensitivity": 0.16582081414856303,
      "success": true,
      "log_likelihood": -11.632559094496845,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 4.888476165990955,
      "contribution_sensitivity": 6.986484036869384,
      "success": true,
      "log_likelihood": -393.5189073421493,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "contribution_sensitivity": 0.0,
      "success": true,
      "log_likelihood": -24.95329849295801,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "contribution_sensitivity": 0.0,
      "success": true,
      "log_likelihood": -24.95329849295801,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 2.79111347634071,
      "contribution_sensitivity": 6.500794150686545,
      "success": true,
      "log_likelihood": -393.518143889274,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 2.8431934486647576,
      "contribution_sensitivity": 7.391881860603267,
      "success": true,
      "log_likelihood": -692.8549061463993,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "contribution_sensitivity": 0.4662386872796885,
      "success": true,
      "log_likelihood": -6.069571278311158,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.3594170533460627,
      "contribution_sensitivity": 0.0,
      "success": true,
      "log_likelihood": -7.244862910146777,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "contribution_sensitivity": 0.052539674761548166,
      "success": true,
      "log_likelihood": -22.99554604682005,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "contribution_sensitivity": 0.0,
      "success": true,
      "log_likelihood": -24.95329849295801,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.02884678618030738,
      "contribution_sensitivity": 0.0,
      "success": true,
      "log_likelihood": -24.48805994824862,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "contribution_sensitivity": 0.0,
      "success": true,
      "log_likelihood": -24.95329849295801,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "contribution_sensitivity": 0.0,
      "success": true,
      "log_likelihood": -24.95329849295801,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 7.44328032284035,
      "contribution_sensitivity": 2.5563492709474156,
      "success": true,
      "log_likelihood": -25.10529246782033,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "contribution_sensitivity": 0.0,
      "success": true,
      "log_likelihood": -24.95329849295801,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 8.70954985909586,
      "contribution_sensitivity": 6.769608976097342,
      "success": true,
      "log_likelihood": -2.0794415377798354,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.02430417679980128,
      "contribution_sensitivity": 0.0,
      "success": true,
      "log_likelihood": -24.62091582324821,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "contribution_sensitivity": 1.9135974978854747e-16,
      "success": true,
      "log_likelihood": -24.95329849295807,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.10903345300987835,
      "contribution_sensitivity": 0.24105234109111162,
      "success": true,
      "log_likelihood": -7.707010914904845,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 4.240900702424543,
      "contribution_sensitivity": 6.491751015193569,
      "success": true,
      "log_likelihood": -347.4672049329815,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "contribution_sensitivity": 0.0,
      "success": true,
      "log_likelihood": -24.95329849295801,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "contribution_sensitivity": 0.6349729625252555,
      "success": true,
      "log_likelihood": -4.279753711381817,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "contribution_sensitivity": 0.0,
      "success": true,
      "log_likelihood": -24.95329849295801,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "contribution_sensitivity": 0.17001946597363163,
      "success": true,
      "log_likelihood": -15.074911404270427,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "contribution_sensitivity": 0.0,
      "success": true,
      "log_likelihood": -24.95329849295801,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.05441877401218216,
      "contribution_sensitivity": 0.02375760634007739,
      "success": true,
      "log_likelihood": -21.765935921869136,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_weight": 0.0,
      "contribution_sensitivity": 0.0,
      "success": true,
      "log_likelihood": -24.95329849295801,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    }
  ],
  "parameter_recovery": {
    "correlations": {
      "fairness_weight": {
        "r": 0.10954304147708173,
        "p": 0.27795402097214034
      },
      "contribution_sensitivity": {
        "r": -0.02962659162034509,
        "p": 0.7698238204591994
      }
    }
  },
  "bic_results": {
    "average_bic": 272.3962780037871,
    "individual_bics": [
      11.32592095247189,
      702.1014346878378,
      748.15259513836,
      47.08233659174424,
      46.51567407443018,
      56.45920387905238,
      1531.032082334908,
      978.4114753045534,
      57.073634862828236,
      43.90650398837792,
      46.011475836552634,
      57.377622812507155,
      46.842262683421495,
      57.073634862828236,
      1531.0320823350364,
      57.073634862828236,
      57.073634862828236,
      1300.7735722837267,
      57.073634862828236,
      57.073634862828236,
      54.05461018473929,
      1300.773568389929,
      471.84210757249923,
      748.1531507131839,
      52.023744889681396,
      840.2565544333155,
      54.549786155833445,
      33.91593557734172,
      57.073634862828236,
      57.073634862828236,
      57.07363486282836,
      11.32592095247189,
      49.07925547419723,
      517.8930655697395,
      57.073634862828236,
      932.3596624889922,
      56.92088665848744,
      52.02374488969179,
      57.073634862828236,
      57.073634862828236,
      56.904350802099835,
      35.38029778802196,
      57.073634862828236,
      794.2047888330156,
      55.86976622934858,
      57.073634862828236,
      54.112303450996855,
      517.8946412862082,
      46.515674074261874,
      56.52200706268613,
      57.073634862828236,
      103.42932455172523,
      748.1531308298016,
      840.2565544339286,
      48.29559484081991,
      38.81439719866524,
      35.84481819219807,
      1346.8252742320358,
      57.37722391922823,
      1208.6701049002932,
      56.99077349454823,
      702.1014488535893,
      11.32592095247189,
      50.943506361256574,
      30.432156065905907,
      794.2048525612108,
      57.073634862828236,
      57.073634862828236,
      794.2033256554602,
      1392.876850169711,
      19.306180433534536,
      21.656763697205776,
      53.15812997055232,
      57.073634862828236,
      56.143157773409456,
      57.073634862828236,
      57.073634862828236,
      57.37762281255288,
      57.073634862828236,
      11.32592095247189,
      56.40886952340864,
      57.07363486282836,
      22.58105970672191,
      702.1014477428752,
      57.073634862828236,
      15.726545299675854,
      57.073634862828236,
      37.31686068545307,
      57.073634862828236,
      50.69890972065049,
      57.073634862828236
    ],
    "num_parameters": 2,
    "bic_formula": "BIC = -2 * log_likelihood + k * log(n)"
  }
}