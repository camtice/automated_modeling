run_number,average_bic,model_specification,model_summary,timestamp,self_interest_weight_recovery,fairness_weight_recovery,alpha_recovery,gamma_recovery,relative_gain_weight_recovery,opponent_greed_sensitivity_recovery,contribution_sensitivity_recovery,inequity_sensitivity_recovery,contextual_fairness_weight_recovery,relative_advantage_weight_recovery,satisficing_threshold_recovery,risk_aversion_recovery,w_self_recovery,w_ref_recovery,relative_advantage_sensitivity_recovery,social_pref_weight_recovery,social_comparison_weight_recovery,aspiration_level_recovery,contribution_ratio_weight_recovery,reference_deviation_sensitivity_recovery,equity_weight_recovery
15,29.66308006380666,U_accept = self_interest_weight * split_self + social_comparison_weight * (split_self - split_opp) * (token_self / (token_self + token_opp)),"A utility model for responder acceptance decisions that combines self-interest (absolute monetary gain) with a social comparison term. The social comparison term is the difference between the responder's and opponent's shares, scaled by the responder's relative contribution in the token-finding task.  The model uses two learnable parameters: `self_interest_weight` and `social_comparison_weight`.",20250128_151642,0.6606742119991693,,,,,,,,,,,,,,,,0.9387843466989884,,,,
3,30.9878108944191,U_accept = alpha * split_self - gamma * abs(splitperc_self - splitperc_opp) * abs( (token_self / (token_self + token_opp)) - (splitperc_self / (splitperc_self + splitperc_opp)) ),"A utility model for responder behavior incorporating both self-interest and inequity aversion.  Utility is a weighted sum of the responder's monetary gain and the absolute difference between their percentage share and the opponent's percentage share, further modulated by the difference between the relative contributions of tokens. The model uses two learnable parameters: `alpha` for self-interest weighting and `gamma` for inequity aversion weighting.",20250128_151642,,,0.7456810267545356,0.709496849000205,,,,,,,,,,,,,,,,,
13,30.999087095591328,U_accept =  self_interest_weight * split_self + relative_advantage_sensitivity * (split_self - (token_self / (token_self + token_opp)) * combined_earning),"A utility model for responder acceptance decisions combining self-interest and a relative advantage term. The relative advantage is computed as the difference between the actual split and the participant's proportional share based on token contributions, weighted by a sensitivity parameter. The model has two learnable parameters: `self_interest_weight` and `relative_advantage_sensitivity`.",20250128_151642,0.7742820650792305,,,,,,,,,,,,,,0.8511817553455912,,,,,,
12,30.99997442617524,U_accept = w_self * split_self + w_ref * (split_self - (token_self / (token_self + token_opp)) * combined_earning) * (1 + (split_self < (token_self / (token_self + token_opp)) * combined_earning) ),A prospect theory-based utility model for responder acceptance decisions.  The model incorporates self-interest and a reference-dependent component reflecting gain/loss relative to a fair share based on token contribution. Loss aversion is included through a multiplication factor applied to the reference-dependent component. The model has two learnable parameters:  `w_self` and `w_ref`.,20250128_151642,,,,,,,,,,,,,0.8172089501448478,0.8461975057348388,,,,,,,
7,31.41073427055872,U_accept = self_interest_weight * split_self + contextual_fairness_weight * ( (splitperc_self - (token_self / (token_self + token_opp)) * 100) * (combined_earning / 100) * trial_type_modifier ),"A utility model for responder acceptance decisions that incorporates self-interest and contextual fairness.  The utility is a weighted sum of the responder's monetary gain and a fairness term, where the fairness term considers the deviation from a proportional split adjusted by total earnings and a trial type modifier. The model uses two learnable parameters: self-interest_weight and contextual_fairness_weight.",20250128_151642,0.8782878439417151,,,,,,,,0.8174049623578233,,,,,,,,,,,,
17,32.17401461965422,U_accept =  relative_gain_weight * (split_self / (3 * token_self) - split_opp / (3 * token_opp)) + contribution_ratio_weight * (split_self / (3 * token_self)) / (split_opp / (3 * token_opp)),"A utility model for responder acceptance decisions based on relative gain and contribution ratio.  The model weighs the difference between the participant's and opponent's relative gains and the ratio of their relative gains, reflecting a sensitivity to both absolute and proportional fairness relative to their contributions.  It uses two learnable parameters: `relative_gain_weight` and `contribution_ratio_weight`.",20250128_151642,,,,,0.9581118055699644,,,,,,,,,,,,,,0.8879851508182675,,
2,32.739266953758325,U_accept =  self_interest_weight * split_self + fairness_weight * (splitperc_self - (token_self / (token_self + token_opp)) * 100),"A utility model for responder behavior in a bargaining game. The model combines the monetary gain for the responder (split_self) with a fairness term, weighted by two learnable parameters: `self_interest_weight` and `fairness_weight`. The fairness term is calculated as the difference between the responder's percentage share and a percentage share proportional to their contribution relative to the opponent's contribution.",20250128_151642,0.5919253153512127,0.8487821557076417,,,,,,,,,,,,,,,,,,,
5,32.80112445461135,U_accept = relative_gain_weight * (split_self / (3 * token_self)) - opponent_greed_sensitivity * (split_opp / (3 * token_opp)),A utility model for responder acceptance decisions based on relative gain and opponent's perceived greed.  Utility is a weighted difference between the responder's monetary gain relative to their contribution and the opponent's monetary gain relative to their contribution. The model uses two learnable parameters: `relative_gain_weight` and `opponent_greed_sensitivity`.,20250128_151642,,,,,0.7818976403627881,0.869140423695286,,,,,,,,,,,,,,,
6,34.888052879162274,U_accept = contribution_sensitivity * (split_self / (token_self + token_opp)) * token_self + inequity_sensitivity * (splitperc_self - (token_self / (token_self + token_opp)) * 100),"A utility model for responder acceptance decisions, weighing the monetary gain from the offer based on relative contribution to the total tokens and sensitivity to proportional inequity. The model uses two learnable parameters: `contribution_sensitivity` reflecting the importance of relative contribution and `inequity_sensitivity` representing the aversion to proportional inequity.  The utility is a weighted sum of the monetary gain adjusted by relative contribution and the deviation of the percentage share from the proportional contribution.",20250128_151642,,,,,,,0.32791397289816004,0.6707466467482154,,,,,,,,,,,,,
18,40.675661601203224,U_accept =  self_interest_weight * split_self + reference_deviation_sensitivity * (split_self - (token_self / (token_self + token_opp) * combined_earning) * (1 + (trial_type - 2) * 0.2)) * ( (token_self / (token_self + token_opp) * combined_earning)),"A utility model for responder acceptance decisions that combines self-interest with a reference-dependent fairness term. The reference point for fairness is calculated proportionally to token contributions and adjusted by the trial type, capturing context.  A sensitivity parameter modulates the impact of deviations from this adjusted reference point. The model utilizes two learnable parameters: `self_interest_weight` and `reference_deviation_sensitivity`.",20250128_151642,0.6426055799115626,,,,,,,,,,,,,,,,,,,0.9198080580771628,
20,43.74430852852482,U_accept =  self_interest_weight * split_self + equity_weight * (split_self / token_self) / (split_opp / token_opp),"A utility model for responder acceptance decisions based on a weighted combination of self-interest (monetary gain) and perceived equity. Equity is defined as the ratio of the participant's return per token to the opponent's return per token. The model utilizes two learnable parameters: `self_interest_weight` and `equity_weight`, representing the importance of monetary gain and equity, respectively.",20250128_151642,0.6552608066804749,,,,,,,,,,,,,,,,,,,,0.34817601034246776
11,44.36042810504737,"U_accept = self_interest_weight * split_self + satisficing_threshold * max(0, (split_self / token_self) - (split_opp / token_opp))",A utility model for responder acceptance decisions based on a weighted self-interest component and a satisficing threshold.  The satisficing threshold determines the positive utility from exceeding the opponent's return per token. The model uses two learnable parameters: self_interest_weight and satisficing_threshold.,20250128_151642,0.776422459336071,,,,,,,,,,-0.019849625040862413,,,,,,,,,,
10,44.59026813051575,U_accept =  self_interest_weight * split_self + relative_advantage_weight * (split_self - split_opp) * (token_self / token_opp) * trial_type_modifier + risk_aversion * (token_self/(token_self+token_opp) )* (split_self-split_opp),"A utility model for responder acceptance decisions incorporating self-interest, relative advantage, trial type, and risk aversion modulated by the pre-task token count. The utility is a weighted sum of self-interest, relative advantage (scaled by the ratio of tokens and a trial type modifier) and a risk-aversion term modulated by the relative token contribution and the difference between the participant's and opponent's shares. The model has two learnable parameters: self_interest_weight and relative_advantage_weight, and a risk aversion parameter that interacts with the token counts.",20250128_151642,0.5456109838749866,,,,,,,,,0.8904840473140307,,0.2634739756134908,,,,,,,,,
9,44.87934454430942,U_accept = self_interest_weight * split_self + H( (splitperc_self / (token_self/(token_self + token_opp)) * 100) - satisficing_threshold ) * self_interest_weight * split_self,"A utility model for responder acceptance decisions combining self-interest and a satisficing threshold. The model posits that responders have a weighted preference for higher monetary gains (self-interest) but also accept offers if they exceed a minimum percentage gain relative to their contribution, irrespective of further self-interest gains.  This minimum acceptable percentage gain is a learnable parameter, along with the self-interest weight.",20250128_151642,0.7778258659663866,,,,,,,,,,0.06632722411153633,,,,,,,,,,
4,45.501966552029494,U_accept =  self_interest_weight * split_self + fairness_weight * abs(split_self - (token_self / (token_self + token_opp)) * combined_earning),"A utility model for responder acceptance decisions based on self-interest and reference-dependent fairness.  Utility is a weighted sum of the responder's monetary gain and the absolute deviation of their share from a fair share proportional to their relative contribution, calculated with respect to the total combined earnings.  The model uses two learnable parameters representing the weights for self-interest and fairness.",20250128_151642,0.5206074592306004,0.3496423973642101,,,,,,,,,,,,,,,,,,,
16,46.155796298633895,U_accept =  (split_self  / (aspiration_level * (1 + (token_opp / token_self)))) * self_interest_weight,A multiplicative utility model for responder acceptance decisions. Utility is calculated as the ratio of the responder's monetary gain to an aspiration level. The aspiration level is a learnable parameter and is scaled by a factor that depends on the relative contributions of the responder and the opponent.  The model also uses a learnable parameter to modulate the impact of self-interest.,20250128_151642,0.4233044402317898,,,,,,,,,,,,,,,,,0.6799739750501097,,,
14,106.55741688021601,U_accept = self_interest_weight * split_self + social_pref_weight * ( (splitperc_self - splitperc_opp) * (token_self / (token_self + token_opp)) ) * trial_type_modifier,"A utility model for responder acceptance decisions incorporating self-interest and a context-dependent social preference term.  The social preference component is modulated by the difference in percentage shares between the participant and the opponent, scaled by the participant's relative contribution and a contextual modifier based on the trial type. The model uses two learnable parameters: `self_interest_weight` and `social_pref_weight`.",20250128_151642,0.2508689275957499,,,,,,,,,,,,,,,0.8373002792765809,,,,,
8,115.01079733732045,U_accept = self_interest_weight * split_self + relative_advantage_weight * (splitperc_self - splitperc_opp) * (token_self / token_opp),"A utility model for responder behavior that combines self-interest and a relative advantage term.  The relative advantage term is the difference between the responder's and opponent's percentage shares, scaled by the ratio of the responder's tokens to the opponent's tokens. The model uses two learnable parameters: `self_interest_weight` and `relative_advantage_weight`.",20250128_151642,0.3702869302175367,,,,,,,,,0.7957917225655194,,,,,,,,,,,
1,,U_accept = self_interest_sensitivity * split_self + fairness_weight * (splitperc_self - (token_self / (token_self + token_opp)) * 100),"A utility model for responder behavior in a bargaining game.  The model combines the monetary gain for the responder with a fairness term, weighted by two learnable parameters: `fairness_weight` representing the relative importance of fairness, and `self_interest_sensitivity` representing the sensitivity to changes in monetary gain. The fairness term is calculated as the difference between the responder's share and a share proportional to their contribution relative to the opponent's contribution.",20250128_151642,,,,,,,,,,,,,,,,,,,,,
19,,U_accept =  (split_self / token_self) - (minimum_return_per_token * (1 + fairness_adjustment * ( (token_self / (token_self + token_opp)) - 0.5 ) )),"A satisficing model of responder behavior. Utility is determined by comparing the actual return per token to a minimum acceptable return, adjusted by a fairness parameter that depends on the relative token contributions. The model employs two learnable parameters: a minimum return per token and a fairness adjustment factor.",20250128_151642,,,,,,,,,,,,,,,,,,,,,
