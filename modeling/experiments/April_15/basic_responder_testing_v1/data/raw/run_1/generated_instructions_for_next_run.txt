Be VERY considerate of high covariance between learnable parameters as the model. Have an appropriate number or learnable parameters, with a slight bias for less learnable parameters. Specifically, try to think about parameters that impact different aspects of the utility function.

First, reason step by step about:
* The key psychological mechanisms involved
* How these mechanisms interact
* What mathematical form could capture these interactions, especially non-linear relationships
* What parameters would be needed to calibrate the model, focusing on parameters that are not highly correlated
* How the model variables map to observable behavior

Consider the following when designing your model:

*   **Non-linear Utility:** Explore models where utility is not a simple linear combination of factors. Consider diminishing sensitivity to fairness, where the impact of unfairness is smaller at larger deviations from the fair split using a nonlinear function such as log or exponential function.
*   **Interaction Effects:** Investigate interactions between fairness and combined earnings. For example, the influence of fairness may be amplified when combined earnings are low, and attenuated when earnings are high.
*   **Loss Aversion:** Incorporate a loss aversion parameter that differentially weights gains and losses relative to a reference point (e.g., the fair split).
*   **Proposer Intentions/Trust:** Model the impact of proposer behavior (e.g., how much they proposed for themselves) on responder decisions. Consider that extremely unfair divisions could be seen as aggressive actions rather than simply unfair.
*   **Individual Differences:** While aiming for parsimony, consider if a more complex model with additional parameters could better capture individual differences in fairness preferences or other psychological factors.
*   **Anchoring Bias:** The initial split_opp might act as an anchor, influencing the perception of split_self. Explore models that incorporate this anchoring effect.

When deciding on your model, aim for the highest accuracy while maintaining parameter recovery (r > 0.7 is ideal for all parameters). A lower BIC is also desirable, but not at the cost of accuracy or parameter recovery.
</think>