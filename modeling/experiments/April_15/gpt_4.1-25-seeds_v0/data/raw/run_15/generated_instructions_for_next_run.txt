

---

**INSTRUCTIONS – RUN 16**

Your task is to create a creative, high-performance computational model to predict responder (accept/reject) decisions in this dataset. Your prime objective is to **maximize parameter recovery** for all three parameters, while maintaining strong accuracy and robust coverage of trial types.

#### **1. Parameter Recovery & Identifiability—CRUCIAL**
- **Each learnable parameter** must exert a broad, monotonic, and non-redundant effect on the model’s output in *realistic* trial data (not just hypothetical cases):
    - *Bonus and penalty parameters especially*: No redundancy, flat, or vanishing influence under any plausible trial data configuration.
- **MANDATORY:** For each learnable parameter, provide a brief but *systematic sweep*—tabulate or describe how output U varies as that parameter moves from min to max, with all other parameters fixed, for at least two realistic trial setups (use high and low combined_earning, token ratios, and split_self).
- *Explicitly demonstrate* that each parameter is recoverable (e.g., swapping values for bonus/penalty shows predictable, non-overlapping U changes).

#### **2. Three-Parameter, Region-Exclusive Structure**
- Structure your model into **three regions** (threshold, penalty, bonus), with exactly one learnable parameter acting in each:
    - **Threshold:** Determines the fairness “cutoff”; can be weighted combination of token ratio, money, or even a soft boundary (encouraged).
    - **Penalty Region:** Applies to offers below threshold; must be flexible (e.g., exponential-minus-one, power, or sigmoid); prefer forms where a single parameter controls both scale and shape.
    - **Bonus Region:** Applies to offers above threshold; *strongly prefer functions* where context (combined_earning) is amplified and the parameter affects both curvature and amplitude (e.g., context-weighted softplus or flexible power, NOT just log).
- **Soft or blurred thresholds highly encouraged:** Consider using continuous boundary, e.g., with a smooth switching function or probabilistic transition. Justify region coverage empirically.

#### **3. Explicitly Address Weak Parameter Recovery**
- *Identify and mitigate* any risk of parameter entanglement, redundant regions, or cases where bonus/penalty parameter has negligible effect.
- *Penalize* excessive normalization or rescaling in any function that might mask parameter impact—no general normalization that erases parameter influence.
- Offer concrete solutions for increasing effect size and separation (e.g., multiplying surplus/malus in bonus/penalty by context or introducing a learnable offset/curvature term).

#### **4. Simulation Coverage & Edge Case Analysis**
- For each parameter, systematically show effects across both “typical” and “challenging” trial contexts (low/high pot, disadvantage/favor, small/large splits).
- At least once, show a parameter sweep where utility flips sign or switches region as expected.

#### **5. Formatting & Output**
- Start with detailed simulation-driven parameter sweep/edge-case justification for each parameter.
- Between <MODEL> and </MODEL> tags: only strict mathematics—NO extra description.
- Use a variable/parameter JSON block in <VARIABLES>, precisely marking which are learnable.
- Specify <target_variable> with the dataset variable being predicted.
- Provide a concise, technical <SUMMARY> (1–2 lines).

#### **6. Higher-Order/Creative Bonuses & Penalties (Challenge)**
- Strongly consider separating amplitude from curvature in at least one region (e.g., a bonus function like amp·softplus(steep·surplus) or penalty as scale·exp(shape·deficit)–1).
- Encourage interaction terms, e.g., bonus scales with both surplus and combined_earning or non-linear context.

#### **7. Explicit Prohibitions**
- No parameter crossing region boundaries.
- No bonus/penalty forms that are mirrored.
- No forms that reduce any parameter effect to near-zero for wide data ranges.
- No identically scaled (cloned) functions in both penalty and bonus.
- No “dead” or vanishing parameters under realistic data.

**Remember:** Your model is only valid if you’ve demonstrated, with systematic simulations, that all parameters are highly recoverable, non-redundant, and impactful. Breaking conventions for the sake of parameter separation and recovery is encouraged. Seek original, innovative, and empirically justified model structures!