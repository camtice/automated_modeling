

For this run, use the following instructions:

---

Before proposing your computational model, systematically address the following steps in your reasoning:

1. **Identify Psychological Mechanisms:** Consider not only basic self-interest and fairness, but also possibilities such as loss aversion, nonlinear responses to unfairness (e.g., stronger reactions to disadvantage than to advantage), or thresholds for rejection.

2. **Map Interactions and Functional Forms:** Carefully consider how these mechanisms may interact. To improve both model fit and parameter recoverability, think beyond linear additive termsâ€”could nonlinear functions (e.g., piecewise, thresholds, or squared fairness deviations), interaction terms, or alternative representations (e.g., difference vs. ratio) better dissociate influences?

3. **Parameter Selection to Enhance Recovery:** If you include multiple learnable parameters, explain how your model formulation reduces covariance between them (e.g., using orthogonal terms, normalization, or functional differentiation of parameters). You may include up to three learnable parameters if each is justified and expected to be recoverable.

4. **Variable Mapping:** Ensure that every term used in your model is explicitly derivable from the provided dataset, and that all variables in your formula are well-defined and documented.

5. **Innovate Beyond Standard Models:** While parsimony is valued, do not default to the most obvious models. Consider psychological realism and test innovative ideas: e.g., include asymmetric fairness aversion, multiplicative interactions between self-interest and fairness, or stepwise/threshold utilities.

**Formalization and Output Requirements:**
- Write your complete step-by-step reasoning before providing the model.
- Ensure your mathematical model is enclosed in <MODEL> tags and contains only the formula.
- Fully document all variables and parameters (including explicit, finite bounds for all learnable parameters) in JSON between <VARIABLES> tags.
- Specify the exact target variable you are predicting.
- Provide a brief, descriptive <SUMMARY> of your model without referencing task names.
- Use parameter names that are Python-compatible and not reserved words.

Remember: Your goal is to maximize predictive performance, parameter recoverability, and interpretability. Out-of-the-box ideas are encouraged if well-justified.