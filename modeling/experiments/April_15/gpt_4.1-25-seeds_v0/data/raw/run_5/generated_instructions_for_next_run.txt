

---

**UPDATED INSTRUCTIONS**

Before formalizing your computational model, follow these expanded and more rigorous steps. Your goal is to maximize parameter recoverability, avoid parameter tradeoff/redundancy, and capture nonlinear, psychologically plausible responder mechanisms beyond linear or simple threshold models.

1. **Carefully Delineate Nonlinear and Context-Sensitive Mechanisms:**
   - Explicitly map where discontinuous, thresholded, or sigmoid-like changes in utility are plausible.
   - Consider forms that sharply distinguish “below threshold” (unfair) from “above threshold” (fair or generous), including hard indicator functions, step switches, or nonlinear penalties (e.g., quadratic, exponential, or log penalty for unfairness).
   - Probe the idea of *asymmetric sensitivity*: Rejection due to offers *below* entitlement is stronger—build different parameterized penalties or bonus regions for each.
   - Examine whether absolute (split_self) and proportional (relative to entitlement) offer effects interact in a way that explains observed behavior (e.g., unfairness only matters for small offers, or large pots amplify perceived unfairness).

2. **Ensure Orthogonal, Distinct, and Recoverable Parameter Roles:**
   - For each learnable parameter, pre-commit in your reasoning to how you will make it uniquely impactful—even if tau and alpha both affect acceptance, describe how their effects will be behaviorally separable and why.
   - Avoid multiple parameters in the same zone unless they work on non-overlapping regions (e.g., one governs “below threshold” penalty, one “above threshold” bonus, or one controls nonlinear growth, the other threshold placement).
   - Strongly consider models with s-shaped, piecewise, or multiplicative transformations so each parameter modulates a non-redundant mechanism.
   - *REQUIRED: In your reasoning section, conceptually visualize or describe the predicted shape or parameter effects (e.g., “A change in alpha only steepens rejection when offers are unfair, but does not affect offers above threshold,” etc).*

3. **Evolve Beyond Additive and Linear Models:**
   - *Mandatory*: Include at least one interaction or nonlinear (quadratic, multiplicative, or exponentiated) component. Purely additive models are discouraged unless justified by compelling parsimony and recoverability.
   - Explore hard or soft threshold logics, such as “utility = very negative if (offer < fairness_threshold), quickly rising near threshold,” or exponential penalty for large unfairness.
   - If using “penalty below threshold,” consider non-linear growth (e.g., quadratic, log, or saturating) so that alpha does not simply mimic tau.
   - Consider “loss aversion” analogs (different parameterizations for negative vs. positive deviation from the threshold) or “stepwise” utility regions.

4. **Exploit Both Offer Amount and Fairness Contextually:**
   - Derive model terms that leverage both absolute and proportional offer information, or that contextualize unfairness by pot size, entitlement, or other variables in the dataset.

5. **Prioritize Parameter Identifiability and Psychological Interpretability:**
   - Use a maximum of three well-separated, non-overlapping learnable parameters. Each should be maximally recoverable, as supported by the distinct functional role in the model.
   - In stepwise reasoning, propose simulations or analytic checks for parameter identifiability and describe how the model can be tested for tradeoffs.
   - Suggest briefly (in your reasoning) how the model will discriminate between, e.g., a very strict unfairness-averse participant and a generous but greedy one—i.e., what parameter patterns would look like for the two.

6. **Formalization and Output Format:**
   - After your reasoning, supply the full mathematical model in <MODEL> tags. No explanatory text in those tags.
   - List and clearly document all variables and parameters, specifying explicit numerical bounds (finite, inclusive) for each learnable parameter, in JSON between <VARIABLES> tags.
   - Specify the target variable in <target_variable> tags.
   - Provide a purely descriptive <SUMMARY> (do not mention the task name).
   - Use Python-safe, non-reserved variable/parameter names.

**Additional Creative Challenge:**  
Attempt a model structure that uses at least one of the following: a non-additive or saturating penalty, a loss/gain asymmetry, or an explicit discrete switch (indicator or step function), justified by data structure and psychological plausibility.

Be bold and innovative in structure, while always grounding parameters in uniquely identifiable psychological processes.

---