{
  "task_description": "In the  experiment, each participant is given 36 different proposals to respond to. Each is designated by a trial number in the data set This gives 36 instances for the learnable parameters to be trained. There is also a pretask where the participant finds a number of tokens that correspond to their contribution to the group. This is designated by the variable \"token_self\". The other variable, \"token_opp\", is the number of tokens found the opponent's and represents the opoonents contribution to the shared pot that will be later divided by the opponent.\n\nNote that in each trial there is a variable amount of money in the combined earning, so that two equal split_self variables do not represent the same \"fairness\".\n\nBelow is the description of each variable in the dataset, which will be followed by information about the data type of the variable:\n\ntrial_type = how much was the contribution [1 = equal, 2 = opponent more, 3 = participant more]\ntrial_role = the role of the participant [1 = responder, 2 = proposer]\ntoken_opp = number of tokens found by the opponent\ntoken_self = number of tokens found by the participant\ncombined_earning = amount of money earned in total (note that each token found is \u00a33)\nsplit_opp = the proposed share of the opponent (in \u00a3)\nsplit_self = the proposed share for the participant (in \u00a3)\nsplitperc_opp = same but in %\nsplit_perc_self = same but in %\naccept = whether the participant responded accept (1) or reject (0)\naccepted_amount = if accepted, what is the amount gain (in \u00a3)\naccepted_perc = same as above but in %\nproposed_perc = when participant is the proposer, what is the % proposed to the opponent\n\nDataset:\n\nDataset Structure:\nVariables available:\n- ID (int64)\n- group (object)\n- trial_number (int64)\n- trial_type (int64)\n- trial_role (int64)\n- token_opp (int64)\n- token_self (int64)\n- combined_earning (int64)\n- split_opp (float64)\n- split_self (float64)\n- splitperc_opp (int64)\n- splitperc_self (int64)\n- accept (float64)\n- accepted_amount (float64)\n- accepted_perc (float64)\n- proposed_perc (float64)\n- proposed_amount (float64)\n\nNumber of observations: 3276\n\nDataset:\n\nDataset Structure:\nVariables available:\n- ID (int64)\n- group (object)\n- trial_number (int64)\n- trial_type (int64)\n- trial_role (int64)\n- token_opp (int64)\n- token_self (int64)\n- combined_earning (int64)\n- split_opp (float64)\n- split_self (float64)\n- splitperc_opp (int64)\n- splitperc_self (int64)\n- accept (float64)\n- accepted_amount (float64)\n- accepted_perc (float64)\n- proposed_perc (float64)\n- proposed_amount (float64)\n\nNumber of observations: 3276",
  "output_description": "Design a computational model for the given task. The model should obtain the utility, (not the probability of choosing an action).  Your goal is to eventually explore the entire space of possible explainations and mechanisms by which the observed behavior arises.\n\nYour model should use the given variables appropriately, but does not necessary need to use all or even most of the variables. Do not include the model for the utility of rejecting an offer. \n\nThe model should:\n1. Predict only responder behavior.\n2. Build on relevant psychological principles.\n3. Be considerate of high covariance between learnable parameters as the model\nwill have to pass parameter recovery tests.\n4. Be applicable to the dataset given within the task description (i.e. the model should be able to be run using only the provided dataset structure).\n5. Not include parameters to simulate general stochasticity of behavior, because this will be handled later by a temperature parameter.\n6. Should have no more than two learnable parameters.\n7. This specific model should calculate the utility of an action, which will then be used to determine\nthe probability of choosing that action. Negative values should represent a negative utility, and thus an unlikly action.\n\nFor any learnable parameters in your model, you must specify finite numerical bounds (it just can not be infinity) in the variable descriptions. However, this bound should be generous. The utility variable may be unbounded (-inf to inf).\n\nFirst, reason step by step about:\n* The key psychological mechanisms involved\n* How these mechanisms interact\n* What mathematical form could capture these interactions\n* What parameters would be needed to calibrate the model\n* How the model variables map to observable behavior\n\nThen, provide your formal mathematical model between <MODEL> tags, followed by variable descriptions between <VARIABLES> tags. Use clear mathematical notation and ensure each variable is fully described. Every variable must be utilized within the mathematical formula provided between <MODEL> and </MODEL>. For variable descriptions, provide them in a JSON format with the following structure: <VARIABLES> Bounds are by default inclusive. Please spell out the greek variable names instead of using the symbols. Finally, you should provide a short description of the model in the summary tags <SUMMARY> </SUMMARY>. This will be used to compare different computational models of the task; it should be concise and purely descriptive. Do not include generic information about the name of the tasks, since that is implied. \n\n{\n  \"variables\": {\n    \"variable_name\": {\n      \"description\": \"Clear description\",\n      \"range\": {\n        \"min\": value,\n        \"max\": value,\n        \"inclusive_min\": boolean,\n        \"inclusive_max\": boolean\n      },\n      \"distribution\": {\n        \"type\": \"distribution type\",\n        \"parameters\": {}\n      },\n      \"learnable\": boolean,\n      \"source\": \"learnable/data/calculated\"\n    }\n  }\n}\n</VARIABLES>\n\nExample #1: \n<EXAMPLE>\n(Model of a Random Choice Task):\nLet me think through this step by step...\n[your reasoning here]\n\n<MODEL>\nU_i = \u03b2 + \u03b5E + \u03b7N\n</MODEL>\n\n<VARIABLES>\n{\n  \"variables\": {\n    \"U_i\": {\n      \"description\": \"Utility of choosing action i\",\n      \"range\": {\n        \"min\": \"-inf\",\n        \"max\": \"inf\"\n      },\n      \"learnable\": false,\n      \"source\": \"calculated\"\n    },\n    \"beta\": {\n      \"description\": \"Base tendency parameter (inherent preference)\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": 1\n      },\n      \"learnable\": true,\n      \"source\": \"learnable\"\n    },\n    \"epsilon\": {\n      \"description\": \"Environmental sensitivity parameter\",\n      \"range\": {\n        \"min\": \"-inf\",\n        \"max\": \"inf\"\n      },\n      \"learnable\": true,\n      \"source\": \"learnable\"\n    },\n    \"E\": {\n      \"description\": \"Environmental cue value\",\n      \"range\": {\n        \"min\": \"-inf\",\n        \"max\": \"inf\"\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"eta\": {\n      \"description\": \"Noise parameter\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": 1,\n        \"exclusive_max\": true\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"N\": {\n      \"description\": \"Random noise drawn from normal distribution N(0,1)\",\n      \"distribution\": {\n        \"type\": \"normal\",\n        \"mean\": 0,\n        \"std\": 1\n      },\n      \"learnable\": false,\n      \"source\": \"calculated\"\n    }\n  }\n}\n</VARIABLES>\n<SUMMARY>\nA linear utility model combining base preference, environmental influence, and stochastic noise. The model uses two learnable parameters: a base tendency parameter (\u03b2) constrained to [0,1] and an unconstrained environmental sensitivity parameter (\u03b5). Environmental cues and normally distributed noise modify the base utility, allowing for both systematic and random variation in choice behavior.\n</SUMMARY>\n</EXAMPLE>\n\nPlease be sure to provide the mathematical formula for the model between <MODEL> and </MODEL>, and the variable descriptions between <VARIABLES> and </VARIABLES>. No description of the model should be provided within the <MODEL> tags.\n\nThe parameter names you choose in your <VARIABLES> section will be used exactly as specified in subsequent code generation. Please choose clear, non-reserved parameter names that can be used directly in Python code. For example, avoid Python reserved words like 'lambda' and use alternatives like 'learning_rate' or 'lambda_param'. DO NOT USE 'lambda' AS A PARAMETER NAME.",
  "dataset_info": "\nDataset Structure:\nVariables available:\n- ID (int64)\n- group (object)\n- trial_number (int64)\n- trial_type (int64)\n- trial_role (int64)\n- token_opp (int64)\n- token_self (int64)\n- combined_earning (int64)\n- split_opp (float64)\n- split_self (float64)\n- splitperc_opp (int64)\n- splitperc_self (int64)\n- accept (float64)\n- accepted_amount (float64)\n- accepted_perc (float64)\n- proposed_perc (float64)\n- proposed_amount (float64)\n\nNumber of observations: 3276",
  "learnable_parameters": {
    "delta": {
      "description": "Self-interest sensitivity parameter; scales the value of the offered monetary share",
      "range": {
        "min": 0.0,
        "max": 10.0,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": null,
      "learnable": true,
      "source": "learnable"
    },
    "gamma": {
      "description": "Fairness penalty parameter; scales the cost associated with receiving less than the fair share",
      "range": {
        "min": 0.0,
        "max": 10.0,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": null,
      "learnable": true,
      "source": "learnable"
    }
  },
  "model_specification": "U_accept = delta * split_self - gamma * max(0, (token_self / (token_self + token_opp)) * combined_earning - split_self)",
  "variable_descriptions": {
    "U_accept": {
      "description": "Utility of accepting an offer, calculated from the monetary share and fairness penalty",
      "range": {
        "min": "-inf",
        "max": "inf",
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": null,
      "learnable": false,
      "source": "calculated"
    },
    "delta": {
      "description": "Self-interest sensitivity parameter; scales the value of the offered monetary share",
      "range": {
        "min": 0.0,
        "max": 10.0,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": null,
      "learnable": true,
      "source": "learnable"
    },
    "gamma": {
      "description": "Fairness penalty parameter; scales the cost associated with receiving less than the fair share",
      "range": {
        "min": 0.0,
        "max": 10.0,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": null,
      "learnable": true,
      "source": "learnable"
    },
    "split_self": {
      "description": "Offered monetary share for the participant (in \u00a3)",
      "range": {
        "min": 0.0,
        "max": "inf",
        "inclusive_min": true,
        "inclusive_max": false
      },
      "distribution": null,
      "learnable": false,
      "source": "data"
    },
    "token_self": {
      "description": "Number of tokens found by the participant, representing their contribution to the group",
      "range": {
        "min": 0,
        "max": "inf",
        "inclusive_min": true,
        "inclusive_max": false
      },
      "distribution": null,
      "learnable": false,
      "source": "data"
    },
    "token_opp": {
      "description": "Number of tokens found by the opponent, representing their contribution to the group",
      "range": {
        "min": 0,
        "max": "inf",
        "inclusive_min": true,
        "inclusive_max": false
      },
      "distribution": null,
      "learnable": false,
      "source": "data"
    },
    "combined_earning": {
      "description": "Total amount of money earned in a trial (each token is worth \u00a33)",
      "range": {
        "min": 0.0,
        "max": "inf",
        "inclusive_min": true,
        "inclusive_max": false
      },
      "distribution": null,
      "learnable": false,
      "source": "data"
    }
  },
  "model_summary": "A dual-parameter utility model for responders that integrates self-interest with fairness considerations. The model computes a fairness benchmark from relative token contributions and penalizes offers below this fair share. The utility of accepting is a weighted combination of the monetary offer and a fairness loss, with learnable parameters delta (reward sensitivity) and gamma (inequity aversion).",
  "full_reasoning": "Step 1. Key Psychological Mechanisms\n\n\u2022 Self\u2010interest versus fairness: Responders evaluate offers based on their own monetary gain (split_self) relative to a fairness benchmark. This benchmark is computed from their own contribution (token_self) relative to the total contributions (token_self + token_opp) applied to the combined earning.  \n\u2022 Disadvantageous inequity aversion: When an offer gives less than the \u201cfair\u201d share, the responder is likely to penalize the offer by subtracting some additional \u201cfairness loss\u201d from the monetary gain.  \n\u2022 Trade\u2010off integration: The model posits that responders trade off between the raw monetary amount (self\u2010interest) and a penalty for offers falling below the fairness benchmark.\n\nStep 2. Interaction of Mechanisms\n\n\u2022 The model compares the offered participant share (split_self) to the fair share computed as  \n\u2003\u2003expected_self = (token_self / (token_self + token_opp)) \u00d7 combined_earning  \n\u2022 When the offered split is below this fair share, the fairness loss is proportional to the shortfall.  \n\u2022 Finally, the final utility of accepting is given by aggregating the self\u2010interest value (weighted by a parameter \u03b4) and subtracting the fairness penalty (weighted by a parameter \u03b3).  \n\nStep 3. Mathematical Form\n\nLet:  \n\u2003expected_self = (token_self / (token_self + token_opp)) \u00d7 combined_earning  \n\u2003shortfall = max(0, expected_self \u2212 split_self)\n\nThen, the utility for accepting an offer is given by:  \n\u2003U_accept = \u03b4 \u00d7 split_self \u2212 \u03b3 \u00d7 shortfall\n\nStep 4. Learnable Parameters and Mapping to Behavior\n\n\u2022 \u03b4 (delta) scales the monetary value of the participant\u2019s share, capturing baseline self\u2010interest or \u201creward sensitivity\u201d.  \n\u2022 \u03b3 (gamma) scales the penalty associated with receiving less than what is \u201cfair\u201d based on contributions.  \n\u2022 Both parameters are learnable and will be recovered from observed responder behavior.  \n\u2022 The model only covers responder actions and does not account for the utility associated with rejection.\n\nBelow is the formal model specification.\n\n<MODEL>\nU_accept = delta * split_self - gamma * max(0, (token_self / (token_self + token_opp)) * combined_earning - split_self)\n</MODEL>\n\n<VARIABLES>\n{\n  \"variables\": {\n    \"U_accept\": {\n      \"description\": \"Utility of accepting an offer, calculated from the monetary share and fairness penalty\",\n      \"range\": {\"min\": \"-inf\", \"max\": \"inf\", \"inclusive_min\": true, \"inclusive_max\": true},\n      \"learnable\": false,\n      \"source\": \"calculated\"\n    },\n    \"delta\": {\n      \"description\": \"Self-interest sensitivity parameter; scales the value of the offered monetary share\",\n      \"range\": {\"min\": 0.0, \"max\": 10.0, \"inclusive_min\": true, \"inclusive_max\": true},\n      \"learnable\": true,\n      \"source\": \"learnable\"\n    },\n    \"gamma\": {\n      \"description\": \"Fairness penalty parameter; scales the cost associated with receiving less than the fair share\",\n      \"range\": {\"min\": 0.0, \"max\": 10.0, \"inclusive_min\": true, \"inclusive_max\": true},\n      \"learnable\": true,\n      \"source\": \"learnable\"\n    },\n    \"split_self\": {\n      \"description\": \"Offered monetary share for the participant (in \u00a3)\",\n      \"range\": {\"min\": 0.0, \"max\": \"inf\", \"inclusive_min\": true, \"inclusive_max\": false},\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"token_self\": {\n      \"description\": \"Number of tokens found by the participant, representing their contribution to the group\",\n      \"range\": {\"min\": 0, \"max\": \"inf\", \"inclusive_min\": true, \"inclusive_max\": false},\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"token_opp\": {\n      \"description\": \"Number of tokens found by the opponent, representing their contribution to the group\",\n      \"range\": {\"min\": 0, \"max\": \"inf\", \"inclusive_min\": true, \"inclusive_max\": false},\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"combined_earning\": {\n      \"description\": \"Total amount of money earned in a trial (each token is worth \u00a33)\",\n      \"range\": {\"min\": 0.0, \"max\": \"inf\", \"inclusive_min\": true, \"inclusive_max\": false},\n      \"learnable\": false,\n      \"source\": \"data\"\n    }\n  }\n}\n</VARIABLES>\n\n<SUMMARY>\nA dual-parameter utility model for responders that integrates self-interest with fairness considerations. The model computes a fairness benchmark from relative token contributions and penalizes offers below this fair share. The utility of accepting is a weighted combination of the monetary offer and a fairness loss, with learnable parameters delta (reward sensitivity) and gamma (inequity aversion).\n</SUMMARY>",
  "simulation_code": "def simulate_model(trial_data, delta=1.0, gamma=1.0):\n    utility_values = []\n    for trial in trial_data:\n        split_self = trial.get(\"split_self\", 0.0)\n        token_self = trial.get(\"token_self\", 0)\n        token_opp = trial.get(\"token_opp\", 0)\n        combined_earning = trial.get(\"combined_earning\", 0.0)\n        \n        # Make sure to avoid division by zero\n        if token_self + token_opp > 0:\n            expected_self = (token_self / (token_self + token_opp)) * combined_earning\n        else:\n            expected_self = 0  # If both tokens are zero, set expected_self to zero\n\n        shortfall = max(0, expected_self - split_self)\n        \n        # Compute the utility of accepting\n        U_accept = (delta * split_self) - (gamma * shortfall)\n        utility_values.append(U_accept)\n        \n    return utility_values",
  "fitting_results": [
    {
      "delta": 0.0,
      "gamma": 3.806050517094857,
      "success": true,
      "log_likelihood": -7.93151221872063,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 1.1798538343044238,
      "gamma": 1.7641872979218343,
      "success": true,
      "log_likelihood": -16.281262682887206,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 2.4998478710894556,
      "gamma": 3.5889044599054523,
      "success": true,
      "log_likelihood": -10.04656539582257,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 1.418159343697284,
      "gamma": 2.4612569508649678,
      "success": true,
      "log_likelihood": -13.653156181742618,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 2.028746107624123,
      "gamma": 3.868990404200933,
      "success": true,
      "log_likelihood": -9.84802447279303,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 2.419637896182332,
      "gamma": 2.5403103560326494,
      "success": true,
      "log_likelihood": -11.042332345021642,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 10.0,
      "gamma": 0.0,
      "success": true,
      "log_likelihood": -0.006472187475228865,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 2.416929463297228,
      "gamma": 2.441735289841591,
      "success": true,
      "log_likelihood": -11.096668638229566,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 10.0,
      "gamma": 0.0,
      "success": true,
      "log_likelihood": -0.0064721874752288674,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 1.5441837440347028,
      "gamma": 3.275825196998784,
      "success": true,
      "log_likelihood": -11.16653134036142,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 5.893152503413169,
      "gamma": 10.0,
      "success": true,
      "log_likelihood": -2.2405174095475395,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 0.1416623320930833,
      "gamma": 3.4120767482029697,
      "success": true,
      "log_likelihood": -9.090310470119459,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 2.2353448979398323,
      "gamma": 4.416839129448997,
      "success": true,
      "log_likelihood": -8.81615696386168,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 10.0,
      "gamma": 0.0,
      "success": true,
      "log_likelihood": -0.006472187475228864,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 10.0,
      "gamma": 0.0,
      "success": true,
      "log_likelihood": -0.006472187475228864,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 10.0,
      "gamma": 0.0,
      "success": true,
      "log_likelihood": -0.006472187475228867,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 10.0,
      "gamma": 0.0,
      "success": true,
      "log_likelihood": -0.006472187475228865,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 8.776462136529588,
      "gamma": 4.207323085238467,
      "success": true,
      "log_likelihood": -2.7461714766772247,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 3.5716920364245923,
      "gamma": 1.522512420443844,
      "success": true,
      "log_likelihood": -6.65003548959401,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 10.0,
      "gamma": 0.0,
      "success": true,
      "log_likelihood": -0.006472187475228866,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 1.3997618965084124,
      "gamma": 1.9300690439077866,
      "success": true,
      "log_likelihood": -15.240283485502198,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 3.1465047438975557,
      "gamma": 1.5080716959731828,
      "success": true,
      "log_likelihood": -7.9395171796800454,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 0.6803335216148055,
      "gamma": 1.4190187156131455,
      "success": true,
      "log_likelihood": -18.32423206954428,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 1.1922152759571356,
      "gamma": 1.5114405678916112,
      "success": true,
      "log_likelihood": -16.99121846570688,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 1.3696466645152516,
      "gamma": 2.382788493658234,
      "success": true,
      "log_likelihood": -13.939297529890009,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 1.5707611001471946,
      "gamma": 1.7910129984472067,
      "success": true,
      "log_likelihood": -14.894718696264452,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 2.1869977213962066,
      "gamma": 2.7376101389699783,
      "success": true,
      "log_likelihood": -11.622843834316583,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 2.895498604326495,
      "gamma": 10.0,
      "success": true,
      "log_likelihood": -3.93866518874655,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 2.3820609158695585,
      "gamma": 0.8624556801298,
      "success": true,
      "log_likelihood": -9.361863495231928,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 1.3686481766597156,
      "gamma": 0.7717177060014684,
      "success": true,
      "log_likelihood": -15.90279686786358,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 10.0,
      "gamma": 0.0,
      "success": true,
      "log_likelihood": -0.006472187475228866,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 0.0,
      "gamma": 3.806002184862235,
      "success": true,
      "log_likelihood": -7.93151221824955,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 0.5302945732919079,
      "gamma": 0.9385712277742219,
      "success": true,
      "log_likelihood": -21.05837517839624,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 0.986003785042872,
      "gamma": 2.0198523084273123,
      "success": true,
      "log_likelihood": -15.41219497253952,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 10.0,
      "gamma": 0.0,
      "success": true,
      "log_likelihood": -0.006472187475228865,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 1.9073908295809183,
      "gamma": 1.5867266384780954,
      "success": true,
      "log_likelihood": -13.363774643085565,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 4.158472327265265,
      "gamma": 3.688729649993147,
      "success": true,
      "log_likelihood": -7.009324201883298,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 1.4182390129388496,
      "gamma": 2.278266662396345,
      "success": true,
      "log_likelihood": -14.22566912811959,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 1.1824257256832014,
      "gamma": 1.0867708767568272,
      "success": true,
      "log_likelihood": -17.719069088198815,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 1.9042166768881594,
      "gamma": 0.3196819345730443,
      "success": true,
      "log_likelihood": -9.541669267940101,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 1.1277715860901023,
      "gamma": 1.3062981593431875,
      "success": true,
      "log_likelihood": -17.74625432352824,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 0.4485607885614201,
      "gamma": 2.4821381546553316,
      "success": true,
      "log_likelihood": -12.426179406746229,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 10.0,
      "gamma": 0.0,
      "success": true,
      "log_likelihood": -23.013701505177707,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 1.355893197824301,
      "gamma": 1.5925228150236241,
      "success": true,
      "log_likelihood": -16.13931957486399,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 1.8991428586952348,
      "gamma": 2.0331879306645115,
      "success": true,
      "log_likelihood": -13.25755328120513,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 1.396196935408981,
      "gamma": 0.7958778729036006,
      "success": true,
      "log_likelihood": -15.740340539687253,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 1.399752286499039,
      "gamma": 1.9300540414480154,
      "success": true,
      "log_likelihood": -15.24028348808101,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 0.6486300099679345,
      "gamma": 1.2985991381156654,
      "success": true,
      "log_likelihood": -18.995917545501204,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 1.4370715960362266,
      "gamma": 3.2198477473848204,
      "success": true,
      "log_likelihood": -11.269891204951469,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 0.3872495568301975,
      "gamma": 0.3456424085010165,
      "success": true,
      "log_likelihood": -23.58999698435777,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 1.2183543977643896,
      "gamma": 0.8529218156792369,
      "success": true,
      "log_likelihood": -17.33769282049965,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 0.0,
      "gamma": 1.7887881713432499,
      "success": true,
      "log_likelihood": -13.305935033374091,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 0.9537906452247903,
      "gamma": 1.0885852407064964,
      "success": true,
      "log_likelihood": -19.08444485411915,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 0.6554069647574292,
      "gamma": 0.4590146979999031,
      "success": true,
      "log_likelihood": -21.64957631839204,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 0.4463400027791255,
      "gamma": 1.233256191502684,
      "success": true,
      "log_likelihood": -19.14585130434034,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 3.8088277852070886,
      "gamma": 9.45551921930817,
      "success": true,
      "log_likelihood": -4.334577663756626,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 1.0033107564806019,
      "gamma": 3.4213829919082333,
      "success": true,
      "log_likelihood": -10.386539880767263,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 1.1376585003970816,
      "gamma": 0.0,
      "success": true,
      "log_likelihood": -13.680488206347542,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 0.07468480110094511,
      "gamma": 2.935712661794257,
      "success": true,
      "log_likelihood": -9.825736629768363,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 1.431318689439927,
      "gamma": 0.46460378007692404,
      "success": true,
      "log_likelihood": -14.062138466405786,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 0.9003074252674687,
      "gamma": 0.8693001853896598,
      "success": true,
      "log_likelihood": -19.76650471314442,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 1.3305961827410677,
      "gamma": 2.1438792187145377,
      "success": true,
      "log_likelihood": -14.763159511865835,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 0.0,
      "gamma": 3.8060113127327004,
      "success": true,
      "log_likelihood": -7.931512218272268,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 0.6307149096160773,
      "gamma": 0.9771328725008726,
      "success": true,
      "log_likelihood": -20.702526780253642,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 0.6965819910049119,
      "gamma": 3.0401472106009613,
      "success": true,
      "log_likelihood": -11.083994119232887,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 1.631289338692612,
      "gamma": 1.9393221966177987,
      "success": true,
      "log_likelihood": -14.437445103464857,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 2.309593804331963,
      "gamma": 0.5413850127134066,
      "success": true,
      "log_likelihood": -8.407405638163597,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 1.870058936818906,
      "gamma": 0.7069738617527141,
      "success": true,
      "log_likelihood": -11.779558638960031,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 1.4154075319609056,
      "gamma": 1.470399556137733,
      "success": true,
      "log_likelihood": -16.029288799869825,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 1.3560458152888497,
      "gamma": 0.0,
      "success": true,
      "log_likelihood": -11.540124489362187,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 0.5984557735987317,
      "gamma": 10.0,
      "success": true,
      "log_likelihood": -1.9338074776613106,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 0.037237736055068034,
      "gamma": 1.9994233836073905,
      "success": true,
      "log_likelihood": -12.59848204921062,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 1.370625948579074,
      "gamma": 1.8171504663909017,
      "success": true,
      "log_likelihood": -15.606148306032937,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 1.402868644713321,
      "gamma": 0.5665079511398037,
      "success": true,
      "log_likelihood": -14.833726682762716,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 0.46060301279970184,
      "gamma": 0.621934051578179,
      "success": true,
      "log_likelihood": -22.663571894007703,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 1.8873606083730314,
      "gamma": 1.7135657405674136,
      "success": true,
      "log_likelihood": -13.469173045004796,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 2.079352358329278,
      "gamma": 0.2043495791992343,
      "success": true,
      "log_likelihood": -7.80217368646572,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 0.0,
      "gamma": 3.4522005251137404,
      "success": true,
      "log_likelihood": -8.474686531171,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 0.5316307348724926,
      "gamma": 0.2670013286479398,
      "success": true,
      "log_likelihood": -22.370656052688656,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 0.0,
      "gamma": 3.8060042985961062,
      "success": true,
      "log_likelihood": -7.931512218252063,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 0.46845150727934576,
      "gamma": 0.5662254351616034,
      "success": true,
      "log_likelihood": -22.80911463590406,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 1.3338943301847406,
      "gamma": 0.0,
      "success": true,
      "log_likelihood": -11.741860654224755,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 0.0,
      "gamma": 2.6892638800476676,
      "success": true,
      "log_likelihood": -10.063924084618613,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 2.5057292617249773,
      "gamma": 3.2626284856478267,
      "success": true,
      "log_likelihood": -10.339432461628938,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 0.33959281162980526,
      "gamma": 0.19845282865348313,
      "success": true,
      "log_likelihood": -23.819155639829617,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 0.16603761242097503,
      "gamma": 4.314174191585108,
      "success": true,
      "log_likelihood": -7.785436408188112,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 1.1454636444072197,
      "gamma": 0.8855454063641245,
      "success": true,
      "log_likelihood": -17.959641902200623,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 0.3165123580517614,
      "gamma": 2.157840407845369,
      "success": true,
      "log_likelihood": -13.317159678574745,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 3.1025371103071766,
      "gamma": 0.6755468415122111,
      "success": true,
      "log_likelihood": -5.817840711831515,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 1.54591422650184,
      "gamma": 1.9787899979183217,
      "success": true,
      "log_likelihood": -14.679368249100804,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 0.7069675556206148,
      "gamma": 0.3327134436182299,
      "success": true,
      "log_likelihood": -20.833123314130013,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    }
  ],
  "parameter_recovery": {
    "correlations": {
      "delta": {
        "r": 0.8224378413985136,
        "p": 9.510776948342168e-26
      },
      "gamma": {
        "r": 0.8960957873607102,
        "p": 2.4098139190365273e-36
      }
    },
    "plots_directory": "param_recovery_plots"
  },
  "average_bic": 31.09249842662133,
  "bic_Control": 26.156370691761847,
  "bic_Cocaine": 35.514446189099615,
  "bic_error": "'ModelOutput' object has no attribute 'metrics'"
}