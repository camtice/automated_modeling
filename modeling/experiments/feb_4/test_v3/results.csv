run_number,average_bic,model_specification,model_summary,version,self_interest_weight_recovery,fairness_weight_recovery
1,,U_accept =  self_interest_weight * split_self + fairness_weight * (splitperc_self / (token_self / (token_self + token_opp)) ),A linear utility model for responder acceptance decisions in an ultimatum game. Utility is a weighted sum of the absolute monetary offer and a fairness term calculated using the percentage share and the relative contributions of the participants. Two learnable parameters represent the weights of self-interest and fairness.,v3,0.15003292755345896,-0.14072400514355188
2,,U_accept =  self_interest_weight * split_self + fairness_weight * ( (splitperc_self / splitperc_opp) / (token_self / token_opp) ),"A linear utility model for responder acceptance decisions, weighing self-interest (monetary gain) against fairness (ratio of percentage split to relative contribution). Two learnable parameters represent the weights of self-interest and fairness.",v3,0.7341989452199175,0.5352610434313594
3,,U_accept = self_interest_weight * split_self + fairness_sensitivity * (splitperc_self - (token_self / (token_self + token_opp)) * 100) * (token_self / (token_self + token_opp)),"A utility model for responder acceptance decisions that combines self-interest (monetary gain) with a fairness term.  The fairness term is the difference between the received percentage and the expected percentage based on relative contribution, scaled by the relative contribution itself. Two learnable parameters represent the weight of self-interest and the sensitivity to fairness.",v3,,
