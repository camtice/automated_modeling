run_number,average_bic,model_specification,model_summary,version,fairness_weight_recovery,min_acceptable_perc_recovery
1,,U_accept =  (split_perc_self / ((token_self / (token_self + token_opp)) * 100)) * fairness_weight + (split_self / combined_earning) * (1 - fairness_weight) - min_acceptable_perc,"A utility model for responder behavior in an economic game, considering both fairness and self-interest. Utility is calculated as a weighted average of a fairness term (ratio of received percentage to contribution percentage) and a self-interest term (percentage of combined earnings received). A minimum acceptable percentage parameter accounts for situations where offers might be rejected even if fair due to being too small. The model uses two learnable parameters:  `fairness_weight` and `min_acceptable_perc`.",v6,0.12173101225630426,0.409283730243832
2,,U_accept = equity_sensitivity * (split_perc_self / ((token_self / (token_self + token_opp)) * 100)) + (1 - equity_sensitivity) * (split_self / combined_earning),"A utility model for responder behavior based on a weighted average of equity and self-interest.  The model uses one learnable parameter, `equity_sensitivity`, representing the individual's sensitivity to fairness.  The utility of accepting an offer is calculated as a weighted combination of the ratio of the received percentage to the contribution percentage and the percentage of total earnings received.",v6,,
3,,U_accept =  fairness_weight * (splitperc_self / ((token_self / (token_self + token_opp)) * 100)) + (1 - fairness_weight) * split_self,"A utility model for responder behavior in an economic game, combining fairness and self-interest. Utility is a weighted average of perceived fairness (ratio of received percentage to contribution percentage) and monetary gain. The model uses one learnable parameter: `fairness_weight`, representing the relative importance of fairness.",v6,0.7467100571152158,
