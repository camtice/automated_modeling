run_number,average_bic,bic_control,bic_cocaine,model_specification,model_summary,version,b0_recovery,b1_recovery,beta0_recovery,beta_diff_recovery,beta1_recovery,lambda_param_recovery,f_selfish_recovery,delta_recovery,eta_recovery,beta_recovery,m_recovery,a_recovery,b_recovery,c_recovery,d_recovery
9,186.59343968673787,,,proposed_perc = 100/(1+exp(-(a + b*((token_opp - token_self)/(token_opp + token_self)) + c*I(trial_type == 2) + d*I(trial_type == 3)))),"A logistic-choice model for proposer behavior that maps a linear utility—composed of a baseline bias, a normalized fairness differential, and trial-type-dependent adjustments—onto a probability scaled to [0,100] to predict the percentage offered to the opponent.",v1,,,,,,,,,,,,0.8035325473213896,-0.0023598978538128673,0.45706870261636523,0.5613092369828527
3,220.17153990086845,,,proposed_perc = 100/(1+exp( -(beta0 + beta_diff*(token_opp - token_self)) )),A logistic model positing that proposer behavior is determined by a fairness-based utility computed as a linear combination of a baseline fairness tendency and sensitivity to the difference between opponent and participant tokens. This utility is transformed via a logistic function and scaled to yield the proposed percentage offered to the opponent.,v1,,,0.44177894753189434,0.5421586241556247,,,,,,,,,,,
1,303.8550270580377,,,proposed_perc = 100 * (1/(1+exp(-(b0 + b1 * ((token_opp - token_self)/(token_opp + token_self)))))),"A minimal logistic choice model for proposer behavior that predicts the offered percentage based on a normalized difference of token contributions. The model uses an intercept (b0) and a sensitivity parameter (b1) applied to the fairness differential to compute the utility, which is then mapped via a logistic function and scaled to 0–100%.",v1,0.657616716233249,0.08091007888518936,,,,,,,,,,,,,
4,378.6704375793562,,,"d = (token_opp - token_self) / (token_opp + token_self)
predicted_proposed_perc = 100 / (1 + exp(-(beta0 + beta1 * d)))",A logistic choice model that predicts proposers' offers by mapping the normalized difference between opponent and self token contributions onto a percentage scale. The model uses two learnable parameters (an intercept and a fairness sensitivity) to balance fairness norms against self-interest.,v1,,,0.7246094903523761,,0.19746469490303908,,,,,,,,,,
10,974.5765328031631,,,"F = 100 * token_opp / (token_self + token_opp)
U = lambda_param * (F - p_fair)
p = 1 / (1 + exp(-U))
proposed_perc = p * p_fair + (1 - p) * (F + delta)","A binary mixture model for proposer behavior where the final proposal percentage is a weighted combination of an ideal fairness value and a tokens–based normative fairness value shifted by a bias. A latent utility computed from the difference between these two fairness indicators is transformed via a logistic function into a probability weight. Three learnable parameters (p_fair, delta, lambda_param) govern the mixture while ensuring minimal covariance by limiting parameter number.",v1,,,,,,,,,,,,,,,
7,2101.6197788560944,,,"p_fair = 100 * (token_opp) / (token_self + token_opp)
dU = eta * (delta**2) - delta
P_fair = 1 / (1 + exp(-lambda_param * dU))
proposed_perc = p_fair - delta * (1 - P_fair)",A binary choice model for proposer behavior in which the fair offer is determined by the proportional token contribution (p_fair) and a selfish alternative is modeled by subtracting a deviation delta. The model computes a utility difference (dU = eta·delta² – delta) capturing the trade‐off between adhering to fairness and maximizing self–interest. This utility difference is transformed using a logistic function with inverse temperature lambda_param to determine the probability P_fair of offering the fair split. The predicted proposed percentage is then a weighted average between the fair offer and the selfish offer.,v1,,,,,,0.18351097486748777,,-0.051050818894456486,0.055347753095292995,,,,,,
8,2102.015449790496,,,"fairness = 100 * token_opp / (token_self + token_opp)
p = 1 / (1 + exp(- (lambda_param * (fairness - m) + beta)))
proposed_perc = m + p * (fairness - m)","A binary mixture model for proposer behavior where the fairness norm derived from token contributions is contrasted with a fixed self-interest offer. A logistic function (with sensitivity lambda_param and bias beta) weighs the two options, and the final proposed percentage is the convex combination of the fairness norm and a selfish baseline m.",v1,,,,,,0.12105485451953385,,,,-0.048410258395638624,-0.13681574627257373,,,,
6,2163.0334227082867,,,Predicted_proposed_perc = (1/(1+exp(-lambda_param*(100*token_opp/(token_self+token_opp)-f_selfish))))*(100*token_opp/(token_self+token_opp)) + (1-1/(1+exp(-lambda_param*(100*token_opp/(token_self+token_opp)-f_selfish))))*f_selfish,A binary choice model for proposer behavior. The model computes a fairness benchmark from token contributions and contrasts it with a selfish offer level. A logistic function—with sensitivity parameter lambda_param—maps the difference onto a probability of selecting the fair offer. The predicted proposed percentage for the opponent is the weighted average of the fair and selfish offers.,v1,,,,,,-0.11543099863765056,0.0063135188383601736,,,,,,,,
2,,,,"p = 1/(1 + exp(-(lambda + delta_token*(token_opp - token_self))))
proposed_perc = p*50 + (1 - p)*selfish_offer","A binary choice model for proposer behavior that computes a latent utility based on a baseline bias and the difference between opponent and self tokens. The logistic transformation of this utility determines the probability of choosing a fair offer (fixed at 50%), while the complementary probability yields a selfish offer (a learnable parameter). The final proposed percentage is a weighted average of these two options.",v1,,,,,,,,,,,,,,,
5,,,,"p = 1/(1 + exp(- (k*( (token_opp/(token_self+token_opp))*100 - theta ) + beta))
proposed_perc = p*a_g + (1 - p)*a_s","A binary decision model for proposer behavior that computes a fairness norm from token contributions and uses a logistic function with learnable sensitivity, threshold, and bias parameters to probabilistically select between a generous baseline offer and a selfish baseline offer, yielding the predicted proposed percentage.",v1,,,,,,,,,,,,,,,
