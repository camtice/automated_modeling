run_number,average_bic,bic_control,bic_cocaine,model_specification,model_summary,version,alpha_recovery,beta_recovery,sigma_recovery,theta0_recovery,theta1_recovery,theta2_recovery,beta0_recovery,beta1_recovery,lambda_param_recovery,beta_base_recovery
4,3.8593870536018366,,,proposed_perc = lambda_param * ((token_opp/(token_self+token_opp))*100) + (1 - lambda_param) * beta_base,"A two-parameter fairness-driven model that predicts the proposer’s offer percentage by weighting the fair share—calculated as the opponent’s token ratio—with a baseline offer. The fairness sensitivity parameter (lambda_param) governs the degree to which the fair share influences the proposal, ensuring minimal covariance between parameters through clear finite bounds.",v0,,,,,,,,,0.999999999997425,0.9999999999978165
3,60.044186799056625,,,proposed_perc_hat = 100/(1+exp(-(beta0 + beta1*(token_opp/(token_self+token_opp))))),A parsimonious logistic model that utilizes the fairness ratio—computed as the opponent's tokens divided by total tokens—to predict the proposed percentage share offered to the opponent. It includes two learnable parameters (baseline intercept and fairness sensitivity) with generous bounds to ensure parameter recovery and reduced covariance.,v0,,,,,,,0.9999999999998663,0.9999999999998412,,
5,61.170849827185656,,,proposed_perc = beta0 + beta1 * ((token_opp/(token_self + token_opp)) - 0.5),"A linear model predicting the proposer's proposed percentage based on a fairness ratio. The model computes the ratio of opponent tokens to the total tokens, centers it around 0.5 (equal division), and then applies a baseline plus a sensitivity parameter to adjust the proposal accordingly.",v0,,,,,,,0.9999999999999963,0.9999999999999039,,
2,517.0246234588226,,,"proposed_perc = theta0 - theta1 * ((token_self - token_opp) / (token_self + token_opp + 1e-6)) + theta2 * (trial_type - 2) + epsilon,   epsilon ~ Normal(0, sigma)","A linear model for proposers where the predicted proposed percentage is based on a baseline level, a negative modulation by the normalized token difference (reflecting fairness), and an adjustment for trial type. Noise is added via a Gaussian error term.",v0,,,0.13706946373158443,0.36227327903315726,-0.2216176826413543,0.13368635476353183,,,,
1,657.0669191859351,,,"proposed_perc = alpha + beta * (100 * token_opp/(token_self+token_opp)) + epsilon,  epsilon ~ N(0, sigma)",A linear fairness model for proposer behavior that assumes participants set their offer based on the relative token contribution of the opponent. The model scales the ratio of opponent tokens to total tokens (multiplied by 100) and adjusts it with an intercept (alpha) and sensitivity weight (beta); additive normally‐distributed noise (epsilon) with standard deviation sigma accounts for variability.,v0,0.11553803249901402,0.4128259295932033,0.037401059049763825,,,,,,,
