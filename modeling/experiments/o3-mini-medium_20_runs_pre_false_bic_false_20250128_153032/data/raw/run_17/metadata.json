{
  "task_description": "In the  experiment, each participant is given 36 different proposals to respond to. Each is designated by a trial number in the data set This gives 36 instances for the learnable parameters to be trained. There is also a pretask where the participant finds a number of tokens that correspond to their contribution to the group. This is designated by the variable \"token_self\". The other variable, \"token_opp\", is the number of tokens found the opponent's and represents the opoonents contribution to the shared pot that will be later divided by the opponent.\n\nNote that in each trial there is a variable amount of money in the combined earning, so that two equal split_self variables do not represent the same \"fairness\".\n\nBelow is the description of each variable in the dataset, which will be followed by information about the data type of the variable:\n\ntrial_type = how much was the contribution [1 = equal, 2 = opponent more, 3 = participant more]\ntrial_role = the role of the participant [1 = responder, 2 = proposer]\ntoken_opp = number of tokens found by the opponent\ntoken_self = number of tokens found by the participant\ncombined_earning = amount of money earned in total (note that each token found is \u00a33)\nsplit_opp = the proposed share of the opponent (in \u00a3)\nsplit_self = the proposed share for the participant (in \u00a3)\nsplitperc_opp = same but in %\nsplit_perc_self = same but in %\naccept = whether the participant responded accept (1) or reject (0)\naccepted_amount = if accepted, what is the amount gain (in \u00a3)\naccepted_perc = same as above but in %\nproposed_perc = when participant is the proposer, what is the % proposed to the opponent\n\nDataset:\n\nDataset Structure:\nVariables available:\n- ID (int64)\n- group (object)\n- trial_number (int64)\n- trial_type (int64)\n- trial_role (int64)\n- token_opp (int64)\n- token_self (int64)\n- combined_earning (int64)\n- split_opp (float64)\n- split_self (float64)\n- splitperc_opp (int64)\n- splitperc_self (int64)\n- accept (float64)\n- accepted_amount (float64)\n- accepted_perc (float64)\n- proposed_perc (float64)\n- proposed_amount (float64)\n\nNumber of observations: 3276\n\nDataset:\n\nDataset Structure:\nVariables available:\n- ID (int64)\n- group (object)\n- trial_number (int64)\n- trial_type (int64)\n- trial_role (int64)\n- token_opp (int64)\n- token_self (int64)\n- combined_earning (int64)\n- split_opp (float64)\n- split_self (float64)\n- splitperc_opp (int64)\n- splitperc_self (int64)\n- accept (float64)\n- accepted_amount (float64)\n- accepted_perc (float64)\n- proposed_perc (float64)\n- proposed_amount (float64)\n\nNumber of observations: 3276",
  "output_description": "Design a computational model for the given task. The model should obtain the utility, (not the probability of choosing an action).  Your goal is to eventually explore the entire space of possible explainations and mechanisms by which the observed behavior arises.\n\nYour model should use the given variables appropriately, but does not necessary need to use all or even most of the variables. Do not include the model for the utility of rejecting an offer. \n\nThe model should:\n1. Predict only responder behavior.\n2. Build on relevant psychological principles.\n3. Be considerate of high covariance between learnable parameters as the model\nwill have to pass parameter recovery tests.\n4. Be applicable to the dataset given within the task description (i.e. the model should be able to be run using only the provided dataset structure).\n5. Not include parameters to simulate general stochasticity of behavior, because this will be handled later by a temperature parameter.\n6. Should have no more than two learnable parameters.\n7. This specific model should calculate the utility of an action, which will then be used to determine\nthe probability of choosing that action. Negative values should represent a negative utility, and thus an unlikly action.\n\nFor any learnable parameters in your model, you must specify finite numerical bounds (it just can not be infinity) in the variable descriptions. However, this bound should be generous. The utility variable may be unbounded (-inf to inf).\n\nFirst, reason step by step about:\n* The key psychological mechanisms involved\n* How these mechanisms interact\n* What mathematical form could capture these interactions\n* What parameters would be needed to calibrate the model\n* How the model variables map to observable behavior\n\nThen, provide your formal mathematical model between <MODEL> tags, followed by variable descriptions between <VARIABLES> tags. Use clear mathematical notation and ensure each variable is fully described. Every variable must be utilized within the mathematical formula provided between <MODEL> and </MODEL>. For variable descriptions, provide them in a JSON format with the following structure: <VARIABLES> Bounds are by default inclusive. Please spell out the greek variable names instead of using the symbols. Finally, you should provide a short description of the model in the summary tags <SUMMARY> </SUMMARY>. This will be used to compare different computational models of the task; it should be concise and purely descriptive. Do not include generic information about the name of the tasks, since that is implied. \n\n{\n  \"variables\": {\n    \"variable_name\": {\n      \"description\": \"Clear description\",\n      \"range\": {\n        \"min\": value,\n        \"max\": value,\n        \"inclusive_min\": boolean,\n        \"inclusive_max\": boolean\n      },\n      \"distribution\": {\n        \"type\": \"distribution type\",\n        \"parameters\": {}\n      },\n      \"learnable\": boolean,\n      \"source\": \"learnable/data/calculated\"\n    }\n  }\n}\n</VARIABLES>\n\nExample #1: \n<EXAMPLE>\n(Model of a Random Choice Task):\nLet me think through this step by step...\n[your reasoning here]\n\n<MODEL>\nU_i = \u03b2 + \u03b5E + \u03b7N\n</MODEL>\n\n<VARIABLES>\n{\n  \"variables\": {\n    \"U_i\": {\n      \"description\": \"Utility of choosing action i\",\n      \"range\": {\n        \"min\": \"-inf\",\n        \"max\": \"inf\"\n      },\n      \"learnable\": false,\n      \"source\": \"calculated\"\n    },\n    \"beta\": {\n      \"description\": \"Base tendency parameter (inherent preference)\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": 1\n      },\n      \"learnable\": true,\n      \"source\": \"learnable\"\n    },\n    \"epsilon\": {\n      \"description\": \"Environmental sensitivity parameter\",\n      \"range\": {\n        \"min\": \"-inf\",\n        \"max\": \"inf\"\n      },\n      \"learnable\": true,\n      \"source\": \"learnable\"\n    },\n    \"E\": {\n      \"description\": \"Environmental cue value\",\n      \"range\": {\n        \"min\": \"-inf\",\n        \"max\": \"inf\"\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"eta\": {\n      \"description\": \"Noise parameter\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": 1,\n        \"exclusive_max\": true\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"N\": {\n      \"description\": \"Random noise drawn from normal distribution N(0,1)\",\n      \"distribution\": {\n        \"type\": \"normal\",\n        \"mean\": 0,\n        \"std\": 1\n      },\n      \"learnable\": false,\n      \"source\": \"calculated\"\n    }\n  }\n}\n</VARIABLES>\n<SUMMARY>\nA linear utility model combining base preference, environmental influence, and stochastic noise. The model uses two learnable parameters: a base tendency parameter (\u03b2) constrained to [0,1] and an unconstrained environmental sensitivity parameter (\u03b5). Environmental cues and normally distributed noise modify the base utility, allowing for both systematic and random variation in choice behavior.\n</SUMMARY>\n</EXAMPLE>\n\nPlease be sure to provide the mathematical formula for the model between <MODEL> and </MODEL>, and the variable descriptions between <VARIABLES> and </VARIABLES>. No description of the model should be provided within the <MODEL> tags.\n\nThe parameter names you choose in your <VARIABLES> section will be used exactly as specified in subsequent code generation. Please choose clear, non-reserved parameter names that can be used directly in Python code. For example, avoid Python reserved words like 'lambda' and use alternatives like 'learning_rate' or 'lambda_param'.",
  "dataset_info": "\nDataset Structure:\nVariables available:\n- ID (int64)\n- group (object)\n- trial_number (int64)\n- trial_type (int64)\n- trial_role (int64)\n- token_opp (int64)\n- token_self (int64)\n- combined_earning (int64)\n- split_opp (float64)\n- split_self (float64)\n- splitperc_opp (int64)\n- splitperc_self (int64)\n- accept (float64)\n- accepted_amount (float64)\n- accepted_perc (float64)\n- proposed_perc (float64)\n- proposed_amount (float64)\n\nNumber of observations: 3276",
  "learnable_parameters": {
    "beta": {
      "description": "Baseline bias parameter representing a fixed additive component in the utility.",
      "range": {
        "min": -50,
        "max": 50,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": {
        "type": "uniform",
        "parameters": {
          "min": -50,
          "max": 50
        }
      },
      "learnable": true,
      "source": "learnable"
    },
    "alpha": {
      "description": "Inequity aversion parameter that penalizes the shortfall when the received offer is less than the fair share.",
      "range": {
        "min": 0,
        "max": 10,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": {
        "type": "uniform",
        "parameters": {
          "min": 0,
          "max": 10
        }
      },
      "learnable": true,
      "source": "learnable"
    }
  },
  "model_specification": "U_accept = beta + split_self - alpha * max(0, (combined_earning * token_self / (token_self + token_opp)) - split_self)",
  "variable_descriptions": {
    "U_accept": {
      "description": "Utility of accepting an offer, combining the monetary benefit and fairness penalty.",
      "range": {
        "min": "-inf",
        "max": "inf",
        "inclusive_min": false,
        "inclusive_max": false
      },
      "distribution": null,
      "learnable": false,
      "source": "calculated"
    },
    "beta": {
      "description": "Baseline bias parameter representing a fixed additive component in the utility.",
      "range": {
        "min": -50,
        "max": 50,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": {
        "type": "uniform",
        "parameters": {
          "min": -50,
          "max": 50
        }
      },
      "learnable": true,
      "source": "learnable"
    },
    "alpha": {
      "description": "Inequity aversion parameter that penalizes the shortfall when the received offer is less than the fair share.",
      "range": {
        "min": 0,
        "max": 10,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": {
        "type": "uniform",
        "parameters": {
          "min": 0,
          "max": 10
        }
      },
      "learnable": true,
      "source": "learnable"
    },
    "split_self": {
      "description": "The monetary share proposed to the participant (responder) in the trial.",
      "range": {
        "min": 0,
        "max": "inf",
        "inclusive_min": true,
        "inclusive_max": false
      },
      "distribution": null,
      "learnable": false,
      "source": "data"
    },
    "combined_earning": {
      "description": "Total amount of money available in the trial, which scales the fair share according to tokens.",
      "range": {
        "min": 0,
        "max": "inf",
        "inclusive_min": true,
        "inclusive_max": false
      },
      "distribution": null,
      "learnable": false,
      "source": "data"
    },
    "token_self": {
      "description": "Number of tokens found by the participant, reflecting their contribution.",
      "range": {
        "min": 0,
        "max": "inf",
        "inclusive_min": true,
        "inclusive_max": false
      },
      "distribution": null,
      "learnable": false,
      "source": "data"
    },
    "token_opp": {
      "description": "Number of tokens found by the opponent, representing the opponent's contribution.",
      "range": {
        "min": 0,
        "max": "inf",
        "inclusive_min": true,
        "inclusive_max": false
      },
      "distribution": null,
      "learnable": false,
      "source": "data"
    }
  },
  "model_summary": "A utility model for responders that integrates the received monetary offer with fairness-based adjustments. The model computes a fair share from the combined earnings weighted by token contributions and penalizes disadvantageous deviations via an inequity aversion parameter (alpha). A baseline bias (beta) adjusts overall utility. Both learnable parameters are constrained to finite ranges.",
  "full_reasoning": "Step-by-step reasoning:\n1. Key Psychological Mechanisms:\n\u2003\u2022 Responder evaluations are based on both the monetary offer (split_self) and fairness considerations.\n\u2003\u2022 Fairness is derived from the \u201centitlement\u201d inferred from the pretask token counts. Specifically, a participant\u2019s fair share is proportional to his tokens relative to the total (token_self and token_opp).\n\u2003\u2022 When an offer falls short of this entitlement, a psychological penalty is incurred due to inequity aversion.\n\n2. Mechanism Interactions:\n\u2003\u2022 The model first computes a fair share: \n\u2003\u2003fair_share = combined_earning \u00d7 (token_self / (token_self + token_opp)).\n\u2003\u2022 The discrepancy between the fair share and the actual offered share (split_self) is then calculated. Only if the offer is below the fair share is there a penalty.\n\u2003\u2022 A bias term is added to allow for a baseline tendency to accept (or not) offers.\n\n3. Mathematical Form:\n\u2003\u2022 Let the utility of accepting an offer be given by:\n\u2003\u2003U_accept = \u03b2 + split_self \u2212 \u03b1 \u00d7 max(0, fair_share \u2212 split_self)\n\u2003\u2022 Here, \u03b1 captures the sensitivity to disadvantageous inequity (the penalty when the offer is below one\u2019s entitlement) and \u03b2 is a baseline bias.\n\n4. Learnable Parameters:\n\u2003\u2022 \u03b1 (alpha): the inequity aversion parameter. It measures how strongly the responder penalizes an offer that is less than what they deserve. Chosen to be nonnegative.\n\u2003\u2022 \u03b2 (beta): a bias or intercept term, which may reflect a general predisposition toward acceptance regardless of fairness considerations.\n\n5. Mapping to Observable Behavior:\n\u2003\u2022 Observed behavior (i.e., acceptance) is assumed to be influenced by the utility U_accept.\n\u2003\u2022 The observable variables split_self, token_self, token_opp, and combined_earning are directly used to calculate a fair share and thus determine the utility.\n\u2003\u2022 The model does not simulate the rejection utility and uses no additional stochasticity; instead, any choice stochasticity is assumed to be handled externally (e.g., via a softmax with temperature).\n\nBelow is the formal specification.\n\n<MODEL>\nU_accept = beta + split_self - alpha * max(0, (combined_earning * token_self / (token_self + token_opp)) - split_self)\n</MODEL>\n\n<VARIABLES>\n{\n  \"variables\": {\n    \"U_accept\": {\n      \"description\": \"Utility of accepting an offer, combining the monetary benefit and fairness penalty.\",\n      \"range\": {\n        \"min\": \"-inf\",\n        \"max\": \"inf\",\n        \"inclusive_min\": false,\n        \"inclusive_max\": false\n      },\n      \"learnable\": false,\n      \"source\": \"calculated\"\n    },\n    \"beta\": {\n      \"description\": \"Baseline bias parameter representing a fixed additive component in the utility.\",\n      \"range\": {\n        \"min\": -50,\n        \"max\": 50,\n        \"inclusive_min\": true,\n        \"inclusive_max\": true\n      },\n      \"distribution\": {\n        \"type\": \"uniform\",\n        \"parameters\": {\n          \"min\": -50,\n          \"max\": 50\n        }\n      },\n      \"learnable\": true,\n      \"source\": \"learnable\"\n    },\n    \"alpha\": {\n      \"description\": \"Inequity aversion parameter that penalizes the shortfall when the received offer is less than the fair share.\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": 10,\n        \"inclusive_min\": true,\n        \"inclusive_max\": true\n      },\n      \"distribution\": {\n        \"type\": \"uniform\",\n        \"parameters\": {\n          \"min\": 0,\n          \"max\": 10\n        }\n      },\n      \"learnable\": true,\n      \"source\": \"learnable\"\n    },\n    \"split_self\": {\n      \"description\": \"The monetary share proposed to the participant (responder) in the trial.\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": \"inf\",\n        \"inclusive_min\": true,\n        \"inclusive_max\": false\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"combined_earning\": {\n      \"description\": \"Total amount of money available in the trial, which scales the fair share according to tokens.\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": \"inf\",\n        \"inclusive_min\": true,\n        \"inclusive_max\": false\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"token_self\": {\n      \"description\": \"Number of tokens found by the participant, reflecting their contribution.\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": \"inf\",\n        \"inclusive_min\": true,\n        \"inclusive_max\": false\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"token_opp\": {\n      \"description\": \"Number of tokens found by the opponent, representing the opponent's contribution.\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": \"inf\",\n        \"inclusive_min\": true,\n        \"inclusive_max\": false\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    }\n  }\n}\n</VARIABLES>\n\n<SUMMARY>\nA utility model for responders that integrates the received monetary offer with fairness-based adjustments. The model computes a fair share from the combined earnings weighted by token contributions and penalizes disadvantageous deviations via an inequity aversion parameter (alpha). A baseline bias (beta) adjusts overall utility. Both learnable parameters are constrained to finite ranges.\n</SUMMARY>",
  "simulation_code": "def simulate_model(trial_data, beta=0, alpha=0):\n    utility_values = []\n    for trial in trial_data:\n        split_self = trial.get(\"split_self\", 0)\n        combined_earning = trial.get(\"combined_earning\", 0)\n        token_self = trial.get(\"token_self\", 0)\n        token_opp = trial.get(\"token_opp\", 0)\n\n        if token_self + token_opp ==0:\n            fair_share = 0\n        else:\n            fair_share = combined_earning * (token_self / (token_self + token_opp))\n\n        utility = beta + split_self - alpha * max(0, fair_share - split_self)\n        utility_values.append(utility)\n    return utility_values",
  "fitting_results": [
    {
      "beta": -6.383019455490153,
      "alpha": 2.0466023219214597,
      "success": true,
      "log_likelihood": -6.173579779318084,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": 0.7504781105606365,
      "alpha": 1.791574521271587,
      "success": true,
      "log_likelihood": -16.2709778611004,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": 4.011663643933343,
      "alpha": 2.972292354664569,
      "success": true,
      "log_likelihood": -10.705124859252688,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": -0.5042927914967121,
      "alpha": 1.7204485381951837,
      "success": true,
      "log_likelihood": -13.974376520827889,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": 5.3161074885499255,
      "alpha": 4.399318555255421,
      "success": true,
      "log_likelihood": -8.652341682269464,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": 4.424150988139807,
      "alpha": 2.397799289995271,
      "success": true,
      "log_likelihood": -11.58530826829594,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": 27.06323697619883,
      "alpha": 0.0,
      "success": true,
      "log_likelihood": -1.0592022907470533e-05,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": 7.075047752030545,
      "alpha": 3.090084695226592,
      "success": true,
      "log_likelihood": -10.061812594064415,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": 50.0,
      "alpha": 0.0,
      "success": true,
      "log_likelihood": 3.4892175813623653e-09,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": 1.4868264104794924,
      "alpha": 3.008987420246273,
      "success": true,
      "log_likelihood": -11.344160537097789,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": 4.354091936443304,
      "alpha": 3.91346740149093,
      "success": true,
      "log_likelihood": -7.195897900016255,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": -5.433372445212818,
      "alpha": 2.072410617655982,
      "success": true,
      "log_likelihood": -7.266370666325704,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": 3.748596048719314,
      "alpha": 3.9466713134773324,
      "success": true,
      "log_likelihood": -8.915273772972613,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": 41.6613425813008,
      "alpha": 0.9793840063272896,
      "success": true,
      "log_likelihood": -4.63482572966982e-08,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": 49.99999999999999,
      "alpha": 0.0,
      "success": true,
      "log_likelihood": 3.489217581362365e-09,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": 50.0,
      "alpha": 0.0,
      "success": true,
      "log_likelihood": 3.4892175813623653e-09,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": 36.45405615853812,
      "alpha": 0.0,
      "success": true,
      "log_likelihood": -9.321354239720485e-08,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": 5.09674510383462,
      "alpha": 1.3559231708018726,
      "success": true,
      "log_likelihood": -7.810408866220954,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": 12.514291810891821,
      "alpha": 2.9246635011601527,
      "success": true,
      "log_likelihood": -5.457728655020533,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": 50.0,
      "alpha": 0.0,
      "success": true,
      "log_likelihood": 3.489217581362365e-09,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": 3.5079343662912628,
      "alpha": 2.5787365278767234,
      "success": true,
      "log_likelihood": -14.11193750666582,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": 9.051332504828851,
      "alpha": 2.3453191418217285,
      "success": true,
      "log_likelihood": -7.269052733081399,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": -2.9035568220684733,
      "alpha": 0.867131593410405,
      "success": true,
      "log_likelihood": -16.566148629411583,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": -0.18779641714397696,
      "alpha": 1.249383898559545,
      "success": true,
      "log_likelihood": -17.094280890069626,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": 5.683171239995449,
      "alpha": 3.9068588273738345,
      "success": true,
      "log_likelihood": -11.357401387842996,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": 1.447933939055449,
      "alpha": 1.6274295949799586,
      "success": true,
      "log_likelihood": -15.285214365647661,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": 2.0142574212683084,
      "alpha": 1.9959184986548708,
      "success": true,
      "log_likelihood": -13.04507851029464,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": 4.765414199906561,
      "alpha": 8.23392503169675,
      "success": true,
      "log_likelihood": -4.502011538854639,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": 8.14869384951676,
      "alpha": 1.9225746183898185,
      "success": true,
      "log_likelihood": -7.721295029454451,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": 3.7100724786080126,
      "alpha": 1.430106355636121,
      "success": true,
      "log_likelihood": -14.579062506011844,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": 49.99999999999999,
      "alpha": 0.0,
      "success": true,
      "log_likelihood": 3.489217581362365e-09,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": -6.383016336070496,
      "alpha": 2.0466375076609293,
      "success": true,
      "log_likelihood": -6.17357977972709,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": -3.037438809767877,
      "alpha": 0.5323876237402986,
      "success": true,
      "log_likelihood": -19.628153076351204,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": -0.8234469615975697,
      "alpha": 1.7464545956387725,
      "success": true,
      "log_likelihood": -15.27287413085026,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": 48.860949096773055,
      "alpha": 2.2460461627695882,
      "success": true,
      "log_likelihood": -6.401151671366284e-08,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": -0.11257696154625543,
      "alpha": 0.7912587974248786,
      "success": true,
      "log_likelihood": -14.912963603892383,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": 5.229954269207811,
      "alpha": 2.339121393237497,
      "success": true,
      "log_likelihood": -9.871733052148171,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": 2.9561772612429693,
      "alpha": 2.7423076747927198,
      "success": true,
      "log_likelihood": -13.470235225248393,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": 2.820530933453531,
      "alpha": 1.7034441633001685,
      "success": true,
      "log_likelihood": -16.7017383869188,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": 4.881208229311797,
      "alpha": 0.9230337103349947,
      "success": true,
      "log_likelihood": -8.611832350499657,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": 3.0759615330191177,
      "alpha": 2.08471662153581,
      "success": true,
      "log_likelihood": -16.53302774460452,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": -2.764010490209144,
      "alpha": 2.1758146081255263,
      "success": true,
      "log_likelihood": -12.074128774440075,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": 5.228500427113446,
      "alpha": 0.36172973411473336,
      "success": true,
      "log_likelihood": -5.689521157687193,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": 0.26825680657857626,
      "alpha": 1.3021706451443327,
      "success": true,
      "log_likelihood": -16.46445311252671,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": 2.2091278314714384,
      "alpha": 1.7702041940755533,
      "success": true,
      "log_likelihood": -14.005244950069164,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": 0.2308251752202653,
      "alpha": 0.5726176142591137,
      "success": true,
      "log_likelihood": -16.1518632212285,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": 1.410400009523787,
      "alpha": 1.9107367525135257,
      "success": true,
      "log_likelihood": -15.298730448808845,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": -2.4726060753760106,
      "alpha": 0.9246843876764952,
      "success": true,
      "log_likelihood": -17.97437004836553,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": 5.638441865840668,
      "alpha": 5.004177338634546,
      "success": true,
      "log_likelihood": -9.068765055793207,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": -3.26794350955634,
      "alpha": 0.0,
      "success": true,
      "log_likelihood": -22.687410151793028,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": 0.851001003434065,
      "alpha": 0.902688889363767,
      "success": true,
      "log_likelihood": -17.34744359865564,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": -6.051836924093879,
      "alpha": 0.9038311255917927,
      "success": true,
      "log_likelihood": -11.409727873658117,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": -1.5236269106454476,
      "alpha": 0.6997919411691309,
      "success": true,
      "log_likelihood": -18.50321103566634,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": -2.584559703089642,
      "alpha": 0.06616250506127858,
      "success": true,
      "log_likelihood": -20.28511890958284,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": -1.3929425132393733,
      "alpha": 1.4544902417576884,
      "success": true,
      "log_likelihood": -20.22016428665446,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": 3.366950657408711,
      "alpha": 5.162733764526181,
      "success": true,
      "log_likelihood": -6.1895173035584845,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": -0.5049642475540048,
      "alpha": 3.1471216842253473,
      "success": true,
      "log_likelihood": -10.347224418497742,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": 1.0428111064841112,
      "alpha": 0.0,
      "success": true,
      "log_likelihood": -13.253874574885485,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": -5.742975061049183,
      "alpha": 1.7241049311930248,
      "success": true,
      "log_likelihood": -7.916641277806818,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": 0.7273312677811968,
      "alpha": 0.3749776689365657,
      "success": true,
      "log_likelihood": -14.41059290196605,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": 0.0954611898299841,
      "alpha": 0.9850790074774682,
      "success": true,
      "log_likelihood": -19.804703708611648,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": 2.7164086880747442,
      "alpha": 2.639292918687957,
      "success": true,
      "log_likelihood": -14.023778633453723,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": -6.383024997066356,
      "alpha": 2.0466036165254633,
      "success": true,
      "log_likelihood": -6.173579779331816,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": -2.6408835612047596,
      "alpha": 0.5831573177363123,
      "success": true,
      "log_likelihood": -19.449797917064853,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": -2.598191946896836,
      "alpha": 2.3152822135744056,
      "success": true,
      "log_likelihood": -10.08746989898355,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": 0.68280817782684,
      "alpha": 1.467691455348446,
      "success": true,
      "log_likelihood": -15.21311856422052,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": 5.829674158041604,
      "alpha": 1.156579991014307,
      "success": true,
      "log_likelihood": -7.6954819503815415,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": 5.401728319420789,
      "alpha": 1.4353662731991765,
      "success": true,
      "log_likelihood": -10.451133984911516,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": -1.058879229386219,
      "alpha": 0.7717384659325001,
      "success": true,
      "log_likelihood": -16.211738235969793,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": 3.0306016314001925,
      "alpha": 0.4243864282645379,
      "success": true,
      "log_likelihood": -10.608905773253909,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": -2.1949043227857223,
      "alpha": 10.0,
      "success": true,
      "log_likelihood": -1.6526045746690605,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": -5.717160105174856,
      "alpha": 1.139917833059422,
      "success": true,
      "log_likelihood": -10.652727439380435,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": 0.6906623077432299,
      "alpha": 1.6131506277839265,
      "success": true,
      "log_likelihood": -15.866735313530885,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": 0.5331053222565808,
      "alpha": 0.437933974355266,
      "success": true,
      "log_likelihood": -15.192972651932484,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": -2.383324601007622,
      "alpha": 0.4605243596236188,
      "success": true,
      "log_likelihood": -22.77264982520455,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": 5.999902541584954,
      "alpha": 2.5790500880029965,
      "success": true,
      "log_likelihood": -11.835130092521185,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": 6.361662924739683,
      "alpha": 1.031814422774677,
      "success": true,
      "log_likelihood": -6.528380514324556,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": -8.506753823872712,
      "alpha": 0.9443989778121492,
      "success": true,
      "log_likelihood": -6.5923601662116615,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": -2.4932337563677898,
      "alpha": 0.0,
      "success": true,
      "log_likelihood": -21.68673535221896,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": -6.383019558020515,
      "alpha": 2.046600537273462,
      "success": true,
      "log_likelihood": -6.173579779317098,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": -2.066648808636919,
      "alpha": 0.4793524293493565,
      "success": true,
      "log_likelihood": -23.288950504659386,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": 1.705790855466628,
      "alpha": 0.0,
      "success": true,
      "log_likelihood": -10.99850632468864,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": -5.837918580680186,
      "alpha": 1.6268309540860875,
      "success": true,
      "log_likelihood": -8.867253734893616,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": -0.12585928959657472,
      "alpha": 1.4138549657893862,
      "success": true,
      "log_likelihood": -12.996341724367333,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": -1.849799665855207,
      "alpha": 0.24704351780887182,
      "success": true,
      "log_likelihood": -25.76943637440582,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": -4.7677075776568385,
      "alpha": 3.020290906864772,
      "success": true,
      "log_likelihood": -7.157681751536792,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": 2.037064578141715,
      "alpha": 1.3058149107683201,
      "success": true,
      "log_likelihood": -17.36265649913349,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": -2.9946765623239,
      "alpha": 1.9892440944848357,
      "success": true,
      "log_likelihood": -13.517243682713437,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": 8.875088482050376,
      "alpha": 1.5826847392767036,
      "success": true,
      "log_likelihood": -4.984511684335207,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": -1.7739890941237764,
      "alpha": 0.8353631865400718,
      "success": true,
      "log_likelihood": -14.556905243657088,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta": -0.5405750307488548,
      "alpha": 0.4135186643326751,
      "success": true,
      "log_likelihood": -21.174812159605157,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    }
  ],
  "parameter_recovery": {
    "correlations": {
      "beta": {
        "r": 0.8052845350744708,
        "p": 5.601512559402973e-24
      },
      "alpha": {
        "r": 0.7800482031735019,
        "p": 1.1364502483776103e-21
      }
    }
  },
  "bic_results": {
    "average_bic": 30.172903374266983,
    "individual_bics": [
      19.51419743554839,
      39.708993599113015,
      28.577287595417594,
      35.115790918567996,
      24.47172124145115,
      30.337654413504097,
      7.167059060958035,
      27.290663065041052,
      7.167037869933785,
      29.855358951107796,
      21.55883367694473,
      21.69977920956363,
      24.997585422857448,
      7.167037969608734,
      7.167037869933785,
      7.167037869933785,
      7.167038063339304,
      22.78785560935413,
      18.082495186953288,
      7.167037869933785,
      35.39091289024386,
      21.70514334307502,
      40.29933513573538,
      41.35559965705147,
      29.881840652598214,
      37.73746660820754,
      33.2571948975015,
      16.171060954621495,
      22.609627935821123,
      36.32516288893591,
      7.167037869933785,
      19.514197436366402,
      46.423344029614626,
      37.71278613861274,
      7.167038004935253,
      36.99296508469698,
      26.910503981208564,
      34.10750832740901,
      40.57051465074982,
      24.390702577911533,
      40.23309336612126,
      31.31529542579237,
      18.546080192286606,
      40.095944101965635,
      35.17752777705055,
      39.470764319369216,
      37.76449877452991,
      43.115777973643276,
      25.304567988498633,
      52.541858180498274,
      41.8619250742235,
      29.98649362422845,
      44.1734599482449,
      47.7372756960779,
      47.607366450221136,
      19.54607248402919,
      27.861486713907702,
      33.67478702668319,
      23.000320432525854,
      35.98822368084432,
      46.77644529413551,
      35.214595143819665,
      19.514197435575852,
      46.06663371104192,
      27.341977674879317,
      37.59327500535326,
      22.5580017776753,
      28.069305846735254,
      39.590514348851805,
      28.384849423420036,
      10.47224702625034,
      28.472492755673088,
      38.90050850397399,
      37.55298318077719,
      52.71233752732132,
      30.83729806195459,
      20.22379890556133,
      20.351758209335543,
      50.54050858135014,
      19.514197435546414,
      53.74493888623099,
      29.1640505262895,
      24.90154534669945,
      33.159721325646885,
      58.70591062572386,
      21.482401379985802,
      41.8923508751792,
      34.201525242339095,
      17.13606124558263,
      36.280848364226394,
      49.51666219612253
    ],
    "num_parameters": 2,
    "bic_formula": "BIC = -2 * log_likelihood + k * log(n)"
  }
}