{
  "task_description": "In the  experiment, each participant is given 36 different proposals to respond to. Each is designated by a trial number in the data set This gives 36 instances for the learnable parameters to be trained. There is also a pretask where the participant finds a number of tokens that correspond to their contribution to the group. This is designated by the variable \"token_self\". The other variable, \"token_opp\", is the number of tokens found the opponent's and represents the opoonents contribution to the shared pot that will be later divided by the opponent.\n\nNote that in each trial there is a variable amount of money in the combined earning, so that two equal split_self variables do not represent the same \"fairness\".\n\nBelow is the description of each variable in the dataset, which will be followed by information about the data type of the variable:\n\ntrial_type = how much was the contribution [1 = equal, 2 = opponent more, 3 = participant more]\ntrial_role = the role of the participant [1 = responder, 2 = proposer]\ntoken_opp = number of tokens found by the opponent\ntoken_self = number of tokens found by the participant\ncombined_earning = amount of money earned in total (note that each token found is \u00a33)\nsplit_opp = the proposed share of the opponent (in \u00a3)\nsplit_self = the proposed share for the participant (in \u00a3)\nsplitperc_opp = same but in %\nsplit_perc_self = same but in %\naccept = whether the participant responded accept (1) or reject (0)\naccepted_amount = if accepted, what is the amount gain (in \u00a3)\naccepted_perc = same as above but in %\nproposed_perc = when participant is the proposer, what is the % proposed to the opponent\n\nDataset:\n\nDataset Structure:\nVariables available:\n- ID (int64)\n- group (object)\n- trial_number (int64)\n- trial_type (int64)\n- trial_role (int64)\n- token_opp (int64)\n- token_self (int64)\n- combined_earning (int64)\n- split_opp (float64)\n- split_self (float64)\n- splitperc_opp (int64)\n- splitperc_self (int64)\n- accept (float64)\n- accepted_amount (float64)\n- accepted_perc (float64)\n- proposed_perc (float64)\n- proposed_amount (float64)\n\nNumber of observations: 3276\n\nDataset:\n\nDataset Structure:\nVariables available:\n- ID (int64)\n- group (object)\n- trial_number (int64)\n- trial_type (int64)\n- trial_role (int64)\n- token_opp (int64)\n- token_self (int64)\n- combined_earning (int64)\n- split_opp (float64)\n- split_self (float64)\n- splitperc_opp (int64)\n- splitperc_self (int64)\n- accept (float64)\n- accepted_amount (float64)\n- accepted_perc (float64)\n- proposed_perc (float64)\n- proposed_amount (float64)\n\nNumber of observations: 3276",
  "output_description": "Design a computational model for the given task. The model should obtain the utility, (not the probability of choosing an action).  Your goal is to eventually explore the entire space of possible explainations and mechanisms by which the observed behavior arises.\n\nYour model should use the given variables appropriately, but does not necessary need to use all or even most of the variables. Do not include the model for the utility of rejecting an offer. \n\nThe model should:\n1. Predict only responder behavior.\n2. Build on relevant psychological principles.\n3. Be considerate of high covariance between learnable parameters as the model\nwill have to pass parameter recovery tests.\n4. Be applicable to the dataset given within the task description (i.e. the model should be able to be run using only the provided dataset structure).\n5. Not include parameters to simulate general stochasticity of behavior, because this will be handled later by a temperature parameter.\n6. Should have no more than two learnable parameters.\n7. This specific model should calculate the utility of an action, which will then be used to determine\nthe probability of choosing that action. Negative values should represent a negative utility, and thus an unlikly action.\n\nFor any learnable parameters in your model, you must specify finite numerical bounds (it just can not be infinity) in the variable descriptions. However, this bound should be generous. The utility variable may be unbounded (-inf to inf).\n\nFirst, reason step by step about:\n* The key psychological mechanisms involved\n* How these mechanisms interact\n* What mathematical form could capture these interactions\n* What parameters would be needed to calibrate the model\n* How the model variables map to observable behavior\n\nThen, provide your formal mathematical model between <MODEL> tags, followed by variable descriptions between <VARIABLES> tags. Use clear mathematical notation and ensure each variable is fully described. Every variable must be utilized within the mathematical formula provided between <MODEL> and </MODEL>. For variable descriptions, provide them in a JSON format with the following structure: <VARIABLES> Bounds are by default inclusive. Please spell out the greek variable names instead of using the symbols. Finally, you should provide a short description of the model in the summary tags <SUMMARY> </SUMMARY>. This will be used to compare different computational models of the task; it should be concise and purely descriptive. Do not include generic information about the name of the tasks, since that is implied. \n\n{\n  \"variables\": {\n    \"variable_name\": {\n      \"description\": \"Clear description\",\n      \"range\": {\n        \"min\": value,\n        \"max\": value,\n        \"inclusive_min\": boolean,\n        \"inclusive_max\": boolean\n      },\n      \"distribution\": {\n        \"type\": \"distribution type\",\n        \"parameters\": {}\n      },\n      \"learnable\": boolean,\n      \"source\": \"learnable/data/calculated\"\n    }\n  }\n}\n</VARIABLES>\n\nExample #1: \n<EXAMPLE>\n(Model of a Random Choice Task):\nLet me think through this step by step...\n[your reasoning here]\n\n<MODEL>\nU_i = \u03b2 + \u03b5E + \u03b7N\n</MODEL>\n\n<VARIABLES>\n{\n  \"variables\": {\n    \"U_i\": {\n      \"description\": \"Utility of choosing action i\",\n      \"range\": {\n        \"min\": \"-inf\",\n        \"max\": \"inf\"\n      },\n      \"learnable\": false,\n      \"source\": \"calculated\"\n    },\n    \"beta\": {\n      \"description\": \"Base tendency parameter (inherent preference)\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": 1\n      },\n      \"learnable\": true,\n      \"source\": \"learnable\"\n    },\n    \"epsilon\": {\n      \"description\": \"Environmental sensitivity parameter\",\n      \"range\": {\n        \"min\": \"-inf\",\n        \"max\": \"inf\"\n      },\n      \"learnable\": true,\n      \"source\": \"learnable\"\n    },\n    \"E\": {\n      \"description\": \"Environmental cue value\",\n      \"range\": {\n        \"min\": \"-inf\",\n        \"max\": \"inf\"\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"eta\": {\n      \"description\": \"Noise parameter\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": 1,\n        \"exclusive_max\": true\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"N\": {\n      \"description\": \"Random noise drawn from normal distribution N(0,1)\",\n      \"distribution\": {\n        \"type\": \"normal\",\n        \"mean\": 0,\n        \"std\": 1\n      },\n      \"learnable\": false,\n      \"source\": \"calculated\"\n    }\n  }\n}\n</VARIABLES>\n<SUMMARY>\nA linear utility model combining base preference, environmental influence, and stochastic noise. The model uses two learnable parameters: a base tendency parameter (\u03b2) constrained to [0,1] and an unconstrained environmental sensitivity parameter (\u03b5). Environmental cues and normally distributed noise modify the base utility, allowing for both systematic and random variation in choice behavior.\n</SUMMARY>\n</EXAMPLE>\n\nPlease be sure to provide the mathematical formula for the model between <MODEL> and </MODEL>, and the variable descriptions between <VARIABLES> and </VARIABLES>. No description of the model should be provided within the <MODEL> tags.\n\nThe parameter names you choose in your <VARIABLES> section will be used exactly as specified in subsequent code generation. Please choose clear, non-reserved parameter names that can be used directly in Python code. For example, avoid Python reserved words like 'lambda' and use alternatives like 'learning_rate' or 'lambda_param'.",
  "dataset_info": "\nDataset Structure:\nVariables available:\n- ID (int64)\n- group (object)\n- trial_number (int64)\n- trial_type (int64)\n- trial_role (int64)\n- token_opp (int64)\n- token_self (int64)\n- combined_earning (int64)\n- split_opp (float64)\n- split_self (float64)\n- splitperc_opp (int64)\n- splitperc_self (int64)\n- accept (float64)\n- accepted_amount (float64)\n- accepted_perc (float64)\n- proposed_perc (float64)\n- proposed_amount (float64)\n\nNumber of observations: 3276",
  "learnable_parameters": {
    "fairness_sensitivity": {
      "description": "Learnable parameter representing sensitivity to receiving less than the fairness norm",
      "range": {
        "min": 0,
        "max": 10,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": null,
      "learnable": true,
      "source": "learnable"
    }
  },
  "model_specification": "U = split_self - fairness_sensitivity * max((combined_earning * (token_self / (token_self + token_opp))) - split_self, 0)",
  "variable_descriptions": {
    "U": {
      "description": "Utility of accepting the offer; lower values indicate lower attractiveness.",
      "range": {
        "min": "-inf",
        "max": "inf",
        "inclusive_min": false,
        "inclusive_max": false
      },
      "distribution": null,
      "learnable": false,
      "source": "calculated"
    },
    "split_self": {
      "description": "The proposed share allocated to the participant (in \u00a3)",
      "range": {
        "min": 0,
        "max": "inf",
        "inclusive_min": true,
        "inclusive_max": false
      },
      "distribution": null,
      "learnable": false,
      "source": "data"
    },
    "combined_earning": {
      "description": "Total amount of money earned in the trial (in \u00a3)",
      "range": {
        "min": 0,
        "max": "inf",
        "inclusive_min": true,
        "inclusive_max": false
      },
      "distribution": null,
      "learnable": false,
      "source": "data"
    },
    "token_self": {
      "description": "Number of tokens found by the participant, determining their contribution",
      "range": {
        "min": 0,
        "max": "inf",
        "inclusive_min": true,
        "inclusive_max": false
      },
      "distribution": null,
      "learnable": false,
      "source": "data"
    },
    "token_opp": {
      "description": "Number of tokens found by the opponent, determining the opponent's contribution",
      "range": {
        "min": 0,
        "max": "inf",
        "inclusive_min": true,
        "inclusive_max": false
      },
      "distribution": null,
      "learnable": false,
      "source": "data"
    },
    "fairness_sensitivity": {
      "description": "Learnable parameter representing sensitivity to receiving less than the fairness norm",
      "range": {
        "min": 0,
        "max": 10,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": null,
      "learnable": true,
      "source": "learnable"
    }
  },
  "model_summary": "A utility model for responder behavior in which the utility of accepting an offer is computed as the monetary amount received (split_self) minus a penalty for any shortfall relative to a fairness norm. The fairness norm is defined as the proportion of tokens contributed by the participant (token_self divided by the total tokens) multiplied by the combined earnings. The single learnable parameter (fairness_sensitivity) governs the aversiveness to disadvantageous inequality.",
  "full_reasoning": "Step-by-step reasoning:\n1. Key psychological mechanisms:\n   \u2022 Responder behavior is influenced not solely by the monetary amount received but also by the perception of fairness.\n   \u2022 Responders compare the offered split (split_self) to a normative fairness expectation based on pre-task tokens (token_self and token_opp). The fairness norm is computed as the proportion of tokens the participant contributed out of the total, scaled to the combined earnings.\n   \u2022 A discrepancy where the participant\u2019s actual split is below the fairness norm causes a reduction in utility.\n\n2. Mechanism interaction:\n   \u2022 The normative expectation is given by: normative_share = combined_earning \u00d7 (token_self / (token_self + token_opp)).\n   \u2022 Disadvantageous inequality\u2014i.e. receiving less than what is normatively fair\u2014leads to a penalty term that reduces utility.\n   \u2022 If the offer exceeds the norm, no penalty is incurred, so the full monetary gain (split_self) is enjoyed.\n\n3. Mathematical form:\n   \u2022 Utility for accepting the offer is linear in the money received minus a penalty that is proportional (with parameter fairness_sensitivity) to any shortfall relative to the fairness norm.\n   \u2022 Thus, the formulation is:\n       U = split_self \u2212 fairness_sensitivity \u00d7 max(normative_share \u2212 split_self, 0).\n\n4. Parameters needed:\n   \u2022 One learnable parameter fairness_sensitivity, which captures the sensitivity to disadvantageous inequality. This parameter will be bounded (for example, between 0 and 10) to ensure finite numeric bounds.\n   \u2022 No additional parameters are introduced since stochasticity will be handled later.\n\n5. Mapping to observed behavior:\n   \u2022 The observable variables are split_self, combined_earning, token_self, and token_opp.\n   \u2022 For each trial (responder), we compute the normative_share.\n   \u2022 The utility then is determined by how much less the actual share is compared to the normative share (if at all) scaled by fairness_sensitivity.\n   \u2022 Negative utilities indicate actions that are unlikely to be chosen.\n\nBelow is the formal specification:\n\n<MODEL>\nU = split_self - fairness_sensitivity * max((combined_earning * (token_self / (token_self + token_opp))) - split_self, 0)\n</MODEL>\n\n<VARIABLES>\n{\n  \"variables\": {\n    \"U\": {\n      \"description\": \"Utility of accepting the offer; lower values indicate lower attractiveness.\",\n      \"range\": {\n        \"min\": \"-inf\",\n        \"max\": \"inf\",\n        \"inclusive_min\": false,\n        \"inclusive_max\": false\n      },\n      \"learnable\": false,\n      \"source\": \"calculated\"\n    },\n    \"split_self\": {\n      \"description\": \"The proposed share allocated to the participant (in \u00a3)\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": \"inf\",\n        \"inclusive_min\": true,\n        \"inclusive_max\": false\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"combined_earning\": {\n      \"description\": \"Total amount of money earned in the trial (in \u00a3)\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": \"inf\",\n        \"inclusive_min\": true,\n        \"inclusive_max\": false\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"token_self\": {\n      \"description\": \"Number of tokens found by the participant, determining their contribution\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": \"inf\",\n        \"inclusive_min\": true,\n        \"inclusive_max\": false\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"token_opp\": {\n      \"description\": \"Number of tokens found by the opponent, determining the opponent's contribution\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": \"inf\",\n        \"inclusive_min\": true,\n        \"inclusive_max\": false\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"fairness_sensitivity\": {\n      \"description\": \"Learnable parameter representing sensitivity to receiving less than the fairness norm\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": 10,\n        \"inclusive_min\": true,\n        \"inclusive_max\": true\n      },\n      \"learnable\": true,\n      \"source\": \"learnable\"\n    }\n  }\n}\n</VARIABLES>\n\n<SUMMARY>\nA utility model for responder behavior in which the utility of accepting an offer is computed as the monetary amount received (split_self) minus a penalty for any shortfall relative to a fairness norm. The fairness norm is defined as the proportion of tokens contributed by the participant (token_self divided by the total tokens) multiplied by the combined earnings. The single learnable parameter (fairness_sensitivity) governs the aversiveness to disadvantageous inequality.\n</SUMMARY>",
  "simulation_code": "def simulate_model(trial_data, fairness_sensitivity=1):\n    utility_values = []\n    for trial in trial_data:\n        split_self = trial.get(\"split_self\", 0)\n        combined_earning = trial.get(\"combined_earning\", 0)\n        token_self = trial.get(\"token_self\", 0)\n        token_opp = trial.get(\"token_opp\", 0)\n\n        if token_self + token_opp ==0: #Handle the case of zero tokens to avoid division by zero\n          normative_share = 0\n        else:\n          normative_share = combined_earning * (token_self / (token_self + token_opp))\n\n        utility = split_self - fairness_sensitivity * max(normative_share - split_self, 0)\n        utility_values.append(utility)\n    return utility_values",
  "fitting_results": [
    {
      "fairness_sensitivity": 7.68430932786475,
      "success": true,
      "log_likelihood": -12.012547703918099,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 1.551226772972221,
      "success": true,
      "log_likelihood": -16.37303515340922,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 1.6418944267028197,
      "success": true,
      "log_likelihood": -12.536623085400947,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 1.8940786518827897,
      "success": true,
      "log_likelihood": -14.026061752359045,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 2.260006413145157,
      "success": true,
      "log_likelihood": -11.165990478076143,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 1.1121992288082714,
      "success": true,
      "log_likelihood": -13.729366392629057,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 0.0,
      "success": true,
      "log_likelihood": -6.9501298794562105,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 1.0595200372203468,
      "success": true,
      "log_likelihood": -13.79365702474473,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 0.0,
      "success": true,
      "log_likelihood": -6.950129879456211,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 2.4063796049548194,
      "success": true,
      "log_likelihood": -11.667391941212633,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 2.206789408517302,
      "success": true,
      "log_likelihood": -9.135942097573615,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 6.2258767343600985,
      "success": true,
      "log_likelihood": -11.971441566213336,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 2.390781634145479,
      "success": true,
      "log_likelihood": -10.422283600816106,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 0.0,
      "success": true,
      "log_likelihood": -6.950129879456208,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 0.0,
      "success": true,
      "log_likelihood": -6.950129879456209,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 0.0,
      "success": true,
      "log_likelihood": -6.95012987945621,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 0.0,
      "success": true,
      "log_likelihood": -6.950129879456209,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 0.18807436358930718,
      "success": true,
      "log_likelihood": -10.280097766720266,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 0.15499619106365417,
      "success": true,
      "log_likelihood": -10.895189135932391,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 0.0,
      "success": true,
      "log_likelihood": -6.950129879456208,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 1.4665799511099065,
      "success": true,
      "log_likelihood": -15.630634720834147,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 0.2655515821335554,
      "success": true,
      "log_likelihood": -11.71553554895359,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 1.8188968081460488,
      "success": true,
      "log_likelihood": -18.739706213180934,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 1.30572809245813,
      "success": true,
      "log_likelihood": -17.101735091902658,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 1.884404963056823,
      "success": true,
      "log_likelihood": -14.2427543347183,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 1.2002249938064349,
      "success": true,
      "log_likelihood": -15.642404018986682,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 1.374202402509356,
      "success": true,
      "log_likelihood": -13.671493923465588,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 4.419229493310382,
      "success": true,
      "log_likelihood": -5.69833246957172,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 0.11115047488128868,
      "success": true,
      "log_likelihood": -11.660104839713679,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 0.5108863753784313,
      "success": true,
      "log_likelihood": -16.27666092100739,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 0.0,
      "success": true,
      "log_likelihood": -6.950129879456209,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 7.684310524978805,
      "success": true,
      "log_likelihood": -12.012547703917278,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 1.446244902453302,
      "success": true,
      "log_likelihood": -22.183321687270244,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 2.0391821887467545,
      "success": true,
      "log_likelihood": -15.41276889368694,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 0.0,
      "success": true,
      "log_likelihood": -6.9501298794562105,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 0.8212819286102597,
      "success": true,
      "log_likelihood": -14.915760549691477,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 0.9007501992314441,
      "success": true,
      "log_likelihood": -12.543270001975182,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 1.7397915573394926,
      "success": true,
      "log_likelihood": -14.615461339649567,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 0.9247006006550151,
      "success": true,
      "log_likelihood": -17.82600685680063,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 0.0,
      "success": true,
      "log_likelihood": -10.850129878148211,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 1.1777509276071148,
      "success": true,
      "log_likelihood": -17.79909176674204,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 3.589710126229551,
      "success": true,
      "log_likelihood": -13.536569215704688,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 0.0,
      "success": true,
      "log_likelihood": -9.650129877974955,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 1.2230303713778181,
      "success": true,
      "log_likelihood": -16.478924587711717,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 1.1283365689391969,
      "success": true,
      "log_likelihood": -14.752309167270795,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 0.5151316907891018,
      "success": true,
      "log_likelihood": -16.163185250404705,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 1.4665799368540857,
      "success": true,
      "log_likelihood": -15.630634721864453,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 1.722909771709796,
      "success": true,
      "log_likelihood": -19.5251606986087,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 2.50537689086828,
      "success": true,
      "log_likelihood": -11.612605292146366,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 0.8629951113756421,
      "success": true,
      "log_likelihood": -25.97236004881503,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 0.6826040003643904,
      "success": true,
      "log_likelihood": -17.487698787335127,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 3.687885133167791,
      "success": true,
      "log_likelihood": -19.140847876386676,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 1.1337519598307177,
      "success": true,
      "log_likelihood": -19.09248097576272,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 0.7354869910993153,
      "success": true,
      "log_likelihood": -22.24962356498301,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 1.9336322870553755,
      "success": true,
      "log_likelihood": -20.65194006028009,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 3.262487389359451,
      "success": true,
      "log_likelihood": -7.187614453789321,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 3.414578556388144,
      "success": true,
      "log_likelihood": -10.386563735749627,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 0.0,
      "success": true,
      "log_likelihood": -13.775129876771425,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 5.638613956928417,
      "success": true,
      "log_likelihood": -13.528298705487565,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 0.2020161017611599,
      "success": true,
      "log_likelihood": -14.51121013001635,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 0.958724349931159,
      "success": true,
      "log_likelihood": -19.806633873563424,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 1.7229094258569968,
      "success": true,
      "log_likelihood": -15.025160701753647,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 7.684315668618334,
      "success": true,
      "log_likelihood": -12.012547703916939,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 1.3678371934589253,
      "success": true,
      "log_likelihood": -21.349320221418495,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 3.6878742527306945,
      "success": true,
      "log_likelihood": -11.340847885452451,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 1.2637962702386036,
      "success": true,
      "log_likelihood": -15.301181385370114,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 0.0,
      "success": true,
      "log_likelihood": -10.400129878563996,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 0.1973827959829352,
      "success": true,
      "log_likelihood": -13.10118769838685,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 1.0699241170248317,
      "success": true,
      "log_likelihood": -16.483949531947367,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 0.0,
      "success": true,
      "log_likelihood": -12.05012987694544,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 10.0,
      "success": true,
      "log_likelihood": -2.3866661013818056,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 3.9730260941486715,
      "success": true,
      "log_likelihood": -17.331392329373312,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 1.3999611099214224,
      "success": true,
      "log_likelihood": -15.955381447435926,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 0.30972110595298336,
      "success": true,
      "log_likelihood": -15.24975572790305,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 1.1337515237462976,
      "success": true,
      "log_likelihood": -24.34248097277761,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 0.9198876252694963,
      "success": true,
      "log_likelihood": -14.970178836191549,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 0.0,
      "success": true,
      "log_likelihood": -9.725129878614155,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 7.0055709617051285,
      "success": true,
      "log_likelihood": -17.01233439424806,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 0.6261897851185428,
      "success": true,
      "log_likelihood": -23.600671064622027,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 7.684314769945419,
      "success": true,
      "log_likelihood": -12.012547703916622,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 1.054341343702307,
      "success": true,
      "log_likelihood": -24.447926714503527,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 0.0,
      "success": true,
      "log_likelihood": -12.20012987731324,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 5.4737206350243,
      "success": true,
      "log_likelihood": -14.769930323422612,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 1.452988832633157,
      "success": true,
      "log_likelihood": -12.999600639701375,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 0.7266109944377064,
      "success": true,
      "log_likelihood": -26.70928056328246,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 7.684312533268069,
      "success": true,
      "log_likelihood": -10.212547704504955,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 0.76677163998364,
      "success": true,
      "log_likelihood": -18.030295987590442,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 3.4559803678842185,
      "success": true,
      "log_likelihood": -15.3039269954871,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 0.0,
      "success": true,
      "log_likelihood": -9.050129878931928,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 1.3678371651295445,
      "success": true,
      "log_likelihood": -15.349320224936829,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "fairness_sensitivity": 0.5491377265983245,
      "success": true,
      "log_likelihood": -21.243908961167534,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    }
  ],
  "parameter_recovery": {
    "correlations": {
      "fairness_sensitivity": {
        "r": 0.9416181329363215,
        "p": 3.9667878306469623e-48
      }
    }
  },
  "bic_results": {
    "average_bic": 31.71992398210481,
    "individual_bics": [
      27.608614346292306,
      36.32958924527455,
      28.656765109258004,
      31.6356424431742,
      25.915499894608395,
      31.042251723714223,
      17.483778697368532,
      31.17083298794557,
      17.483778697368532,
      26.918302820881376,
      21.85540313360334,
      27.52640207088278,
      24.428086140088322,
      17.483778697368525,
      17.48377869736853,
      17.48377869736853,
      17.48377869736853,
      24.14371447189664,
      25.37389721032089,
      17.483778697368525,
      34.844788380124406,
      27.014590036363288,
      41.06293136481798,
      37.786989122261424,
      32.069027607892714,
      34.86832697642947,
      30.926506785387286,
      14.98018387759955,
      26.903728617883466,
      36.13684078047089,
      17.48377869736853,
      27.608614346290665,
      47.950162312996596,
      34.40905672582999,
      17.483778697368532,
      33.41504003783906,
      28.670058942406474,
      32.81444161775524,
      39.235532652057366,
      25.28377869475253,
      39.18170247194019,
      30.656657369865485,
      22.88377869440602,
      36.54136811387954,
      33.0881372729977,
      35.90988943926552,
      34.844788382185016,
      42.63384033567351,
      26.80872952274884,
      55.52823903608617,
      38.55891651312636,
      41.86521469122946,
      41.76848088998155,
      48.08276606842213,
      44.88739905901629,
      17.95874784603475,
      24.356646409955363,
      31.13377869199896,
      30.64011634943124,
      32.60593919848881,
      43.19678668558296,
      33.633840341963406,
      27.608614346289986,
      46.2821593812931,
      26.26521470936101,
      34.18588170919634,
      24.383778695584102,
      29.78589433522981,
      36.55141800235084,
      27.68377869234699,
      8.356851141219721,
      38.24630359720273,
      35.49428183332796,
      34.08303039426221,
      52.26848088401133,
      33.52387661083921,
      23.03377869568442,
      37.60818772695223,
      50.78486106770016,
      27.608614346289354,
      52.479372367463164,
      27.983778693082588,
      33.123379585301336,
      29.58272021785886,
      57.002080065021026,
      24.00861434746602,
      39.64411091363699,
      34.19137292943031,
      21.683778696319965,
      34.28215938832977,
      46.07133686079118
    ],
    "num_parameters": 1,
    "bic_formula": "BIC = -2 * log_likelihood + k * log(n)"
  }
}