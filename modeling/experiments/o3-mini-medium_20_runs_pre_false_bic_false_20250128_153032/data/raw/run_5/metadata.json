{
  "task_description": "In the  experiment, each participant is given 36 different proposals to respond to. Each is designated by a trial number in the data set This gives 36 instances for the learnable parameters to be trained. There is also a pretask where the participant finds a number of tokens that correspond to their contribution to the group. This is designated by the variable \"token_self\". The other variable, \"token_opp\", is the number of tokens found the opponent's and represents the opoonents contribution to the shared pot that will be later divided by the opponent.\n\nNote that in each trial there is a variable amount of money in the combined earning, so that two equal split_self variables do not represent the same \"fairness\".\n\nBelow is the description of each variable in the dataset, which will be followed by information about the data type of the variable:\n\ntrial_type = how much was the contribution [1 = equal, 2 = opponent more, 3 = participant more]\ntrial_role = the role of the participant [1 = responder, 2 = proposer]\ntoken_opp = number of tokens found by the opponent\ntoken_self = number of tokens found by the participant\ncombined_earning = amount of money earned in total (note that each token found is \u00a33)\nsplit_opp = the proposed share of the opponent (in \u00a3)\nsplit_self = the proposed share for the participant (in \u00a3)\nsplitperc_opp = same but in %\nsplit_perc_self = same but in %\naccept = whether the participant responded accept (1) or reject (0)\naccepted_amount = if accepted, what is the amount gain (in \u00a3)\naccepted_perc = same as above but in %\nproposed_perc = when participant is the proposer, what is the % proposed to the opponent\n\nDataset:\n\nDataset Structure:\nVariables available:\n- ID (int64)\n- group (object)\n- trial_number (int64)\n- trial_type (int64)\n- trial_role (int64)\n- token_opp (int64)\n- token_self (int64)\n- combined_earning (int64)\n- split_opp (float64)\n- split_self (float64)\n- splitperc_opp (int64)\n- splitperc_self (int64)\n- accept (float64)\n- accepted_amount (float64)\n- accepted_perc (float64)\n- proposed_perc (float64)\n- proposed_amount (float64)\n\nNumber of observations: 3276\n\nDataset:\n\nDataset Structure:\nVariables available:\n- ID (int64)\n- group (object)\n- trial_number (int64)\n- trial_type (int64)\n- trial_role (int64)\n- token_opp (int64)\n- token_self (int64)\n- combined_earning (int64)\n- split_opp (float64)\n- split_self (float64)\n- splitperc_opp (int64)\n- splitperc_self (int64)\n- accept (float64)\n- accepted_amount (float64)\n- accepted_perc (float64)\n- proposed_perc (float64)\n- proposed_amount (float64)\n\nNumber of observations: 3276",
  "output_description": "Design a computational model for the given task. The model should obtain the utility, (not the probability of choosing an action).  Your goal is to eventually explore the entire space of possible explainations and mechanisms by which the observed behavior arises.\n\nYour model should use the given variables appropriately, but does not necessary need to use all or even most of the variables. Do not include the model for the utility of rejecting an offer. \n\nThe model should:\n1. Predict only responder behavior.\n2. Build on relevant psychological principles.\n3. Be considerate of high covariance between learnable parameters as the model\nwill have to pass parameter recovery tests.\n4. Be applicable to the dataset given within the task description (i.e. the model should be able to be run using only the provided dataset structure).\n5. Not include parameters to simulate general stochasticity of behavior, because this will be handled later by a temperature parameter.\n6. Should have no more than two learnable parameters.\n7. This specific model should calculate the utility of an action, which will then be used to determine\nthe probability of choosing that action. Negative values should represent a negative utility, and thus an unlikly action.\n\nFor any learnable parameters in your model, you must specify finite numerical bounds (it just can not be infinity) in the variable descriptions. However, this bound should be generous. The utility variable may be unbounded (-inf to inf).\n\nFirst, reason step by step about:\n* The key psychological mechanisms involved\n* How these mechanisms interact\n* What mathematical form could capture these interactions\n* What parameters would be needed to calibrate the model\n* How the model variables map to observable behavior\n\nThen, provide your formal mathematical model between <MODEL> tags, followed by variable descriptions between <VARIABLES> tags. Use clear mathematical notation and ensure each variable is fully described. Every variable must be utilized within the mathematical formula provided between <MODEL> and </MODEL>. For variable descriptions, provide them in a JSON format with the following structure: <VARIABLES> Bounds are by default inclusive. Please spell out the greek variable names instead of using the symbols. Finally, you should provide a short description of the model in the summary tags <SUMMARY> </SUMMARY>. This will be used to compare different computational models of the task; it should be concise and purely descriptive. Do not include generic information about the name of the tasks, since that is implied. \n\n{\n  \"variables\": {\n    \"variable_name\": {\n      \"description\": \"Clear description\",\n      \"range\": {\n        \"min\": value,\n        \"max\": value,\n        \"inclusive_min\": boolean,\n        \"inclusive_max\": boolean\n      },\n      \"distribution\": {\n        \"type\": \"distribution type\",\n        \"parameters\": {}\n      },\n      \"learnable\": boolean,\n      \"source\": \"learnable/data/calculated\"\n    }\n  }\n}\n</VARIABLES>\n\nExample #1: \n<EXAMPLE>\n(Model of a Random Choice Task):\nLet me think through this step by step...\n[your reasoning here]\n\n<MODEL>\nU_i = \u03b2 + \u03b5E + \u03b7N\n</MODEL>\n\n<VARIABLES>\n{\n  \"variables\": {\n    \"U_i\": {\n      \"description\": \"Utility of choosing action i\",\n      \"range\": {\n        \"min\": \"-inf\",\n        \"max\": \"inf\"\n      },\n      \"learnable\": false,\n      \"source\": \"calculated\"\n    },\n    \"beta\": {\n      \"description\": \"Base tendency parameter (inherent preference)\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": 1\n      },\n      \"learnable\": true,\n      \"source\": \"learnable\"\n    },\n    \"epsilon\": {\n      \"description\": \"Environmental sensitivity parameter\",\n      \"range\": {\n        \"min\": \"-inf\",\n        \"max\": \"inf\"\n      },\n      \"learnable\": true,\n      \"source\": \"learnable\"\n    },\n    \"E\": {\n      \"description\": \"Environmental cue value\",\n      \"range\": {\n        \"min\": \"-inf\",\n        \"max\": \"inf\"\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"eta\": {\n      \"description\": \"Noise parameter\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": 1,\n        \"exclusive_max\": true\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"N\": {\n      \"description\": \"Random noise drawn from normal distribution N(0,1)\",\n      \"distribution\": {\n        \"type\": \"normal\",\n        \"mean\": 0,\n        \"std\": 1\n      },\n      \"learnable\": false,\n      \"source\": \"calculated\"\n    }\n  }\n}\n</VARIABLES>\n<SUMMARY>\nA linear utility model combining base preference, environmental influence, and stochastic noise. The model uses two learnable parameters: a base tendency parameter (\u03b2) constrained to [0,1] and an unconstrained environmental sensitivity parameter (\u03b5). Environmental cues and normally distributed noise modify the base utility, allowing for both systematic and random variation in choice behavior.\n</SUMMARY>\n</EXAMPLE>\n\nPlease be sure to provide the mathematical formula for the model between <MODEL> and </MODEL>, and the variable descriptions between <VARIABLES> and </VARIABLES>. No description of the model should be provided within the <MODEL> tags.\n\nThe parameter names you choose in your <VARIABLES> section will be used exactly as specified in subsequent code generation. Please choose clear, non-reserved parameter names that can be used directly in Python code. For example, avoid Python reserved words like 'lambda' and use alternatives like 'learning_rate' or 'lambda_param'.",
  "dataset_info": "\nDataset Structure:\nVariables available:\n- ID (int64)\n- group (object)\n- trial_number (int64)\n- trial_type (int64)\n- trial_role (int64)\n- token_opp (int64)\n- token_self (int64)\n- combined_earning (int64)\n- split_opp (float64)\n- split_self (float64)\n- splitperc_opp (int64)\n- splitperc_self (int64)\n- accept (float64)\n- accepted_amount (float64)\n- accepted_perc (float64)\n- proposed_perc (float64)\n- proposed_amount (float64)\n\nNumber of observations: 3276",
  "learnable_parameters": {
    "beta_0": {
      "description": "Baseline intercept parameter capturing a systematic bias in utility evaluations.",
      "range": {
        "min": -50,
        "max": 50,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": null,
      "learnable": true,
      "source": "learnable"
    },
    "beta_1": {
      "description": "Fairness sensitivity parameter representing the penalty per unit deviation from the fair share.",
      "range": {
        "min": 0,
        "max": 10,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": null,
      "learnable": true,
      "source": "learnable"
    }
  },
  "model_specification": "U_accept = beta_0 + split_self - beta_1 * abs(split_self - ((token_self / (token_self + token_opp)) * combined_earning))",
  "variable_descriptions": {
    "U_accept": {
      "description": "Utility of accepting the offer, computed as the monetary share adjusted by a penalty for deviation from fairness.",
      "range": {
        "min": "-inf",
        "max": "inf",
        "inclusive_min": false,
        "inclusive_max": false
      },
      "distribution": null,
      "learnable": false,
      "source": "calculated"
    },
    "beta_0": {
      "description": "Baseline intercept parameter capturing a systematic bias in utility evaluations.",
      "range": {
        "min": -50,
        "max": 50,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": null,
      "learnable": true,
      "source": "learnable"
    },
    "beta_1": {
      "description": "Fairness sensitivity parameter representing the penalty per unit deviation from the fair share.",
      "range": {
        "min": 0,
        "max": 10,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": null,
      "learnable": true,
      "source": "learnable"
    },
    "split_self": {
      "description": "The proposed share (in \u00a3) allocated to the participant.",
      "range": {
        "min": "-inf",
        "max": "inf",
        "inclusive_min": false,
        "inclusive_max": false
      },
      "distribution": null,
      "learnable": false,
      "source": "data"
    },
    "token_self": {
      "description": "The number of tokens collected by the participant (used to compute fair share).",
      "range": {
        "min": 0,
        "max": "inf",
        "inclusive_min": true,
        "inclusive_max": false
      },
      "distribution": null,
      "learnable": false,
      "source": "data"
    },
    "token_opp": {
      "description": "The number of tokens collected by the opponent (used to compute fair share).",
      "range": {
        "min": 0,
        "max": "inf",
        "inclusive_min": true,
        "inclusive_max": false
      },
      "distribution": null,
      "learnable": false,
      "source": "data"
    },
    "combined_earning": {
      "description": "The total amount of money earned in a trial; each token corresponds to \u00a33.",
      "range": {
        "min": 0,
        "max": "inf",
        "inclusive_min": true,
        "inclusive_max": false
      },
      "distribution": null,
      "learnable": false,
      "source": "data"
    }
  },
  "model_summary": "A utility model for responder behavior in which the utility of accepting an offer is given by the offered monetary share adjusted downward by a penalty proportional to the deviation from a fair share computed based on relative token contributions. Two learnable parameters determine a baseline intercept (beta_0) and fairness sensitivity (beta_1), with all inputs coming directly from the dataset.",
  "full_reasoning": "Step-by-step reasoning:\n1. Key psychological mechanisms:\n   \u2022 Responders care not only about the monetary amount they receive, but also about how fair the offer is relative to what they \u201cdeserve\u201d given their contribution (as measured by token_self relative to the total tokens found). \n   \u2022 A fairness mechanism makes the utility of an offer lower when the offered share (split_self) deviates from what would be a \u201cfair\u201d proportion of the combined earning based on the tokens each has earned.\n   \u2022 An intercept (baseline) parameter can capture any systematic bias (a baseline tendency to accept more or less independent of fairness), while a fairness\u2010sensitivity parameter captures the degree to which deviation from fairness diminishes utility.\n\n2. Mechanism interaction:\n   \u2022 The fair share is computed as the proportion of tokens that the participant found multiplied by the combined total earnings.\n   \u2022 The absolute difference between the offered share (split_self) and the computed fair share is then penalized. The greater this difference, the lower the utility.\n   \u2022 The intercept shifts the overall utility level.\n\n3. Mathematical formulation:\n   \u2022 Define fair_share = (token_self / (token_self + token_opp)) \u00d7 combined_earning.\n   \u2022 The utility of accepting an offer is given by:\n\u2003\u2003U_accept = \u03b2\u2080 + split_self \u2013 \u03b2\u2081 \u00d7 |split_self \u2013 fair_share|\n   \u2022 Here \u03b2\u2080 is a baseline intercept and \u03b2\u2081 is a fairness sensitivity parameter.\n\n4. Parameter calibration:\n   \u2022 \u03b2\u2080 is free to vary over a generous finite range (e.g., \u201350 to 50) to capture individual differences in baseline preference for acceptance.\n   \u2022 \u03b2\u2081 is non-negative and bounded between 0 and 10, representing how strongly deviations from fairness affect utility.\n   \u2022 Only these two parameters are learnable.\n\n5. Mapping to observable behavior:\n   \u2022 The model uses observable variables (token_self, token_opp, combined_earning, split_self) to compute a fair share.\n   \u2022 The computed utility U_accept (which can be negative if the fairness violation is large) then feeds into a later choice function (with additional stochasticity via a temperature parameter) to predict whether the responder accepts the offer. \n\nBelow is the formal model specification:\n\n<MODEL>\nU_accept = beta_0 + split_self - beta_1 * abs(split_self - ((token_self / (token_self + token_opp)) * combined_earning))\n</MODEL>\n\n<VARIABLES>\n{\n  \"variables\": {\n    \"U_accept\": {\n      \"description\": \"Utility of accepting the offer, computed as the monetary share adjusted by a penalty for deviation from fairness.\",\n      \"range\": {\n        \"min\": \"-inf\",\n        \"max\": \"inf\",\n        \"inclusive_min\": false,\n        \"inclusive_max\": false\n      },\n      \"learnable\": false,\n      \"source\": \"calculated\"\n    },\n    \"beta_0\": {\n      \"description\": \"Baseline intercept parameter capturing a systematic bias in utility evaluations.\",\n      \"range\": {\n        \"min\": -50,\n        \"max\": 50,\n        \"inclusive_min\": true,\n        \"inclusive_max\": true\n      },\n      \"learnable\": true,\n      \"source\": \"learnable\"\n    },\n    \"beta_1\": {\n      \"description\": \"Fairness sensitivity parameter representing the penalty per unit deviation from the fair share.\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": 10,\n        \"inclusive_min\": true,\n        \"inclusive_max\": true\n      },\n      \"learnable\": true,\n      \"source\": \"learnable\"\n    },\n    \"split_self\": {\n      \"description\": \"The proposed share (in \u00a3) allocated to the participant.\",\n      \"range\": {\n        \"min\": \"-inf\",\n        \"max\": \"inf\",\n        \"inclusive_min\": false,\n        \"inclusive_max\": false\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"token_self\": {\n      \"description\": \"The number of tokens collected by the participant (used to compute fair share).\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": \"inf\",\n        \"inclusive_min\": true,\n        \"inclusive_max\": false\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"token_opp\": {\n      \"description\": \"The number of tokens collected by the opponent (used to compute fair share).\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": \"inf\",\n        \"inclusive_min\": true,\n        \"inclusive_max\": false\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"combined_earning\": {\n      \"description\": \"The total amount of money earned in a trial; each token corresponds to \u00a33.\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": \"inf\",\n        \"inclusive_min\": true,\n        \"inclusive_max\": false\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    }\n  }\n}\n</VARIABLES>\n\n<SUMMARY>\nA utility model for responder behavior in which the utility of accepting an offer is given by the offered monetary share adjusted downward by a penalty proportional to the deviation from a fair share computed based on relative token contributions. Two learnable parameters determine a baseline intercept (beta_0) and fairness sensitivity (beta_1), with all inputs coming directly from the dataset.\n</SUMMARY>",
  "simulation_code": "def simulate_model(trial_data, beta_0=0, beta_1=1):\n    utility_values = []\n    for trial in trial_data:\n        split_self = trial.get(\"split_self\", 0)\n        token_self = trial.get(\"token_self\", 0)\n        token_opp = trial.get(\"token_opp\", 0)\n        combined_earning = trial.get(\"combined_earning\", 0)\n\n        if token_self + token_opp ==0: #Handle division by zero\n            fair_share = 0\n        else:\n            fair_share = (token_self / (token_self + token_opp)) * combined_earning\n\n        utility = beta_0 + split_self - beta_1 * abs(split_self - fair_share)\n        utility_values.append(utility)\n    return utility_values",
  "fitting_results": [
    {
      "beta_0": -7.057909942320852,
      "beta_1": 1.145314622312148,
      "success": true,
      "log_likelihood": -7.076153166158578,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": 0.8582517692413627,
      "beta_1": 1.8052454888905725,
      "success": true,
      "log_likelihood": -16.511902241615864,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": 4.2018171116105245,
      "beta_1": 3.022055422322851,
      "success": true,
      "log_likelihood": -10.841965306150087,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": -0.41583009132973553,
      "beta_1": 1.7119811863803878,
      "success": true,
      "log_likelihood": -14.351887280691308,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": 5.627311202220184,
      "beta_1": 4.488582985935218,
      "success": true,
      "log_likelihood": -8.849852971617047,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": 4.548857739440011,
      "beta_1": 2.428710844583396,
      "success": true,
      "log_likelihood": -11.65843667064043,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": 26.477185497538162,
      "beta_1": 0.0,
      "success": true,
      "log_likelihood": -1.4199590884466089e-05,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": 7.200532441124411,
      "beta_1": 3.123422403084616,
      "success": true,
      "log_likelihood": -10.096038453387246,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": 26.92967400713128,
      "beta_1": 0.0,
      "success": true,
      "log_likelihood": -1.1323776021088274e-05,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": 1.7191380240267657,
      "beta_1": 3.0379147399156894,
      "success": true,
      "log_likelihood": -11.770982051456183,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": 4.639430148044555,
      "beta_1": 3.9896832018001827,
      "success": true,
      "log_likelihood": -7.418157574206676,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": -5.80953467022494,
      "beta_1": 1.462128939280323,
      "success": true,
      "log_likelihood": -8.148808390530467,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": 4.0517357179380245,
      "beta_1": 4.018436140284894,
      "success": true,
      "log_likelihood": -9.212053795255539,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": 50.0,
      "beta_1": 0.0,
      "success": true,
      "log_likelihood": 3.489217581362365e-09,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": 50.0,
      "beta_1": 0.0,
      "success": true,
      "log_likelihood": 3.489217581362365e-09,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": 50.0,
      "beta_1": 0.0,
      "success": true,
      "log_likelihood": 3.4892175813623653e-09,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": 42.67352445144772,
      "beta_1": 0.0,
      "success": true,
      "log_likelihood": -7.191240937298082e-10,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": 5.142209527107339,
      "beta_1": 1.3643708237096417,
      "success": true,
      "log_likelihood": -7.830983138863536,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": 12.546560218329065,
      "beta_1": 2.931410526896918,
      "success": true,
      "log_likelihood": -5.459770078889126,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": 28.113360313699953,
      "beta_1": 0.0,
      "success": true,
      "log_likelihood": -6.263911593238775e-06,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": 3.668166514151011,
      "beta_1": 2.6185746867143656,
      "success": true,
      "log_likelihood": -14.241709448592708,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": 9.10427897191666,
      "beta_1": 2.3566281969682343,
      "success": true,
      "log_likelihood": -7.276276224490245,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": -2.99568455578612,
      "beta_1": 0.7930406734729127,
      "success": true,
      "log_likelihood": -16.919072098542337,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": -0.14198624382763272,
      "beta_1": 1.2448574889297035,
      "success": true,
      "log_likelihood": -17.308589965431636,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": 5.922804349397161,
      "beta_1": 3.9763911018252527,
      "success": true,
      "log_likelihood": -11.477313898190218,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": 1.5365630933043803,
      "beta_1": 1.6419396454190713,
      "success": true,
      "log_likelihood": -15.438692071723965,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": 2.1367034547876727,
      "beta_1": 2.0207717049258958,
      "success": true,
      "log_likelihood": -13.208754727642269,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": 4.1452816949127955,
      "beta_1": 6.769943928427158,
      "success": true,
      "log_likelihood": -6.0116609872098055,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": 8.195742228229872,
      "beta_1": 1.9320287393528093,
      "success": true,
      "log_likelihood": -7.7291799197750315,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": 3.767880975125884,
      "beta_1": 1.4412038305955286,
      "success": true,
      "log_likelihood": -14.62283270798855,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": 27.18273920534075,
      "beta_1": 0.0,
      "success": true,
      "log_likelihood": -9.97746582229478e-06,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": -7.05792217551934,
      "beta_1": 1.1453225910884992,
      "success": true,
      "log_likelihood": -7.076153166088155,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": -3.155796768557378,
      "beta_1": 0.46638476644234134,
      "success": true,
      "log_likelihood": -19.83679204885847,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": -0.7408524831175313,
      "beta_1": 1.7277063432606317,
      "success": true,
      "log_likelihood": -15.707220821431857,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": 26.682366085169992,
      "beta_1": 0.0,
      "success": true,
      "log_likelihood": -1.2814732636744955e-05,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": -0.10899245618436866,
      "beta_1": 0.7813322096800515,
      "success": true,
      "log_likelihood": -15.029224664617132,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": 5.335385056567669,
      "beta_1": 2.3648342881272644,
      "success": true,
      "log_likelihood": -9.919012403337614,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": 3.145041954688239,
      "beta_1": 2.7876891985513654,
      "success": true,
      "log_likelihood": -13.658964651188993,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": 2.906363231346278,
      "beta_1": 1.7210671780734625,
      "success": true,
      "log_likelihood": -16.7890984269636,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": 4.906787959298201,
      "beta_1": 0.9265853143021671,
      "success": true,
      "log_likelihood": -8.625340175707061,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": 3.193955147076027,
      "beta_1": 2.111614119724511,
      "success": true,
      "log_likelihood": -16.640868581685936,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": -2.8610543446475662,
      "beta_1": 1.9080182630578846,
      "success": true,
      "log_likelihood": -13.100088105516628,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": 5.219179951302585,
      "beta_1": 0.35689219307017833,
      "success": true,
      "log_likelihood": -5.693255889349036,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": 0.323574779700964,
      "beta_1": 1.303216461346979,
      "success": true,
      "log_likelihood": -16.651697485279247,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": 2.306901649485932,
      "beta_1": 1.7896134585981263,
      "success": true,
      "log_likelihood": -14.12868450681857,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": 0.21939867309260827,
      "beta_1": 0.5618098345543527,
      "success": true,
      "log_likelihood": -16.220082735964763,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": 1.528548339883598,
      "beta_1": 1.931392492150896,
      "success": true,
      "log_likelihood": -15.498625712734084,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": -2.532023486214631,
      "beta_1": 0.8666993968859534,
      "success": true,
      "log_likelihood": -18.31062074411282,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": 6.008388431363009,
      "beta_1": 5.10705050018561,
      "success": true,
      "log_likelihood": -9.320516929141665,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": -3.267943676871443,
      "beta_1": 0.0,
      "success": true,
      "log_likelihood": -22.687410151792957,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": 0.8726479106799895,
      "beta_1": 0.9005961671856487,
      "success": true,
      "log_likelihood": -17.437243875496026,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": -6.369181500582922,
      "beta_1": 0.6595710310014761,
      "success": true,
      "log_likelihood": -11.807329767372366,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": -1.5577703031792443,
      "beta_1": 0.6710162116449461,
      "success": true,
      "log_likelihood": -18.679024284630668,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": -2.585161594704551,
      "beta_1": 0.06447997427027367,
      "success": true,
      "log_likelihood": -20.286761853965963,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": -1.3564767510646316,
      "beta_1": 1.4222021336512776,
      "success": true,
      "log_likelihood": -20.635264594603424,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": 3.6593235732748672,
      "beta_1": 5.0732859678989755,
      "success": true,
      "log_likelihood": -6.878403012951515,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": -0.3770514439998382,
      "beta_1": 2.9826202578055434,
      "success": true,
      "log_likelihood": -11.28693715475274,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": 1.0428625572734542,
      "beta_1": 0.0,
      "success": true,
      "log_likelihood": -13.253874573842651,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": -6.128620425571298,
      "beta_1": 1.2207007302618138,
      "success": true,
      "log_likelihood": -8.674810071237166,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": 0.7033202949548701,
      "beta_1": 0.36301999330788354,
      "success": true,
      "log_likelihood": -14.44430215950232,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": 0.11892990732143315,
      "beta_1": 0.9797009900822066,
      "success": true,
      "log_likelihood": -19.94441553236658,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": 2.898535939060551,
      "beta_1": 2.681843251683423,
      "success": true,
      "log_likelihood": -14.219097753498776,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": -7.057906041887553,
      "beta_1": 1.1453284280513905,
      "success": true,
      "log_likelihood": -7.0761531660462476,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": -2.732016939943607,
      "beta_1": 0.5286924445298753,
      "success": true,
      "log_likelihood": -19.656568797463088,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": -2.683614353687587,
      "beta_1": 2.0318982178869915,
      "success": true,
      "log_likelihood": -11.15471592728251,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": 0.756411076364148,
      "beta_1": 1.4749435115686802,
      "success": true,
      "log_likelihood": -15.398201378595413,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": 5.863174175810512,
      "beta_1": 1.1621455926280704,
      "success": true,
      "log_likelihood": -7.70691680889589,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": 5.449400684647292,
      "beta_1": 1.4444560138260172,
      "success": true,
      "log_likelihood": -10.470392240720079,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": -1.0737828867268255,
      "beta_1": 0.750949121323498,
      "success": true,
      "log_likelihood": -16.377481981040585,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": 3.0230474610149187,
      "beta_1": 0.4192774641936787,
      "success": true,
      "log_likelihood": -10.622035986132504,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": -4.064390819814456,
      "beta_1": 3.201886720137891,
      "success": true,
      "log_likelihood": -6.449592583511395,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": -5.992261551841292,
      "beta_1": 0.8788059464869811,
      "success": true,
      "log_likelihood": -11.144860027743668,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": 0.7795136901382952,
      "beta_1": 1.6232128622613846,
      "success": true,
      "log_likelihood": -16.078132964967168,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": 0.5129810597670181,
      "beta_1": 0.4263700422402107,
      "success": true,
      "log_likelihood": -15.236806610562377,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": -2.0942631574027923,
      "beta_1": 0.5660511691439805,
      "success": true,
      "log_likelihood": -22.551435775233813,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": 6.109627075772401,
      "beta_1": 2.6066021673840996,
      "success": true,
      "log_likelihood": -11.874412489900878,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": 6.38956105451951,
      "beta_1": 1.0361126885635925,
      "success": true,
      "log_likelihood": -6.535901723089363,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": -8.187287888165443,
      "beta_1": 1.1292833514603917,
      "success": true,
      "log_likelihood": -6.498511567176154,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": -2.4932337562574953,
      "beta_1": 0.0,
      "success": true,
      "log_likelihood": -21.68673535221895,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": -7.0579405705882,
      "beta_1": 1.1453152924304395,
      "success": true,
      "log_likelihood": -7.076153166215535,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": -2.1382985020159504,
      "beta_1": 0.440224205287641,
      "success": true,
      "log_likelihood": -23.426498397161296,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": 1.7057877983066634,
      "beta_1": 0.0,
      "success": true,
      "log_likelihood": -10.998506324687039,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": -5.0358401454259445,
      "beta_1": 2.1399625424986386,
      "success": true,
      "log_likelihood": -8.401444618035256,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": -0.06266482132692652,
      "beta_1": 1.412040898162387,
      "success": true,
      "log_likelihood": -13.243326217393799,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": -1.9338615784765594,
      "beta_1": 0.21060482240675515,
      "success": true,
      "log_likelihood": -25.82966440933415,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": -5.695533641793726,
      "beta_1": 1.553434460201902,
      "success": true,
      "log_likelihood": -8.860764255434715,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": 2.0937170028633787,
      "beta_1": 1.3145947705393548,
      "success": true,
      "log_likelihood": -17.447769135582593,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": -2.1899500429443113,
      "beta_1": 2.3944705074313246,
      "success": true,
      "log_likelihood": -12.952461894084415,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": 8.907753279367162,
      "beta_1": 1.5883432436933018,
      "success": true,
      "log_likelihood": -4.988505876397574,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": -1.8053278348960284,
      "beta_1": 0.800967157136056,
      "success": true,
      "log_likelihood": -14.794105986993978,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "beta_0": -0.5771295353335416,
      "beta_1": 0.394452189485285,
      "success": true,
      "log_likelihood": -21.24005040683077,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    }
  ],
  "parameter_recovery": {
    "correlations": {
      "beta_0": {
        "r": 0.8283592197609209,
        "p": 2.101136291005099e-26
      },
      "beta_1": {
        "r": 0.7488876865417878,
        "p": 3.283453824269941e-19
      }
    }
  },
  "bic_results": {
    "average_bic": 30.720452286633474,
    "individual_bics": [
      21.319344209229378,
      40.19084236014395,
      28.85096848921239,
      35.870812438294834,
      24.86674382014631,
      30.48391121819308,
      7.167066276093989,
      27.359114783686714,
      7.1670605244642624,
      30.709001979824585,
      22.003353025325573,
      23.464654657973156,
      25.591145467423296,
      7.167037869933785,
      7.167037869933785,
      7.167037869933785,
      7.1670378783504685,
      22.829004154639293,
      18.086578034690472,
      7.167050404735407,
      35.650456774097634,
      21.71959032589271,
      41.00518207399689,
      41.78421780777549,
      30.121665673292654,
      38.04442202036015,
      33.584547332196756,
      19.19035985133183,
      22.62539771646228,
      36.41270329288932,
      7.167057831843865,
      21.31934420908853,
      46.84062197462916,
      38.58147951977593,
      7.1670635063774935,
      37.22548720614648,
      27.005062683587447,
      34.48496717929021,
      40.74523473083942,
      24.417718228326343,
      40.44877504028409,
      33.36721408794548,
      18.55354965561029,
      40.47043284747071,
      35.424406890549356,
      39.60720334884174,
      38.16428930238039,
      43.78827936513786,
      25.808071735195547,
      52.54185818049813,
      42.04152562790427,
      30.78169741165695,
      44.52508644617355,
      47.740561584844144,
      48.437567066119065,
      20.92384390281525,
      29.740912186417702,
      33.67478702459752,
      24.516658019386554,
      36.05564219591686,
      47.05586894164538,
      35.60523338390977,
      21.319344209004715,
      46.48017547183839,
      29.476469731477238,
      37.963440634103044,
      22.580871494704,
      28.10782235835238,
      39.92200183899339,
      28.41110984917723,
      20.06622304393501,
      29.456757932399555,
      39.32330380684655,
      37.640651098036976,
      52.269909427379844,
      30.91586285671398,
      20.238841323090945,
      20.16406101126453,
      50.54050858135012,
      21.319344209343292,
      54.02003467123481,
      29.164050526286296,
      23.96992711298273,
      33.65369031169982,
      58.82636669558052,
      24.88856638778165,
      42.062576148077405,
      33.07196166508105,
      17.144049629707368,
      36.75524985090018,
      49.647138690573755
    ],
    "num_parameters": 2,
    "bic_formula": "BIC = -2 * log_likelihood + k * log(n)"
  }
}