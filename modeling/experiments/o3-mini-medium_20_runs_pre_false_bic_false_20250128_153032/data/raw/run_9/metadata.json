{
  "task_description": "In the  experiment, each participant is given 36 different proposals to respond to. Each is designated by a trial number in the data set This gives 36 instances for the learnable parameters to be trained. There is also a pretask where the participant finds a number of tokens that correspond to their contribution to the group. This is designated by the variable \"token_self\". The other variable, \"token_opp\", is the number of tokens found the opponent's and represents the opoonents contribution to the shared pot that will be later divided by the opponent.\n\nNote that in each trial there is a variable amount of money in the combined earning, so that two equal split_self variables do not represent the same \"fairness\".\n\nBelow is the description of each variable in the dataset, which will be followed by information about the data type of the variable:\n\ntrial_type = how much was the contribution [1 = equal, 2 = opponent more, 3 = participant more]\ntrial_role = the role of the participant [1 = responder, 2 = proposer]\ntoken_opp = number of tokens found by the opponent\ntoken_self = number of tokens found by the participant\ncombined_earning = amount of money earned in total (note that each token found is \u00a33)\nsplit_opp = the proposed share of the opponent (in \u00a3)\nsplit_self = the proposed share for the participant (in \u00a3)\nsplitperc_opp = same but in %\nsplit_perc_self = same but in %\naccept = whether the participant responded accept (1) or reject (0)\naccepted_amount = if accepted, what is the amount gain (in \u00a3)\naccepted_perc = same as above but in %\nproposed_perc = when participant is the proposer, what is the % proposed to the opponent\n\nDataset:\n\nDataset Structure:\nVariables available:\n- ID (int64)\n- group (object)\n- trial_number (int64)\n- trial_type (int64)\n- trial_role (int64)\n- token_opp (int64)\n- token_self (int64)\n- combined_earning (int64)\n- split_opp (float64)\n- split_self (float64)\n- splitperc_opp (int64)\n- splitperc_self (int64)\n- accept (float64)\n- accepted_amount (float64)\n- accepted_perc (float64)\n- proposed_perc (float64)\n- proposed_amount (float64)\n\nNumber of observations: 3276\n\nDataset:\n\nDataset Structure:\nVariables available:\n- ID (int64)\n- group (object)\n- trial_number (int64)\n- trial_type (int64)\n- trial_role (int64)\n- token_opp (int64)\n- token_self (int64)\n- combined_earning (int64)\n- split_opp (float64)\n- split_self (float64)\n- splitperc_opp (int64)\n- splitperc_self (int64)\n- accept (float64)\n- accepted_amount (float64)\n- accepted_perc (float64)\n- proposed_perc (float64)\n- proposed_amount (float64)\n\nNumber of observations: 3276",
  "output_description": "Design a computational model for the given task. The model should obtain the utility, (not the probability of choosing an action).  Your goal is to eventually explore the entire space of possible explainations and mechanisms by which the observed behavior arises.\n\nYour model should use the given variables appropriately, but does not necessary need to use all or even most of the variables. Do not include the model for the utility of rejecting an offer. \n\nThe model should:\n1. Predict only responder behavior.\n2. Build on relevant psychological principles.\n3. Be considerate of high covariance between learnable parameters as the model\nwill have to pass parameter recovery tests.\n4. Be applicable to the dataset given within the task description (i.e. the model should be able to be run using only the provided dataset structure).\n5. Not include parameters to simulate general stochasticity of behavior, because this will be handled later by a temperature parameter.\n6. Should have no more than two learnable parameters.\n7. This specific model should calculate the utility of an action, which will then be used to determine\nthe probability of choosing that action. Negative values should represent a negative utility, and thus an unlikly action.\n\nFor any learnable parameters in your model, you must specify finite numerical bounds (it just can not be infinity) in the variable descriptions. However, this bound should be generous. The utility variable may be unbounded (-inf to inf).\n\nFirst, reason step by step about:\n* The key psychological mechanisms involved\n* How these mechanisms interact\n* What mathematical form could capture these interactions\n* What parameters would be needed to calibrate the model\n* How the model variables map to observable behavior\n\nThen, provide your formal mathematical model between <MODEL> tags, followed by variable descriptions between <VARIABLES> tags. Use clear mathematical notation and ensure each variable is fully described. Every variable must be utilized within the mathematical formula provided between <MODEL> and </MODEL>. For variable descriptions, provide them in a JSON format with the following structure: <VARIABLES> Bounds are by default inclusive. Please spell out the greek variable names instead of using the symbols. Finally, you should provide a short description of the model in the summary tags <SUMMARY> </SUMMARY>. This will be used to compare different computational models of the task; it should be concise and purely descriptive. Do not include generic information about the name of the tasks, since that is implied. \n\n{\n  \"variables\": {\n    \"variable_name\": {\n      \"description\": \"Clear description\",\n      \"range\": {\n        \"min\": value,\n        \"max\": value,\n        \"inclusive_min\": boolean,\n        \"inclusive_max\": boolean\n      },\n      \"distribution\": {\n        \"type\": \"distribution type\",\n        \"parameters\": {}\n      },\n      \"learnable\": boolean,\n      \"source\": \"learnable/data/calculated\"\n    }\n  }\n}\n</VARIABLES>\n\nExample #1: \n<EXAMPLE>\n(Model of a Random Choice Task):\nLet me think through this step by step...\n[your reasoning here]\n\n<MODEL>\nU_i = \u03b2 + \u03b5E + \u03b7N\n</MODEL>\n\n<VARIABLES>\n{\n  \"variables\": {\n    \"U_i\": {\n      \"description\": \"Utility of choosing action i\",\n      \"range\": {\n        \"min\": \"-inf\",\n        \"max\": \"inf\"\n      },\n      \"learnable\": false,\n      \"source\": \"calculated\"\n    },\n    \"beta\": {\n      \"description\": \"Base tendency parameter (inherent preference)\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": 1\n      },\n      \"learnable\": true,\n      \"source\": \"learnable\"\n    },\n    \"epsilon\": {\n      \"description\": \"Environmental sensitivity parameter\",\n      \"range\": {\n        \"min\": \"-inf\",\n        \"max\": \"inf\"\n      },\n      \"learnable\": true,\n      \"source\": \"learnable\"\n    },\n    \"E\": {\n      \"description\": \"Environmental cue value\",\n      \"range\": {\n        \"min\": \"-inf\",\n        \"max\": \"inf\"\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"eta\": {\n      \"description\": \"Noise parameter\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": 1,\n        \"exclusive_max\": true\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"N\": {\n      \"description\": \"Random noise drawn from normal distribution N(0,1)\",\n      \"distribution\": {\n        \"type\": \"normal\",\n        \"mean\": 0,\n        \"std\": 1\n      },\n      \"learnable\": false,\n      \"source\": \"calculated\"\n    }\n  }\n}\n</VARIABLES>\n<SUMMARY>\nA linear utility model combining base preference, environmental influence, and stochastic noise. The model uses two learnable parameters: a base tendency parameter (\u03b2) constrained to [0,1] and an unconstrained environmental sensitivity parameter (\u03b5). Environmental cues and normally distributed noise modify the base utility, allowing for both systematic and random variation in choice behavior.\n</SUMMARY>\n</EXAMPLE>\n\nPlease be sure to provide the mathematical formula for the model between <MODEL> and </MODEL>, and the variable descriptions between <VARIABLES> and </VARIABLES>. No description of the model should be provided within the <MODEL> tags.\n\nThe parameter names you choose in your <VARIABLES> section will be used exactly as specified in subsequent code generation. Please choose clear, non-reserved parameter names that can be used directly in Python code. For example, avoid Python reserved words like 'lambda' and use alternatives like 'learning_rate' or 'lambda_param'.",
  "dataset_info": "\nDataset Structure:\nVariables available:\n- ID (int64)\n- group (object)\n- trial_number (int64)\n- trial_type (int64)\n- trial_role (int64)\n- token_opp (int64)\n- token_self (int64)\n- combined_earning (int64)\n- split_opp (float64)\n- split_self (float64)\n- splitperc_opp (int64)\n- splitperc_self (int64)\n- accept (float64)\n- accepted_amount (float64)\n- accepted_perc (float64)\n- proposed_perc (float64)\n- proposed_amount (float64)\n\nNumber of observations: 3276",
  "learnable_parameters": {
    "alpha": {
      "description": "Learnable parameter scaling the monetary reward (split_self)",
      "range": {
        "min": 0,
        "max": 10,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": {
        "type": "uniform",
        "parameters": {
          "min": 0,
          "max": 10
        }
      },
      "learnable": true,
      "source": "learnable"
    },
    "beta": {
      "description": "Learnable fairness sensitivity parameter penalizing the absolute deviation between the offered share and the fair share",
      "range": {
        "min": 0,
        "max": 10,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": {
        "type": "uniform",
        "parameters": {
          "min": 0,
          "max": 10
        }
      },
      "learnable": true,
      "source": "learnable"
    }
  },
  "model_specification": "U_accept = alpha * split_self - beta * |split_self - ((token_self / (token_self + token_opp)) * combined_earning)|",
  "variable_descriptions": {
    "U_accept": {
      "description": "Utility of accepting the offer calculated as the monetary gain scaled by alpha minus a fairness penalty",
      "range": {
        "min": "-inf",
        "max": "inf",
        "inclusive_min": false,
        "inclusive_max": false
      },
      "distribution": null,
      "learnable": false,
      "source": "calculated"
    },
    "alpha": {
      "description": "Learnable parameter scaling the monetary reward (split_self)",
      "range": {
        "min": 0,
        "max": 10,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": {
        "type": "uniform",
        "parameters": {
          "min": 0,
          "max": 10
        }
      },
      "learnable": true,
      "source": "learnable"
    },
    "beta": {
      "description": "Learnable fairness sensitivity parameter penalizing the absolute deviation between the offered share and the fair share",
      "range": {
        "min": 0,
        "max": 10,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": {
        "type": "uniform",
        "parameters": {
          "min": 0,
          "max": 10
        }
      },
      "learnable": true,
      "source": "learnable"
    },
    "split_self": {
      "description": "Monetary amount proposed for the participant",
      "range": {
        "min": 0,
        "max": "inf",
        "inclusive_min": true,
        "inclusive_max": false
      },
      "distribution": null,
      "learnable": false,
      "source": "data"
    },
    "token_self": {
      "description": "Number of tokens found by the participant, representing their contribution",
      "range": {
        "min": 0,
        "max": "inf",
        "inclusive_min": true,
        "inclusive_max": false
      },
      "distribution": null,
      "learnable": false,
      "source": "data"
    },
    "token_opp": {
      "description": "Number of tokens found by the opponent, representing their contribution",
      "range": {
        "min": 0,
        "max": "inf",
        "inclusive_min": true,
        "inclusive_max": false
      },
      "distribution": null,
      "learnable": false,
      "source": "data"
    },
    "combined_earning": {
      "description": "Total amount of money earned (each token corresponds to a fixed amount); this is used to compute the non-arbitrary fair share",
      "range": {
        "min": 0,
        "max": "inf",
        "inclusive_min": true,
        "inclusive_max": false
      },
      "distribution": null,
      "learnable": false,
      "source": "data"
    }
  },
  "model_summary": "A utility model for responder behavior where the computed utility of accepting an offer is the difference between a scaled monetary gain and a penalty for deviations from fairness. The fairness criterion is calculated as the proportional share of a combined earning based on the participant\u2019s tokens relative to the total tokens. The two learnable parameters (alpha and beta) capture, respectively, the weight given to personal monetary gain and the aversion to unfair offers.",
  "full_reasoning": "Below is my step\u2010by\u2010step reasoning followed by the formal specification.\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500  \nStep\u2010by\u2010step reasoning:\n1. Key psychological mechanisms: Responder behavior is likely guided by (a) a desire to maximize personal monetary gains and (b) concerns about fairness when comparing the offer (split_self) against an expected \u201cfair share\u201d based on both participants\u2019 contributions (tokens). This is consistent with inequity aversion where deviations from fairness reduce the subjective utility.\n\n2. Mechanism interaction: The model assumes that responders value an offer more if it gives them a high monetary reward but discount that value if the offer deviates from what they perceive as \u201cfair\u201d based on their tokens relative to the total tokens (participant\u2019s and opponent\u2019s). In other words, the utility is a combination of reward gain and fairness considerations.\n\n3. Mathematical form: We express the utility U(accept) as the weighted sum of the monetary reward (split_self) and a penalty term based on the absolute deviation between the actual reward and the fair share. The fair share is computed as \n\u2003\u2003fair_share = (token_self / (token_self + token_opp)) \u00d7 combined_earning.\nThus the utility is defined as:  \n\u2003\u2003U(accept) = alpha \u00b7 split_self \u2212 beta \u00b7 |split_self \u2212 fair_share|.\n\n4. Learnable parameters: Two parameters are needed:\n\u2003\u2003\u2022 alpha: scales the monetary gain.\n\u2003\u2003\u2022 beta: captures the sensitivity to fairness deviations.\nBoth parameters are learnable with generous finite numerical bounds.\n\n5. Mapping to observable behavior: In each responder trial the observed split_self, token_self, token_opp, and combined_earning are used to compute both the actual monetary reward and the fairness deviation. The computed utility (which can be positive or negative) represents how favorable the offer is for a responder. This utility will later be converted to a probability of acceptance via an externally-provided stochastic transformation (e.g., a softmax with a temperature parameter), but here we compute solely the utility.  \n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500  \n\nBelow is the formal specification.\n\n<MODEL>\nU_accept = alpha * split_self - beta * |split_self - ((token_self / (token_self + token_opp)) * combined_earning)|\n</MODEL>\n\n<VARIABLES>\n{\n  \"variables\": {\n    \"U_accept\": {\n      \"description\": \"Utility of accepting the offer calculated as the monetary gain scaled by alpha minus a fairness penalty\",\n      \"range\": {\n        \"min\": \"-inf\",\n        \"max\": \"inf\",\n        \"inclusive_min\": false,\n        \"inclusive_max\": false\n      },\n      \"learnable\": false,\n      \"source\": \"calculated\"\n    },\n    \"alpha\": {\n      \"description\": \"Learnable parameter scaling the monetary reward (split_self)\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": 10,\n        \"inclusive_min\": true,\n        \"inclusive_max\": true\n      },\n      \"distribution\": {\n        \"type\": \"uniform\",\n        \"parameters\": {\n          \"min\": 0,\n          \"max\": 10\n        }\n      },\n      \"learnable\": true,\n      \"source\": \"learnable\"\n    },\n    \"beta\": {\n      \"description\": \"Learnable fairness sensitivity parameter penalizing the absolute deviation between the offered share and the fair share\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": 10,\n        \"inclusive_min\": true,\n        \"inclusive_max\": true\n      },\n      \"distribution\": {\n        \"type\": \"uniform\",\n        \"parameters\": {\n          \"min\": 0,\n          \"max\": 10\n        }\n      },\n      \"learnable\": true,\n      \"source\": \"learnable\"\n    },\n    \"split_self\": {\n      \"description\": \"Monetary amount proposed for the participant\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": \"inf\",\n        \"inclusive_min\": true,\n        \"inclusive_max\": false\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"token_self\": {\n      \"description\": \"Number of tokens found by the participant, representing their contribution\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": \"inf\",\n        \"inclusive_min\": true,\n        \"inclusive_max\": false\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"token_opp\": {\n      \"description\": \"Number of tokens found by the opponent, representing their contribution\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": \"inf\",\n        \"inclusive_min\": true,\n        \"inclusive_max\": false\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"combined_earning\": {\n      \"description\": \"Total amount of money earned (each token corresponds to a fixed amount); this is used to compute the non-arbitrary fair share\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": \"inf\",\n        \"inclusive_min\": true,\n        \"inclusive_max\": false\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    }\n  }\n}\n</VARIABLES>\n\n<SUMMARY>\nA utility model for responder behavior where the computed utility of accepting an offer is the difference between a scaled monetary gain and a penalty for deviations from fairness. The fairness criterion is calculated as the proportional share of a combined earning based on the participant\u2019s tokens relative to the total tokens. The two learnable parameters (alpha and beta) capture, respectively, the weight given to personal monetary gain and the aversion to unfair offers.\n</SUMMARY>",
  "simulation_code": "def simulate_model(trial_data, alpha=1, beta=1):\n    utility_values = []\n    for trial in trial_data:\n        split_self = trial.get(\"split_self\", 0)\n        token_self = trial.get(\"token_self\", 0)\n        token_opp = trial.get(\"token_opp\", 0)\n        combined_earning = trial.get(\"combined_earning\", 0)\n\n        if token_self + token_opp ==0:\n            fair_share = 0 #Handle division by zero\n        else:\n            fair_share = (token_self / (token_self + token_opp)) * combined_earning\n\n        utility = alpha * split_self - beta * abs(split_self - fair_share)\n        utility_values.append(utility)\n    return utility_values",
  "fitting_results": [
    {
      "alpha": 0.0,
      "beta": 2.7959044659970647,
      "success": true,
      "log_likelihood": -9.36771377575498,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 1.2150400756707846,
      "beta": 1.785498234459604,
      "success": true,
      "log_likelihood": -16.514115520212478,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 2.5609015364307766,
      "beta": 3.6636826714334365,
      "success": true,
      "log_likelihood": -10.113312425765224,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 1.4804127745733484,
      "beta": 2.5196031977562696,
      "success": true,
      "log_likelihood": -13.910689249506165,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 2.1423278258281337,
      "beta": 4.019191188508332,
      "success": true,
      "log_likelihood": -10.051850743800603,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 2.4508145277156825,
      "beta": 2.5685283968855446,
      "success": true,
      "log_likelihood": -11.080211486721678,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 10.0,
      "beta": 0.0,
      "success": true,
      "log_likelihood": -0.006472187475228865,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 2.446332167404376,
      "beta": 2.4674502597809536,
      "success": true,
      "log_likelihood": -11.132046927441138,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 10.0,
      "beta": 0.0,
      "success": true,
      "log_likelihood": -0.0064721874752288674,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 1.6476144881892707,
      "beta": 3.3889861189231545,
      "success": true,
      "log_likelihood": -11.516564631302789,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 5.8951783521288315,
      "beta": 10.0,
      "success": true,
      "log_likelihood": -2.2441268596809127,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.15039163671113476,
      "beta": 2.7846487056023657,
      "success": true,
      "log_likelihood": -10.231096330344956,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 2.3679225389791583,
      "beta": 4.604754454555939,
      "success": true,
      "log_likelihood": -9.007822841412313,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 10.0,
      "beta": 0.0,
      "success": true,
      "log_likelihood": -0.006472187475228864,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 10.0,
      "beta": 0.0,
      "success": true,
      "log_likelihood": -0.006472187475228864,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 10.0,
      "beta": 0.0,
      "success": true,
      "log_likelihood": -0.006472187475228867,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 10.0,
      "beta": 0.0,
      "success": true,
      "log_likelihood": -0.006472187475228865,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 8.776810859506256,
      "beta": 4.20749180139957,
      "success": true,
      "log_likelihood": -2.746171883842527,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 3.5765993406284577,
      "beta": 1.5247726727218067,
      "success": true,
      "log_likelihood": -6.651651235162189,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 10.0,
      "beta": 0.0,
      "success": true,
      "log_likelihood": -0.006472187475228866,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 1.439290675191239,
      "beta": 1.9610051725415762,
      "success": true,
      "log_likelihood": -15.418128495524611,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 3.1541795116692124,
      "beta": 1.5119171174407575,
      "success": true,
      "log_likelihood": -7.943235909654421,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.6965644880534201,
      "beta": 1.4001068815859485,
      "success": true,
      "log_likelihood": -18.720382448725477,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 1.2191789513780418,
      "beta": 1.5253878474969245,
      "success": true,
      "log_likelihood": -17.172717932417118,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 1.4290494223947956,
      "beta": 2.436019968267266,
      "success": true,
      "log_likelihood": -14.205573634511914,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 1.6030272163016248,
      "beta": 1.8153939011579017,
      "success": true,
      "log_likelihood": -15.008514762835809,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 2.231383242187202,
      "beta": 2.7833616042230602,
      "success": true,
      "log_likelihood": -11.69291199275079,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 3.163633921637144,
      "beta": 9.75705631784125,
      "success": true,
      "log_likelihood": -5.023749455798015,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 2.389756863546731,
      "beta": 0.8652039343503207,
      "success": true,
      "log_likelihood": -9.37005759558793,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 1.3781282068513132,
      "beta": 0.7728655796006867,
      "success": true,
      "log_likelihood": -15.95646208963727,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 10.0,
      "beta": 0.0,
      "success": true,
      "log_likelihood": -0.006472187475228866,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.0,
      "beta": 2.795918163830544,
      "success": true,
      "log_likelihood": -9.367713775861498,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.5330630601940338,
      "beta": 0.9141044850227614,
      "success": true,
      "log_likelihood": -21.352851537761172,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 1.028736639764948,
      "beta": 2.034726030631224,
      "success": true,
      "log_likelihood": -15.81259592768875,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 10.0,
      "beta": 0.0,
      "success": true,
      "log_likelihood": -0.006472187475228865,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 1.9299946748007049,
      "beta": 1.6017000246203406,
      "success": true,
      "log_likelihood": -13.412301206098572,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 4.168427240954309,
      "beta": 3.6971709644427393,
      "success": true,
      "log_likelihood": -7.011727789498608,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 1.4718376618464486,
      "beta": 2.326309007544012,
      "success": true,
      "log_likelihood": -14.451084743366346,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 1.1981881566779577,
      "beta": 1.0909650066869863,
      "success": true,
      "log_likelihood": -17.836883915147332,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 1.905698459085154,
      "beta": 0.3181993366526471,
      "success": true,
      "log_likelihood": -9.548477994752485,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 1.1487685555831277,
      "beta": 1.3138121444393926,
      "success": true,
      "log_likelihood": -17.91290435328399,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.45443171881815037,
      "beta": 2.245249365840885,
      "success": true,
      "log_likelihood": -13.529563912626676,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 7.454101037587829,
      "beta": 0.0,
      "success": true,
      "log_likelihood": -20.107252118961274,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 1.3846906487353094,
      "beta": 1.610850852333553,
      "success": true,
      "log_likelihood": -16.283414588273473,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 1.931799427978729,
      "beta": 2.0602812136009705,
      "success": true,
      "log_likelihood": -13.330501948851607,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 1.406210463237126,
      "beta": 0.7975661863464585,
      "success": true,
      "log_likelihood": -15.793168881955951,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 1.4392971217273043,
      "beta": 1.9610152674160721,
      "success": true,
      "log_likelihood": -15.418128498545352,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.6613119052431609,
      "beta": 1.278376213136256,
      "success": true,
      "log_likelihood": -19.366170656043412,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 1.5390980256841162,
      "beta": 3.321387819690035,
      "success": true,
      "log_likelihood": -11.679434095718241,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.3944385343263095,
      "beta": 0.3482963321568203,
      "success": true,
      "log_likelihood": -23.605164227860136,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 1.2290552374619241,
      "beta": 0.853768355116486,
      "success": true,
      "log_likelihood": -17.418616405226487,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.0,
      "beta": 1.6354577766282468,
      "success": true,
      "log_likelihood": -13.915564889716693,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.9678862198747411,
      "beta": 1.0873402000625572,
      "success": true,
      "log_likelihood": -19.263352302011135,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.6741399381327804,
      "beta": 0.4763502444031317,
      "success": true,
      "log_likelihood": -21.61775811532616,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.45073264277542663,
      "beta": 1.1905039357463323,
      "success": true,
      "log_likelihood": -19.60600221211718,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 4.114374827276482,
      "beta": 10.0,
      "success": true,
      "log_likelihood": -4.52655639319697,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 1.0792378552421724,
      "beta": 3.3366563798880473,
      "success": true,
      "log_likelihood": -11.295541970110968,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 1.1376584704057564,
      "beta": 0.0,
      "success": true,
      "log_likelihood": -13.680488206347562,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.08300259825604064,
      "beta": 2.4678744823394654,
      "success": true,
      "log_likelihood": -10.846702235070886,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 1.4348126564133477,
      "beta": 0.4623516276537716,
      "success": true,
      "log_likelihood": -14.088373042107982,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.9087975698019314,
      "beta": 0.863800497150713,
      "success": true,
      "log_likelihood": -19.914606206834925,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 1.3797121014460547,
      "beta": 2.1841692774862875,
      "success": true,
      "log_likelihood": -15.00289576326336,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.0,
      "beta": 2.795904456156531,
      "success": true,
      "log_likelihood": -9.367713775754964,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.6366407730583373,
      "beta": 0.9593502661605671,
      "success": true,
      "log_likelihood": -20.96892396419704,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.7267611521407574,
      "beta": 2.8130053484792876,
      "success": true,
      "log_likelihood": -12.195345746113393,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 1.6670268654712046,
      "beta": 1.968470417262087,
      "success": true,
      "log_likelihood": -14.552149383134838,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 2.3141213303594377,
      "beta": 0.5422336906319506,
      "success": true,
      "log_likelihood": -8.412852887513127,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 1.8779350095805871,
      "beta": 0.7089832314210796,
      "success": true,
      "log_likelihood": -11.797503267306809,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 1.4404115135197058,
      "beta": 1.4853729782057261,
      "success": true,
      "log_likelihood": -16.143763730350294,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 1.3560476044028162,
      "beta": 0.0,
      "success": true,
      "log_likelihood": -11.540124489371097,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.4385548168985203,
      "beta": 4.804772494015378,
      "success": true,
      "log_likelihood": -7.291299253647523,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.05158196857187877,
      "beta": 1.83366856998,
      "success": true,
      "log_likelihood": -13.264469796775243,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 1.4064906745738261,
      "beta": 1.8434136097860465,
      "success": true,
      "log_likelihood": -15.777148284086454,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 1.4083165004148748,
      "beta": 0.5652440262495785,
      "success": true,
      "log_likelihood": -14.868520971429643,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.5096892337957519,
      "beta": 0.6897783709357573,
      "success": true,
      "log_likelihood": -22.38243557455389,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 1.9128276243023972,
      "beta": 1.7316797778782431,
      "success": true,
      "log_likelihood": -13.525949356445565,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 2.0788797807298742,
      "beta": 0.2023684945232173,
      "success": true,
      "log_likelihood": -7.805145574753163,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.0,
      "beta": 3.7206579543479057,
      "success": true,
      "log_likelihood": -7.447588215269895,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.5227128118031943,
      "beta": 0.24570759241903206,
      "success": true,
      "log_likelihood": -22.441137752282685,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.0,
      "beta": 2.795902777295384,
      "success": true,
      "log_likelihood": -9.367713775754074,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.46407590042956887,
      "beta": 0.5427580253392779,
      "success": true,
      "log_likelihood": -22.987815758481094,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 1.3338987283075954,
      "beta": 0.0,
      "success": true,
      "log_likelihood": -11.741860654326471,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.1550384291636833,
      "beta": 3.2652703075587977,
      "success": true,
      "log_likelihood": -9.037625223128433,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 2.5529782732675717,
      "beta": 3.3158913888973647,
      "success": true,
      "log_likelihood": -10.392463499303597,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.32692300004466424,
      "beta": 0.17051883247216246,
      "success": true,
      "log_likelihood": -23.885658819609976,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.08678789623999619,
      "beta": 2.705845203001795,
      "success": true,
      "log_likelihood": -10.122958122815627,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 1.1565259312741023,
      "beta": 0.8858668403981728,
      "success": true,
      "log_likelihood": -18.056873741714515,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.4531439001273735,
      "beta": 2.43121605158423,
      "success": true,
      "log_likelihood": -12.746089797928484,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 3.1059193028504755,
      "beta": 0.6765132773790132,
      "success": true,
      "log_likelihood": -5.819289918832337,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 1.584677379542891,
      "beta": 2.0108669018931105,
      "success": true,
      "log_likelihood": -14.819289447326808,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.7016593411188982,
      "beta": 0.3170305815201681,
      "success": true,
      "log_likelihood": -20.901233757566782,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    }
  ],
  "parameter_recovery": {
    "correlations": {
      "alpha": {
        "r": 0.8650539851055655,
        "p": 4.059281488137218e-31
      },
      "beta": {
        "r": 0.8261117099061079,
        "p": 3.7520477667945675e-26
      }
    }
  },
  "bic_results": {
    "average_bic": 31.602073049858763,
    "individual_bics": [
      25.902465428422182,
      40.195268917337174,
      27.39366272844267,
      34.98841637592455,
      27.270739364513425,
      29.32746085035558,
      7.179982251862677,
      29.431131731794494,
      7.179982251862677,
      30.200167139517795,
      11.655291596274045,
      27.629230537602133,
      25.182683559736844,
      7.179982251862677,
      7.179982251862677,
      7.179982251862677,
      7.179982251862677,
      12.659381644597275,
      20.470340347236597,
      7.179982251862677,
      38.00329486796144,
      23.053509696221063,
      44.60780277436317,
      41.512473741746454,
      35.57818514593605,
      37.184067402583835,
      30.5528618624138,
      17.214536788508248,
      25.90715306808808,
      39.07996205618676,
      7.179982251862677,
      25.902465428635217,
      49.87274095243456,
      38.79222973228972,
      7.179982251862677,
      33.99164028910936,
      21.190493455909436,
      36.069207363644914,
      42.84080570720688,
      26.263993866417188,
      42.9928465834802,
      34.226165702165574,
      47.381542114834765,
      39.733867053459164,
      33.828041774615436,
      38.753375640824125,
      38.003294874002925,
      45.89937918899904,
      30.525906068348704,
      54.37736633263249,
      42.00427068736519,
      34.99816765634561,
      45.69374248093449,
      50.40255410756454,
      46.379042301146576,
      16.22015066330616,
      29.758121817134153,
      34.52801428960734,
      28.86044234705399,
      35.34378396112818,
      46.99625029058207,
      37.17282940343894,
      25.902465428422147,
      49.104885805306296,
      31.557729369139004,
      36.2713366431819,
      23.992743651938476,
      30.762044411525835,
      39.454565337612806,
      30.247286855654416,
      21.749636384207264,
      33.69597747046271,
      38.72133444508513,
      36.9040798197715,
      51.93190902602,
      34.21893658980335,
      22.777329026418546,
      22.06221430745201,
      52.04931338147759,
      25.90246542842037,
      53.14266939387441,
      30.650759185565164,
      25.242288323169085,
      27.951964875519415,
      54.93835551613217,
      27.412954122543475,
      43.28078536034125,
      32.659217472769186,
      18.805617714576893,
      36.80561677156584,
      48.96950539204578
    ],
    "num_parameters": 2,
    "bic_formula": "BIC = -2 * log_likelihood + k * log(n)"
  }
}