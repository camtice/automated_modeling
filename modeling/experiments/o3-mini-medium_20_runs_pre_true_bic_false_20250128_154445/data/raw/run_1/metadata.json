{
  "task_description": "In the  experiment, each participant is given 36 different proposals to respond to. Each is designated by a trial number in the data set This gives 36 instances for the learnable parameters to be trained. There is also a pretask where the participant finds a number of tokens that correspond to their contribution to the group. This is designated by the variable \"token_self\". The other variable, \"token_opp\", is the number of tokens found the opponent's and represents the opoonents contribution to the shared pot that will be later divided by the opponent.\n\nNote that in each trial there is a variable amount of money in the combined earning, so that two equal split_self variables do not represent the same \"fairness\".\n\nBelow is the description of each variable in the dataset, which will be followed by information about the data type of the variable:\n\ntrial_type = how much was the contribution [1 = equal, 2 = opponent more, 3 = participant more]\ntrial_role = the role of the participant [1 = responder, 2 = proposer]\ntoken_opp = number of tokens found by the opponent\ntoken_self = number of tokens found by the participant\ncombined_earning = amount of money earned in total (note that each token found is \u00a33)\nsplit_opp = the proposed share of the opponent (in \u00a3)\nsplit_self = the proposed share for the participant (in \u00a3)\nsplitperc_opp = same but in %\nsplit_perc_self = same but in %\naccept = whether the participant responded accept (1) or reject (0)\naccepted_amount = if accepted, what is the amount gain (in \u00a3)\naccepted_perc = same as above but in %\nproposed_perc = when participant is the proposer, what is the % proposed to the opponent\n\nDataset:\n\nDataset Structure:\nVariables available:\n- ID (int64)\n- group (object)\n- trial_number (int64)\n- trial_type (int64)\n- trial_role (int64)\n- token_opp (int64)\n- token_self (int64)\n- combined_earning (int64)\n- split_opp (float64)\n- split_self (float64)\n- splitperc_opp (int64)\n- splitperc_self (int64)\n- accept (float64)\n- accepted_amount (float64)\n- accepted_perc (float64)\n- proposed_perc (float64)\n- proposed_amount (float64)\n\nNumber of observations: 3276\n\nDataset:\n\nDataset Structure:\nVariables available:\n- ID (int64)\n- group (object)\n- trial_number (int64)\n- trial_type (int64)\n- trial_role (int64)\n- token_opp (int64)\n- token_self (int64)\n- combined_earning (int64)\n- split_opp (float64)\n- split_self (float64)\n- splitperc_opp (int64)\n- splitperc_self (int64)\n- accept (float64)\n- accepted_amount (float64)\n- accepted_perc (float64)\n- proposed_perc (float64)\n- proposed_amount (float64)\n\nNumber of observations: 3276",
  "output_description": "Design a computational model for the given task. The model should obtain the utility, (not the probability of choosing an action).  Your goal is to eventually explore the entire space of possible explainations and mechanisms by which the observed behavior arises.\n\nYour model should use the given variables appropriately, but does not necessary need to use all or even most of the variables. Do not include the model for the utility of rejecting an offer. \n\nThe model should:\n1. Predict only responder behavior.\n2. Build on relevant psychological principles.\n3. Be considerate of high covariance between learnable parameters as the model\nwill have to pass parameter recovery tests.\n4. Be applicable to the dataset given within the task description (i.e. the model should be able to be run using only the provided dataset structure).\n5. Not include parameters to simulate general stochasticity of behavior, because this will be handled later by a temperature parameter.\n6. Should have no more than two learnable parameters.\n7. This specific model should calculate the utility of an action, which will then be used to determine\nthe probability of choosing that action. Negative values should represent a negative utility, and thus an unlikly action.\n\nFor any learnable parameters in your model, you must specify finite numerical bounds (it just can not be infinity) in the variable descriptions. However, this bound should be generous. The utility variable may be unbounded (-inf to inf).\n\nFirst, reason step by step about:\n* The key psychological mechanisms involved\n* How these mechanisms interact\n* What mathematical form could capture these interactions\n* What parameters would be needed to calibrate the model\n* How the model variables map to observable behavior\n\nThen, provide your formal mathematical model between <MODEL> tags, followed by variable descriptions between <VARIABLES> tags. Use clear mathematical notation and ensure each variable is fully described. Every variable must be utilized within the mathematical formula provided between <MODEL> and </MODEL>. For variable descriptions, provide them in a JSON format with the following structure: <VARIABLES> Bounds are by default inclusive. Please spell out the greek variable names instead of using the symbols. Finally, you should provide a short description of the model in the summary tags <SUMMARY> </SUMMARY>. This will be used to compare different computational models of the task; it should be concise and purely descriptive. Do not include generic information about the name of the tasks, since that is implied. \n\n{\n  \"variables\": {\n    \"variable_name\": {\n      \"description\": \"Clear description\",\n      \"range\": {\n        \"min\": value,\n        \"max\": value,\n        \"inclusive_min\": boolean,\n        \"inclusive_max\": boolean\n      },\n      \"distribution\": {\n        \"type\": \"distribution type\",\n        \"parameters\": {}\n      },\n      \"learnable\": boolean,\n      \"source\": \"learnable/data/calculated\"\n    }\n  }\n}\n</VARIABLES>\n\nExample #1: \n<EXAMPLE>\n(Model of a Random Choice Task):\nLet me think through this step by step...\n[your reasoning here]\n\n<MODEL>\nU_i = \u03b2 + \u03b5E + \u03b7N\n</MODEL>\n\n<VARIABLES>\n{\n  \"variables\": {\n    \"U_i\": {\n      \"description\": \"Utility of choosing action i\",\n      \"range\": {\n        \"min\": \"-inf\",\n        \"max\": \"inf\"\n      },\n      \"learnable\": false,\n      \"source\": \"calculated\"\n    },\n    \"beta\": {\n      \"description\": \"Base tendency parameter (inherent preference)\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": 1\n      },\n      \"learnable\": true,\n      \"source\": \"learnable\"\n    },\n    \"epsilon\": {\n      \"description\": \"Environmental sensitivity parameter\",\n      \"range\": {\n        \"min\": \"-inf\",\n        \"max\": \"inf\"\n      },\n      \"learnable\": true,\n      \"source\": \"learnable\"\n    },\n    \"E\": {\n      \"description\": \"Environmental cue value\",\n      \"range\": {\n        \"min\": \"-inf\",\n        \"max\": \"inf\"\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"eta\": {\n      \"description\": \"Noise parameter\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": 1,\n        \"exclusive_max\": true\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"N\": {\n      \"description\": \"Random noise drawn from normal distribution N(0,1)\",\n      \"distribution\": {\n        \"type\": \"normal\",\n        \"mean\": 0,\n        \"std\": 1\n      },\n      \"learnable\": false,\n      \"source\": \"calculated\"\n    }\n  }\n}\n</VARIABLES>\n<SUMMARY>\nA linear utility model combining base preference, environmental influence, and stochastic noise. The model uses two learnable parameters: a base tendency parameter (\u03b2) constrained to [0,1] and an unconstrained environmental sensitivity parameter (\u03b5). Environmental cues and normally distributed noise modify the base utility, allowing for both systematic and random variation in choice behavior.\n</SUMMARY>\n</EXAMPLE>\n\nPlease be sure to provide the mathematical formula for the model between <MODEL> and </MODEL>, and the variable descriptions between <VARIABLES> and </VARIABLES>. No description of the model should be provided within the <MODEL> tags.\n\nThe parameter names you choose in your <VARIABLES> section will be used exactly as specified in subsequent code generation. Please choose clear, non-reserved parameter names that can be used directly in Python code. For example, avoid Python reserved words like 'lambda' and use alternatives like 'learning_rate' or 'lambda_param'.",
  "dataset_info": "\nDataset Structure:\nVariables available:\n- ID (int64)\n- group (object)\n- trial_number (int64)\n- trial_type (int64)\n- trial_role (int64)\n- token_opp (int64)\n- token_self (int64)\n- combined_earning (int64)\n- split_opp (float64)\n- split_self (float64)\n- splitperc_opp (int64)\n- splitperc_self (int64)\n- accept (float64)\n- accepted_amount (float64)\n- accepted_perc (float64)\n- proposed_perc (float64)\n- proposed_amount (float64)\n\nNumber of observations: 3276",
  "learnable_parameters": {
    "mu": {
      "description": "Bias parameter capturing overall baseline utility (can reflect general tendency to accept or reject).",
      "range": {
        "min": -100,
        "max": 100,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": null,
      "learnable": true,
      "source": "learnable"
    },
    "lambda_param": {
      "description": "Inequity aversion parameter, scaling the penalty for offers below the fair share.",
      "range": {
        "min": 0,
        "max": 100,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": null,
      "learnable": true,
      "source": "learnable"
    }
  },
  "model_specification": "U = mu + split_self - lambda_param * max((combined_earning * (token_self / (token_self + token_opp))) - split_self, 0)",
  "variable_descriptions": {
    "U": {
      "description": "Utility of accepting the offer; computed as the offered share plus a bias minus a fairness penalty.",
      "range": {
        "min": "-inf",
        "max": "inf",
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": null,
      "learnable": false,
      "source": "calculated"
    },
    "mu": {
      "description": "Bias parameter capturing overall baseline utility (can reflect general tendency to accept or reject).",
      "range": {
        "min": -100,
        "max": 100,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": null,
      "learnable": true,
      "source": "learnable"
    },
    "lambda_param": {
      "description": "Inequity aversion parameter, scaling the penalty for offers below the fair share.",
      "range": {
        "min": 0,
        "max": 100,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": null,
      "learnable": true,
      "source": "learnable"
    },
    "split_self": {
      "description": "The share (in \u00a3) proposed to the participant in the given trial.",
      "range": {
        "min": 0,
        "max": "inf",
        "inclusive_min": true,
        "inclusive_max": false
      },
      "distribution": null,
      "learnable": false,
      "source": "data"
    },
    "combined_earning": {
      "description": "Total money available in a trial (each token is valued at \u00a33).",
      "range": {
        "min": 0,
        "max": "inf",
        "inclusive_min": true,
        "inclusive_max": false
      },
      "distribution": null,
      "learnable": false,
      "source": "data"
    },
    "token_self": {
      "description": "Number of tokens found by the participant, indicating their contribution.",
      "range": {
        "min": 0,
        "max": "inf",
        "inclusive_min": true,
        "inclusive_max": false
      },
      "distribution": null,
      "learnable": false,
      "source": "data"
    },
    "token_opp": {
      "description": "Number of tokens found by the opponent, indicating the opponent's contribution.",
      "range": {
        "min": 0,
        "max": "inf",
        "inclusive_min": true,
        "inclusive_max": false
      },
      "distribution": null,
      "learnable": false,
      "source": "data"
    }
  },
  "model_summary": "A model of responder behavior based on fairness considerations. The fair share is determined by the participant\u2019s relative token contribution, and the utility of accepting an offer is computed as the offered monetary amount combined with an overall bias, reduced by a penalty proportional to any shortfall relative to the fair share. Two learnable parameters (mu and lambda_param) calibrate baseline utility and sensitivity to inequity.",
  "full_reasoning": "Below is the step\u2010by\u2010step reasoning and the resulting model specification.\n\nStep\u2010by\u2010step reasoning:\n1. Key Psychological Mechanisms: A major factor in responders\u2019 decisions is the perceived fairness of the offer. In our task the fairness expectation is based on the proportional token contributions; that is, a fair split for the participant would be the share of the combined earnings equal to token_self divided by the sum of token_self and token_opp. Offers that fall short of this fair share will incur a \u201cpenalty\u201d in utility.\n2. Interaction of Mechanisms: The utility for accepting an offer will increase with the actual monetary share (split_self) but will be reduced if that share is less than the fairness benchmark. A bias term is included to capture any overall tendency or baseline utility not explained solely by the fairness comparison.\n3. Mathematical Form: We first calculate the fair share F = combined_earning \u00d7 (token_self / (token_self + token_opp)). The model then computes the utility as the offered share (split_self) plus a bias (\u03bc) minus a penalty that is proportional (with parameter \u03bb) to any shortfall (if F exceeds split_self). Mathematically, the penalty applies only if the offer is below fair expectations.\n4. Learnable Parameters: We use two learnable parameters. One is \u03bc (mu), a bias parameter that can shift overall utility up or down. The second is \u03bb (lambda_param) that scales the penalty for an offer below the participant\u2019s fair share.\n5. Mapping to Observable Behavior: The observable variables from the dataset (token_self, token_opp, combined_earning, and split_self) are used to compute the fairness reference and subsequently the utility of accepting an offer. This utility (a continuous value that may be negative) is then later passed through a stochastic choice rule (with a temperature parameter not included in this model) to predict acceptance behavior among responders.\n\nBelow is the formal model specification and variable descriptions.\n\n<MODEL>\nU = mu + split_self - lambda_param * max((combined_earning * (token_self / (token_self + token_opp))) - split_self, 0)\n</MODEL>\n\n<VARIABLES>\n{\n  \"variables\": {\n    \"U\": {\n      \"description\": \"Utility of accepting the offer; computed as the offered share plus a bias minus a fairness penalty.\",\n      \"range\": {\n        \"min\": \"-inf\",\n        \"max\": \"inf\",\n        \"inclusive_min\": true,\n        \"inclusive_max\": true\n      },\n      \"learnable\": false,\n      \"source\": \"calculated\"\n    },\n    \"mu\": {\n      \"description\": \"Bias parameter capturing overall baseline utility (can reflect general tendency to accept or reject).\",\n      \"range\": {\n        \"min\": -100,\n        \"max\": 100,\n        \"inclusive_min\": true,\n        \"inclusive_max\": true\n      },\n      \"learnable\": true,\n      \"source\": \"learnable\"\n    },\n    \"lambda_param\": {\n      \"description\": \"Inequity aversion parameter, scaling the penalty for offers below the fair share.\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": 100,\n        \"inclusive_min\": true,\n        \"inclusive_max\": true\n      },\n      \"learnable\": true,\n      \"source\": \"learnable\"\n    },\n    \"split_self\": {\n      \"description\": \"The share (in \u00a3) proposed to the participant in the given trial.\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": \"inf\",\n        \"inclusive_min\": true,\n        \"inclusive_max\": false\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"combined_earning\": {\n      \"description\": \"Total money available in a trial (each token is valued at \u00a33).\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": \"inf\",\n        \"inclusive_min\": true,\n        \"inclusive_max\": false\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"token_self\": {\n      \"description\": \"Number of tokens found by the participant, indicating their contribution.\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": \"inf\",\n        \"inclusive_min\": true,\n        \"inclusive_max\": false\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"token_opp\": {\n      \"description\": \"Number of tokens found by the opponent, indicating the opponent's contribution.\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": \"inf\",\n        \"inclusive_min\": true,\n        \"inclusive_max\": false\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    }\n  }\n}\n</VARIABLES>\n\n<SUMMARY>\nA model of responder behavior based on fairness considerations. The fair share is determined by the participant\u2019s relative token contribution, and the utility of accepting an offer is computed as the offered monetary amount combined with an overall bias, reduced by a penalty proportional to any shortfall relative to the fair share. Two learnable parameters (mu and lambda_param) calibrate baseline utility and sensitivity to inequity.\n</SUMMARY>",
  "simulation_code": "def simulate_model(trial_data, mu=0, lambda_param=1):\n    utility_values = []\n    for trial in trial_data:\n        split_self = trial.get(\"split_self\", 0)\n        combined_earning = trial.get(\"combined_earning\", 0)\n        token_self = trial.get(\"token_self\", 0)\n        token_opp = trial.get(\"token_opp\", 0)\n\n        if token_self + token_opp ==0: #Handle division by zero\n            fair_share = 0\n        else:\n            fair_share = combined_earning * (token_self / (token_self + token_opp))\n\n        penalty = max(fair_share - split_self, 0)\n        utility = mu + split_self - lambda_param * penalty\n        utility_values.append(utility)\n    return utility_values",
  "fitting_results": [
    {
      "mu": -6.383098238535051,
      "lambda_param": 2.0465995387059928,
      "success": true,
      "log_likelihood": -6.173579780751771,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": 0.7504331917547015,
      "lambda_param": 1.7915467010298576,
      "success": true,
      "log_likelihood": -16.270977860001917,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": 4.012287796404807,
      "lambda_param": 2.972528100720582,
      "success": true,
      "log_likelihood": -10.705124890216085,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": -0.5043025010817729,
      "lambda_param": 1.720446147917847,
      "success": true,
      "log_likelihood": -13.97437652073059,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": 5.316078686569755,
      "lambda_param": 4.399337038049747,
      "success": true,
      "log_likelihood": -8.652341680925076,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": 4.424091079887875,
      "lambda_param": 2.397925969771324,
      "success": true,
      "log_likelihood": -11.5853083819648,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": 100.0,
      "lambda_param": 2.825388787360126,
      "success": true,
      "log_likelihood": 3.600000297685338e-09,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": 7.075221559836761,
      "lambda_param": 3.0901762346373123,
      "success": true,
      "log_likelihood": -10.061812603427102,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": 100.0,
      "lambda_param": 0.0,
      "success": true,
      "log_likelihood": 3.600000297685338e-09,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": 1.4870964384233019,
      "lambda_param": 3.0090663273807103,
      "success": true,
      "log_likelihood": -11.34416054850627,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": 4.354084002095293,
      "lambda_param": 3.9134458325606554,
      "success": true,
      "log_likelihood": -7.195897899401404,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": -5.433296220676858,
      "lambda_param": 2.0724570009008136,
      "success": true,
      "log_likelihood": -7.266370667472828,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": 3.7486116372592555,
      "lambda_param": 3.9466784605284895,
      "success": true,
      "log_likelihood": -8.915273772950993,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": 100.0,
      "lambda_param": 0.0,
      "success": true,
      "log_likelihood": 3.600000297685338e-09,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": 100.0,
      "lambda_param": 0.0,
      "success": true,
      "log_likelihood": 3.600000297685338e-09,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": 34.52765307527412,
      "lambda_param": 0.0,
      "success": true,
      "log_likelihood": -2.500583841575666e-07,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": 100.0,
      "lambda_param": 2.1924368452197076e-15,
      "success": true,
      "log_likelihood": 3.600000297685338e-09,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": 5.096369920092911,
      "lambda_param": 1.35588645749388,
      "success": true,
      "log_likelihood": -7.81040888870144,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": 12.514148271236214,
      "lambda_param": 2.924637779807068,
      "success": true,
      "log_likelihood": -5.457728654663991,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": 100.0,
      "lambda_param": 0.0,
      "success": true,
      "log_likelihood": 3.600000297685338e-09,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": 23.783557646390705,
      "lambda_param": 10.19966608205958,
      "success": true,
      "log_likelihood": -29.738626453805022,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": 9.052194624418775,
      "lambda_param": 2.345509564032187,
      "success": true,
      "log_likelihood": -7.2690527123694535,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": -2.903532997224271,
      "lambda_param": 0.8671474232879643,
      "success": true,
      "log_likelihood": -16.566148629430963,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": -0.18782908106139684,
      "lambda_param": 1.2493704366425555,
      "success": true,
      "log_likelihood": -17.094280890272294,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": 5.683170943794309,
      "lambda_param": 3.9068568065837774,
      "success": true,
      "log_likelihood": -11.357401387829952,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": 1.447938133259643,
      "lambda_param": 1.6274302113525514,
      "success": true,
      "log_likelihood": -15.285214365649345,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": 2.014290951198777,
      "lambda_param": 1.995931392460243,
      "success": true,
      "log_likelihood": -13.045078510470697,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": 4.76537910870465,
      "lambda_param": 8.233916220504332,
      "success": true,
      "log_likelihood": -4.5020115390224404,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": 8.148720374808649,
      "lambda_param": 1.9225982528833991,
      "success": true,
      "log_likelihood": -7.7212950283190995,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": 3.7100862514405355,
      "lambda_param": 1.4301091662575158,
      "success": true,
      "log_likelihood": -14.579062506004686,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": 100.0,
      "lambda_param": 0.0,
      "success": true,
      "log_likelihood": 3.600000297685338e-09,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": -5.674977215613616,
      "lambda_param": 61.454128676157794,
      "success": true,
      "log_likelihood": -25.31001017350424,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": -0.9616019015833106,
      "lambda_param": 1.5159195649570718,
      "success": true,
      "log_likelihood": -21.59620673340471,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": -0.8234136118261196,
      "lambda_param": 1.7464631315783044,
      "success": true,
      "log_likelihood": -15.272874131065148,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": 100.0,
      "lambda_param": 2.5318349300140994,
      "success": true,
      "log_likelihood": 3.600000297685338e-09,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": -0.1125806955596176,
      "lambda_param": 0.7912544817659012,
      "success": true,
      "log_likelihood": -14.91296360388516,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": 5.229837183893194,
      "lambda_param": 2.3390924728225015,
      "success": true,
      "log_likelihood": -9.871733053031631,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": 2.9561001240189912,
      "lambda_param": 2.742277348899825,
      "success": true,
      "log_likelihood": -13.470235226024988,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": 2.8205393772839256,
      "lambda_param": 1.7034550714919612,
      "success": true,
      "log_likelihood": -16.701738386198883,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": 4.881206773441278,
      "lambda_param": 0.9230333885104965,
      "success": true,
      "log_likelihood": -8.611832350499782,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": 98.79119980227723,
      "lambda_param": 29.605967342211663,
      "success": true,
      "log_likelihood": -92.95755438601758,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": 43.13954915031316,
      "lambda_param": 100.0,
      "success": true,
      "log_likelihood": -46.05315649159374,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": 100.0,
      "lambda_param": 0.0,
      "success": true,
      "log_likelihood": -23.02585092644049,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": 0.2683673372190573,
      "lambda_param": 1.3021862839199245,
      "success": true,
      "log_likelihood": -16.464453107514473,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": 2.209171493797096,
      "lambda_param": 1.7702188942749064,
      "success": true,
      "log_likelihood": -14.005244950061778,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": 0.23082437764021532,
      "lambda_param": 0.5726172007347862,
      "success": true,
      "log_likelihood": -16.151863221228545,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": 1.4101231987414506,
      "lambda_param": 1.910608138773119,
      "success": true,
      "log_likelihood": -15.298730424001858,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": -2.4728015870630835,
      "lambda_param": 0.9246597674490488,
      "success": true,
      "log_likelihood": -17.974370031350915,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": 5.639632810810485,
      "lambda_param": 5.004754518324066,
      "success": true,
      "log_likelihood": -9.06876512800857,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": -3.267943810130832,
      "lambda_param": 0.0,
      "success": true,
      "log_likelihood": -22.687410151792935,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": 0.8510005745159265,
      "lambda_param": 0.9026908314711615,
      "success": true,
      "log_likelihood": -17.347443598695786,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": -67.95105985996408,
      "lambda_param": 57.12220120987826,
      "success": true,
      "log_likelihood": -115.12750824010317,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": -1.5237095903200915,
      "lambda_param": 0.6997733475033394,
      "success": true,
      "log_likelihood": -18.50321103355256,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": 64.63952069365509,
      "lambda_param": 7.002554390951086e-15,
      "success": true,
      "log_likelihood": -345.38733984912574,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": -1.3933041141247378,
      "lambda_param": 1.4542596326282462,
      "success": true,
      "log_likelihood": -20.22016436881023,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": 3.3669654015499613,
      "lambda_param": 5.162740428724593,
      "success": true,
      "log_likelihood": -6.189517303555072,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": -0.5051252186794312,
      "lambda_param": 3.1471063081810873,
      "success": true,
      "log_likelihood": -10.347224409671723,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": 68.7229255359811,
      "lambda_param": 7.21260567202842,
      "success": true,
      "log_likelihood": -92.10234285573912,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": -5.674874286342935,
      "lambda_param": 100.0,
      "success": true,
      "log_likelihood": -48.335816401514265,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": 0.72733903690043,
      "lambda_param": 0.3749703139238626,
      "success": true,
      "log_likelihood": -14.410592902597909,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": 0.09546537942641964,
      "lambda_param": 0.9850803229476568,
      "success": true,
      "log_likelihood": -19.80470370861788,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": 2.716483985082485,
      "lambda_param": 2.639312856019346,
      "success": true,
      "log_likelihood": -14.023778633862758,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": -6.382998312359419,
      "lambda_param": 2.0465605675662535,
      "success": true,
      "log_likelihood": -6.173579780246132,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": -2.640911239468117,
      "lambda_param": 0.5831502089509306,
      "success": true,
      "log_likelihood": -19.449797917317465,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": -2.598438139084458,
      "lambda_param": 2.3152472330364477,
      "success": true,
      "log_likelihood": -10.08746987792806,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": 0.6828583688919628,
      "lambda_param": 1.4677018759266094,
      "success": true,
      "log_likelihood": -15.213118564652598,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": 5.829668589129367,
      "lambda_param": 1.1565808479539395,
      "success": true,
      "log_likelihood": -7.695481950455748,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": 5.401608874860348,
      "lambda_param": 1.4353378336094522,
      "success": true,
      "log_likelihood": -10.451133985569065,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": -1.0584884653912157,
      "lambda_param": 0.7718627408862844,
      "success": true,
      "log_likelihood": -16.211738278905457,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": 100.0,
      "lambda_param": 0.0,
      "success": true,
      "log_likelihood": -69.07755278652137,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": 11.852597317780878,
      "lambda_param": 100.0,
      "success": true,
      "log_likelihood": -0.0017689025538810627,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": -5.674877847490955,
      "lambda_param": 95.88448548786593,
      "success": true,
      "log_likelihood": -71.36166744960408,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": 0.6908603266946957,
      "lambda_param": 1.613156611772094,
      "success": true,
      "log_likelihood": -15.866735336435179,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": 0.5330467050693904,
      "lambda_param": 0.4379211558225989,
      "success": true,
      "log_likelihood": -15.192972651252472,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": -2.3833730831671676,
      "lambda_param": 0.46051833332999953,
      "success": true,
      "log_likelihood": -22.772649825653954,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": 5.999818233228885,
      "lambda_param": 2.5790214772315996,
      "success": true,
      "log_likelihood": -11.835130093097499,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": 6.3616933322981835,
      "lambda_param": 1.0318267019205978,
      "success": true,
      "log_likelihood": -6.528380514099227,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": -8.50680971439093,
      "lambda_param": 0.9444031284082993,
      "success": true,
      "log_likelihood": -6.592360166703216,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": -2.4932100142574734,
      "lambda_param": 0.0,
      "success": true,
      "log_likelihood": -21.686735352736118,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": -6.383051754953485,
      "lambda_param": 2.0465797472852736,
      "success": true,
      "log_likelihood": -6.173579779469184,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": -2.0667133720572433,
      "lambda_param": 0.47946016750059767,
      "success": true,
      "log_likelihood": -23.28895063719025,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": 1.7057860254359214,
      "lambda_param": 0.0,
      "success": true,
      "log_likelihood": -10.998506324688954,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": -5.837915923624354,
      "lambda_param": 1.6268348772219206,
      "success": true,
      "log_likelihood": -8.86725373490063,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": -0.1258436461241734,
      "lambda_param": 1.4138615301981277,
      "success": true,
      "log_likelihood": -12.996341724297148,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": -1.8497990321929105,
      "lambda_param": 0.2470438704866652,
      "success": true,
      "log_likelihood": -25.76943637440459,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": -4.767738116017011,
      "lambda_param": 3.020307674612709,
      "success": true,
      "log_likelihood": -7.157681751091893,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": 2.037102172835034,
      "lambda_param": 1.3058272845783239,
      "success": true,
      "log_likelihood": -17.362656499368814,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": -2.994611104703127,
      "lambda_param": 1.9893073889886141,
      "success": true,
      "log_likelihood": -13.51724368496866,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": -66.3928070510476,
      "lambda_param": 69.37984408158408,
      "success": true,
      "log_likelihood": -782.8741282734089,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": -1.7739911750919588,
      "lambda_param": 0.8353614525834533,
      "success": true,
      "log_likelihood": -14.55690524364953,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "mu": 41.955137748009776,
      "lambda_param": 4.571810678973669e-16,
      "success": true,
      "log_likelihood": -242.04407610823282,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    }
  ],
  "parameter_recovery": {
    "correlations": {
      "mu": {
        "r": 0.8849528928390058,
        "p": 2.6899141598567426e-34
      },
      "lambda_param": {
        "r": 0.5824548712444066,
        "p": 2.0585938635684974e-10
      }
    }
  },
  "bic_results": {
    "average_bic": 70.3672841130665,
    "individual_bics": [
      19.514197438415763,
      39.70899359691605,
      28.577287657344392,
      35.1157909183734,
      24.47172123876237,
      30.33765464084182,
      7.167037869712219,
      27.290663083766425,
      7.167037869712219,
      29.85535897392476,
      21.55883367571503,
      21.699779211857877,
      24.997585422814204,
      7.167037869712219,
      7.167037869712219,
      7.167038377028988,
      7.167037869712219,
      22.787855654315102,
      18.0824951862402,
      7.167037869712219,
      66.64429078452227,
      21.705143301651127,
      40.29933513577414,
      41.35559965745681,
      29.881840652572123,
      37.73746660821091,
      33.257194897853616,
      16.1710609549571,
      22.60962793355042,
      36.32516288892159,
      7.167037869712219,
      57.787058223920695,
      50.35945134372164,
      37.712786139042514,
      7.167037869712219,
      36.99296508468254,
      26.910503982975484,
      34.1075083289622,
      40.570514649309985,
      24.39070257791178,
      193.08214664894737,
      99.2733508600997,
      53.2187397297932,
      40.09594409194116,
      35.17752777703578,
      39.47076431936931,
      37.76449872491594,
      43.11577793961405,
      25.30456813292936,
      52.54185818049809,
      41.86192507430379,
      237.42205435711855,
      44.17345994401734,
      697.9417175751637,
      47.60736661453268,
      19.546072484022364,
      27.861486696255668,
      191.37172358839047,
      103.83867067994075,
      35.988223682108035,
      46.776445294147976,
      35.214595144637734,
      19.514197437404484,
      46.06663371154715,
      27.34197763276834,
      37.59327500621742,
      22.558001777823716,
      28.069305848050348,
      39.59051443472313,
      145.32214344995495,
      7.170575682019982,
      149.8903727761204,
      38.90050854978258,
      37.55298317941716,
      52.712337528220125,
      30.83729806310722,
      20.223798905110673,
      20.35175821031865,
      50.540508582384454,
      19.514197435850587,
      53.74493915129272,
      29.164050526290126,
      24.901545346713483,
      33.15972132550652,
      58.7059106257214,
      21.482401379096004,
      41.892350875649846,
      34.20152524684954,
      1572.91529442373,
      36.28084836421128,
      491.25519009337785
    ],
    "num_parameters": 2,
    "bic_formula": "BIC = -2 * log_likelihood + k * log(n)"
  }
}