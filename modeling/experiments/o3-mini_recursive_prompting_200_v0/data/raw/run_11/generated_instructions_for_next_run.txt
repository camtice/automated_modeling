<think>
For run 12, encourage creative modifications to the fixed nonlinear transformation while keeping only the three learnable parameters. Consider adding one more fixed transformation term (such as a scaled arctan) to further shape the curvature in the mid-range. For instance, you might use:
  f(x) = sgn(x) × [|x|^(0.5) + log(1 + 3.5×|x|) + 0.2×atan(|x|)]
which combines a power, logarithmic, and arctan term using fixed multipliers. This extra term is intended to improve sensitivity and smoothness without adding any new learnable parameters. Ensure that the overall structure remains unchanged, with exactly three learnable parameters (beta ∈ [–10, 10], gamma ∈ [0, 10], and phi ∈ [0.5, 1.5]). The model should compute the normalized offer percentage, the normalized fair share, derive the fairness gap F, scale F by phi, apply the fixed transformation f(F/phi) as defined above, compute the latent utility U = beta + gamma × f(F/phi), and then convert U to p_accept via the logistic function.
</think>

For run 12 of 200, please develop a computational model for responder decision-making with these requirements:

1. Compute the normalized offer percentage:
  N_offer = split_self / combined_earning,
  and the normalized fair share:
  N_share = token_self / (token_self + token_opp).

2. Define the fairness gap as:
  F = N_offer – N_share.

3. Apply a modified nonlinear transformation f(·) to the scaled gap F/phi. For instance, you could use:
  f(x) = sgn(x) × [ |x|^(0.5) + log(1 + 3.5×|x|) + 0.2×atan(|x|) ]
This transformation adds an extra fixed arctan term to further adjust curvature in the mid-range while preserving stability near zero. You are encouraged to experiment with variations of these fixed multipliers or even consider additional fixed transformation terms, provided that the total number of learnable parameters remains exactly three.

4. Use exactly three learnable parameters with these bounds:
  – beta (baseline bias) ∈ [–10, 10],
  – gamma (sensitivity) ∈ [0, 10],
  – phi (scaling) ∈ [0.5, 1.5].

5. Define the latent utility as:
  U = beta + gamma × f(F/phi)
where F is the fairness gap defined above and f(·) is your chosen nonlinear transformation.

6. Convert U into a choice probability using the logistic function:
  p_accept = 1 / (1 + exp(–U)).

7. Provide the complete mathematical model specification between <MODEL> and </MODEL> tags, and detailed JSON-formatted variable descriptions between <VARIABLES> and </VARIABLES> tags.

8. Clearly indicate the predicted target variable in <target_variable> tags (set to “accept”).

Your goal is to achieve higher accuracy, a lower BIC, and improved parameter recovery. Think out-of-the-box when exploring the fixed transformation's curvature, and ensure the model is fully compliant with the data structure and the learnable parameter constraints.