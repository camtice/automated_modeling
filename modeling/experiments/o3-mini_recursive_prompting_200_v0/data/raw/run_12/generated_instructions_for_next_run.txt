<think>
For run 13, we want to push the model's performance further. Encourage creative exploration in the fixed nonlinear transformation function by allowing additional fixed transformation components. For example, the candidate might add an extra fixed term—such as a small dampened exponential or a modified power-law component—to further refine curvature in both the near-zero and mid-range areas. This term should be fixed (not learnable) and designed to help the model capture subtle nonlinearities, while the overall model remains simple with exactly three learnable parameters: beta (baseline bias), gamma (sensitivity), and phi (scaling). The instructions below therefore maintain the essential structure but invite innovative fixed transformations beyond the previously used power, logarithm, and arctan components.
</think>

For run 13 of 200, please develop a computational model for responder decision-making with the following requirements:

1. Compute the normalized offer percentage:
  N_offer = split_self / combined_earning,
  and the normalized fair share:
  N_share = token_self / (token_self + token_opp).

2. Define the fairness gap as:
  F = N_offer – N_share.

3. Apply a modified nonlinear transformation f(·) to the scaled gap F/phi. You are encouraged to experiment with creative fixed transformations. For instance, you may modify the existing function by adjusting fixed multipliers or by adding an additional fixed transformation term (such as a scaled exponential decay or an extra dampening term) to further shape the curvature across the full range. An example transformation could be:
  f(x) = sgn(x) × [|x|^(0.5) + log(1 + 3.4×|x|) + 0.2×atan(1.1×|x|) + 0.1×(1 - exp(-|x|))]
but you may explore other variations as long as the total number of learnable parameters remains exactly three.

4. Use exactly three learnable parameters with these bounds:
  • beta (baseline bias) ∈ [–10, 10],
  • gamma (sensitivity) ∈ [0, 10],
  • phi (scaling) ∈ [0.5, 1.5].

5. Define the latent utility as:
  U = beta + gamma × f(F/phi)
where f(·) is your chosen fixed nonlinear transformation applied to the scaled fairness gap.

6. Convert U into a choice probability using the logistic function:
  p_accept = 1 / (1 + exp(–U)).

7. Provide the complete mathematical model specification between <MODEL> and </MODEL> tags, and detailed JSON-formatted variable descriptions between <VARIABLES> and </VARIABLES> tags.

8. Clearly indicate the predicted target variable in <target_variable> tags (set to “accept”).

Your goal is to achieve higher accuracy, a lower BIC, and improved parameter recovery. Feel free to experiment with creative fixed transformation terms and adjust the fixed multipliers to explore different curvature profiles, while keeping the total number of learnable parameters strictly at three.