{
  "task_description": "In the  experiment, each participant is given 36 different proposals to respond to. Each is designated by a trial number in the data set This gives 36 instances for the learnable parameters to be trained. There is also a pretask where the participant finds a number of tokens that correspond to their contribution to the group. This is designated by the variable \"token_self\". The other variable, \"token_opp\", is the number of tokens found the opponent's and represents the opoonents contribution to the shared pot that will be later divided by the opponent.\n\nNote that in each trial there is a variable amount of money in the combined earning, so that two equal split_self variables do not represent the same \"fairness\".\n\nBelow is the description of each variable in the dataset, which will be followed by information about the data type of the variable:\n\ntrial_type = how much was the contribution [1 = equal, 2 = opponent more, 3 = participant more]\ntrial_role = the role of the participant [1 = responder, 2 = proposer]\ntoken_opp = number of tokens found by the opponent\ntoken_self = number of tokens found by the participant\ncombined_earning = amount of money earned in total (note that each token found is \u00a33)\nsplit_opp = the proposed share of the opponent (in \u00a3)\nsplit_self = the proposed share for the participant (in \u00a3)\nsplitperc_opp = same but in %\nsplit_perc_self = same but in %\naccept = whether the participant responded accept (1) or reject (0)\naccepted_amount = if accepted, what is the amount gain (in \u00a3)\naccepted_perc = same as above but in %\nproposed_perc = when participant is the proposer, what is the % proposed to the opponent\n\nDataset:\n\nDataset Structure:\nVariables available:\n- ID (int64)\n- group (object)\n- trial_number (int64)\n- trial_type (int64)\n- trial_role (int64)\n- token_opp (int64)\n- token_self (int64)\n- combined_earning (int64)\n- split_opp (float64)\n- split_self (float64)\n- splitperc_opp (int64)\n- splitperc_self (int64)\n- accept (float64)\n- accepted_amount (float64)\n- accepted_perc (float64)\n- proposed_perc (float64)\n- proposed_amount (float64)\n\nNumber of observations: 3276\n\nDataset:\n\nDataset Structure:\nVariables available:\n- ID (int64)\n- group (object)\n- trial_number (int64)\n- trial_type (int64)\n- trial_role (int64)\n- token_opp (int64)\n- token_self (int64)\n- combined_earning (int64)\n- split_opp (float64)\n- split_self (float64)\n- splitperc_opp (int64)\n- splitperc_self (int64)\n- accept (float64)\n- accepted_amount (float64)\n- accepted_perc (float64)\n- proposed_perc (float64)\n- proposed_amount (float64)\n\nNumber of observations: 3276",
  "output_description": "Design a computational model for the given task. The model should obtain the utility, (not the probability of choosing an action).  Your goal is to eventually explore the entire space of possible explainations and mechanisms by which the observed behavior arises.\n\nYour model should use the given variables appropriately, but does not necessary need to use all or even most of the variables. Do not include the model for the utility of rejecting an offer. \n\nThe model should:\n1. Predict only responder behavior.\n2. Build on relevant psychological principles.\n3. Be considerate of high covariance between learnable parameters as the model\nwill have to pass parameter recovery tests.\n4. Be applicable to the dataset given within the task description (i.e. the model should be able to be run using only the provided dataset structure).\n5. Not include parameters to simulate general stochasticity of behavior, because this will be handled later by a temperature parameter.\n6. Should have no more than two learnable parameters.\n7. This specific model should calculate the utility of an action, which will then be used to determine\nthe probability of choosing that action. Negative values should represent a negative utility, and thus an unlikly action.\n\nFor any learnable parameters in your model, you must specify finite numerical bounds (it just can not be infinity) in the variable descriptions. However, this bound should be generous. The utility variable may be unbounded (-inf to inf).\n\nFirst, reason step by step about:\n* The key psychological mechanisms involved\n* How these mechanisms interact\n* What mathematical form could capture these interactions\n* What parameters would be needed to calibrate the model\n* How the model variables map to observable behavior\n\nThen, provide your formal mathematical model between <MODEL> tags, followed by variable descriptions between <VARIABLES> tags. Use clear mathematical notation and ensure each variable is fully described. Every variable must be utilized within the mathematical formula provided between <MODEL> and </MODEL>. For variable descriptions, provide them in a JSON format with the following structure: <VARIABLES> Bounds are by default inclusive. Please spell out the greek variable names instead of using the symbols. Finally, you should provide a short description of the model in the summary tags <SUMMARY> </SUMMARY>. This will be used to compare different computational models of the task; it should be concise and purely descriptive. Do not include generic information about the name of the tasks, since that is implied. \n\n{\n  \"variables\": {\n    \"variable_name\": {\n      \"description\": \"Clear description\",\n      \"range\": {\n        \"min\": value,\n        \"max\": value,\n        \"inclusive_min\": boolean,\n        \"inclusive_max\": boolean\n      },\n      \"distribution\": {\n        \"type\": \"distribution type\",\n        \"parameters\": {}\n      },\n      \"learnable\": boolean,\n      \"source\": \"learnable/data/calculated\"\n    }\n  }\n}\n</VARIABLES>\n\nExample #1: \n<EXAMPLE>\n(Model of a Random Choice Task):\nLet me think through this step by step...\n[your reasoning here]\n\n<MODEL>\nU_i = \u03b2 + \u03b5E + \u03b7N\n</MODEL>\n\n<VARIABLES>\n{\n  \"variables\": {\n    \"U_i\": {\n      \"description\": \"Utility of choosing action i\",\n      \"range\": {\n        \"min\": \"-inf\",\n        \"max\": \"inf\"\n      },\n      \"learnable\": false,\n      \"source\": \"calculated\"\n    },\n    \"beta\": {\n      \"description\": \"Base tendency parameter (inherent preference)\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": 1\n      },\n      \"learnable\": true,\n      \"source\": \"learnable\"\n    },\n    \"epsilon\": {\n      \"description\": \"Environmental sensitivity parameter\",\n      \"range\": {\n        \"min\": \"-inf\",\n        \"max\": \"inf\"\n      },\n      \"learnable\": true,\n      \"source\": \"learnable\"\n    },\n    \"E\": {\n      \"description\": \"Environmental cue value\",\n      \"range\": {\n        \"min\": \"-inf\",\n        \"max\": \"inf\"\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"eta\": {\n      \"description\": \"Noise parameter\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": 1,\n        \"exclusive_max\": true\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"N\": {\n      \"description\": \"Random noise drawn from normal distribution N(0,1)\",\n      \"distribution\": {\n        \"type\": \"normal\",\n        \"mean\": 0,\n        \"std\": 1\n      },\n      \"learnable\": false,\n      \"source\": \"calculated\"\n    }\n  }\n}\n</VARIABLES>\n<SUMMARY>\nA linear utility model combining base preference, environmental influence, and stochastic noise. The model uses two learnable parameters: a base tendency parameter (\u03b2) constrained to [0,1] and an unconstrained environmental sensitivity parameter (\u03b5). Environmental cues and normally distributed noise modify the base utility, allowing for both systematic and random variation in choice behavior.\n</SUMMARY>\n</EXAMPLE>\n\nPlease be sure to provide the mathematical formula for the model between <MODEL> and </MODEL>, and the variable descriptions between <VARIABLES> and </VARIABLES>. No description of the model should be provided within the <MODEL> tags.\n\nThe parameter names you choose in your <VARIABLES> section will be used exactly as specified in subsequent code generation. Please choose clear, non-reserved parameter names that can be used directly in Python code. For example, avoid Python reserved words like 'lambda' and use alternatives like 'learning_rate' or 'lambda_param'.\n\nYou will be given the complete list of models that you have already created. Analyze the models, and notice the absence of possible explanations of behaviors that should be tested. You should start with simple obvious explanations, and as you notice these being thoroughly explored you should shift to fundamentally different models of behavior. Pay less attention to the names of the variables, and how they are actually interacting with the given behavioral data.\n\nYour results will be scored on a combination of BIC with a penalization for number of learned parameters, the ability to recover those learned parameters, and the ability of those parameters to account for the differences in behaviors among varying groups of people.\n\nPrevious Models:\nModel 1:\nSpecification: U_accept = split_self + kappa * (split_self - (token_self/(token_self + token_opp)) * combined_earning)\nSummary: A utility model for responder behavior in which the utility of accepting an offer is determined by the actual monetary payoff (split_self) combined with a fairness adjustment. The fairness adjustment is based on the deviation of split_self from a fair share computed as the participant\u2019s relative contribution (token_self) times the combined earning. The approach uses a single learnable parameter (kappa) governing the sensitivity to fairness deviations.",
  "dataset_info": "\nDataset Structure:\nVariables available:\n- ID (int64)\n- group (object)\n- trial_number (int64)\n- trial_type (int64)\n- trial_role (int64)\n- token_opp (int64)\n- token_self (int64)\n- combined_earning (int64)\n- split_opp (float64)\n- split_self (float64)\n- splitperc_opp (int64)\n- splitperc_self (int64)\n- accept (float64)\n- accepted_amount (float64)\n- accepted_perc (float64)\n- proposed_perc (float64)\n- proposed_amount (float64)\n\nNumber of observations: 3276",
  "learnable_parameters": {
    "gamma": {
      "description": "Subjective valuation parameter scaling the monetary payoff (split_self)",
      "range": {
        "min": 0,
        "max": 10,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": null,
      "learnable": true,
      "source": "learnable"
    },
    "delta": {
      "description": "Sensitivity to perceived unfairness, penalizing offers below the fair share",
      "range": {
        "min": 0,
        "max": 10,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": null,
      "learnable": true,
      "source": "learnable"
    }
  },
  "model_specification": "U_i = gamma * split_self - delta * max((token_self/(token_self + token_opp)) * combined_earning - split_self, 0)",
  "variable_descriptions": {
    "U_i": {
      "description": "Utility of accepting the offer for responder behavior",
      "range": {
        "min": "-inf",
        "max": "inf",
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": null,
      "learnable": false,
      "source": "calculated"
    },
    "gamma": {
      "description": "Subjective valuation parameter scaling the monetary payoff (split_self)",
      "range": {
        "min": 0,
        "max": 10,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": null,
      "learnable": true,
      "source": "learnable"
    },
    "delta": {
      "description": "Sensitivity to perceived unfairness, penalizing offers below the fair share",
      "range": {
        "min": 0,
        "max": 10,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": null,
      "learnable": true,
      "source": "learnable"
    },
    "split_self": {
      "description": "Monetary share allocated to the participant in the offer (in \u00a3)",
      "range": {
        "min": 0,
        "max": "combined_earning",
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": null,
      "learnable": false,
      "source": "data"
    },
    "token_self": {
      "description": "Number of tokens found by the participant, reflecting their contribution",
      "range": {
        "min": 0,
        "max": "inf",
        "inclusive_min": true,
        "inclusive_max": false
      },
      "distribution": null,
      "learnable": false,
      "source": "data"
    },
    "token_opp": {
      "description": "Number of tokens found by the opponent, reflecting their contribution",
      "range": {
        "min": 0,
        "max": "inf",
        "inclusive_min": true,
        "inclusive_max": false
      },
      "distribution": null,
      "learnable": false,
      "source": "data"
    },
    "combined_earning": {
      "description": "Total amount of money available (each token is worth \u00a33)",
      "range": {
        "min": 0,
        "max": "inf",
        "inclusive_min": true,
        "inclusive_max": false
      },
      "distribution": null,
      "learnable": false,
      "source": "data"
    }
  },
  "model_summary": "A utility model for responder behavior that scales the monetary outcome of the offer by gamma and applies a fairness penalty when the offer falls short of an equity reference point derived from the participant\u2019s token contribution. The penalty is weighted by delta, such that only offers below the fair share incur a reduction in utility.",
  "full_reasoning": "Step-by-step reasoning:\n1. Key psychological mechanisms: Responder behavior may be guided by both the actual monetary outcome (split_self) and a concern for fairness relative to what they consider an equitable share. In this task, a fair share is naturally computed from the proportion of tokens the participant found relative to the total tokens found (token_self/(token_self + token_opp)) scaled by the combined earning. When the offer is below this fairness threshold, the individual may incur an additional \u201closs\u201d in utility.\n2. How these mechanisms interact: The monetary gain is valued, but any shortfall relative to the fairness reference point is penalized. If an offer meets or exceeds the fair share, no additional fairness penalty is applied.\n3. Mathematical formulation: We define:\n\u2003\u2003fair_share = (token_self/(token_self + token_opp)) * combined_earning  \n\u2003\u2003Then, for responder offers, the utility of accepting an offer is:\n\u2003\u2003U = gamma * split_self \u2013 delta * max(fair_share \u2013 split_self, 0)\n\u2003\u2003Here, gamma scales the subjective value of the monetary payoff, whereas delta captures the sensitivity to unfair (disadvantageous) deviations.\n4. Learnable parameters: gamma and delta are the only two parameters. Their numerical bounds will be generous (e.g., in the range [0, 10]) to facilitate parameter recovery while avoiding an excess of free parameters.\n5. Mapping to behavior: Given an observed split_self, token_self, token_opp and combined_earning from the data, the model calculates the utility U for accepting an offer. This utility (which can be negative if the fairness violation is large) is then used (in conjunction with a later temperature parameter) to predict the probability of acceptance. The model only addresses responder behavior.\n\nBelow is the formal specification:\n\n<MODEL>\nU_i = gamma * split_self - delta * max((token_self/(token_self + token_opp)) * combined_earning - split_self, 0)\n</MODEL>\n\n<VARIABLES>\n{\n  \"variables\": {\n    \"U_i\": {\n      \"description\": \"Utility of accepting the offer for responder behavior\",\n      \"range\": {\n        \"min\": \"-inf\",\n        \"max\": \"inf\",\n        \"inclusive_min\": true,\n        \"inclusive_max\": true\n      },\n      \"learnable\": false,\n      \"source\": \"calculated\"\n    },\n    \"gamma\": {\n      \"description\": \"Subjective valuation parameter scaling the monetary payoff (split_self)\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": 10,\n        \"inclusive_min\": true,\n        \"inclusive_max\": true\n      },\n      \"learnable\": true,\n      \"source\": \"learnable\"\n    },\n    \"delta\": {\n      \"description\": \"Sensitivity to perceived unfairness, penalizing offers below the fair share\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": 10,\n        \"inclusive_min\": true,\n        \"inclusive_max\": true\n      },\n      \"learnable\": true,\n      \"source\": \"learnable\"\n    },\n    \"split_self\": {\n      \"description\": \"Monetary share allocated to the participant in the offer (in \u00a3)\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": \"combined_earning\",\n        \"inclusive_min\": true,\n        \"inclusive_max\": true\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"token_self\": {\n      \"description\": \"Number of tokens found by the participant, reflecting their contribution\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": \"inf\",\n        \"inclusive_min\": true,\n        \"inclusive_max\": false\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"token_opp\": {\n      \"description\": \"Number of tokens found by the opponent, reflecting their contribution\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": \"inf\",\n        \"inclusive_min\": true,\n        \"inclusive_max\": false\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"combined_earning\": {\n      \"description\": \"Total amount of money available (each token is worth \u00a33)\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": \"inf\",\n        \"inclusive_min\": true,\n        \"inclusive_max\": false\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    }\n  }\n}\n</VARIABLES>\n\n<SUMMARY>\nA utility model for responder behavior that scales the monetary outcome of the offer by gamma and applies a fairness penalty when the offer falls short of an equity reference point derived from the participant\u2019s token contribution. The penalty is weighted by delta, such that only offers below the fair share incur a reduction in utility.\n</SUMMARY>",
  "simulation_code": "def simulate_model(trial_data, gamma=1, delta=1):\n    utility_values = []\n    for trial in trial_data:\n        split_self = trial.get(\"split_self\", 0)\n        token_self = trial.get(\"token_self\", 0)\n        token_opp = trial.get(\"token_opp\", 0)\n        combined_earning = trial.get(\"combined_earning\", 0)\n        \n        # Calculate the fair share\n        fair_share = (token_self / (token_self + token_opp)) * combined_earning if (token_self + token_opp) > 0 else 0\n        \n        # Calculate the utility\n        utility = (gamma * split_self) - (delta * max(fair_share - split_self, 0))\n        \n        utility_values.append(utility)\n    \n    return utility_values",
  "fitting_results": [
    {
      "gamma": 0.0,
      "delta": 3.8060068897811576,
      "success": true,
      "log_likelihood": -7.931512218257409,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.179852769646343,
      "delta": 1.7641853975985382,
      "success": true,
      "log_likelihood": -16.281262682882126,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 2.499848005056739,
      "delta": 3.588903085296556,
      "success": true,
      "log_likelihood": -10.04656539583047,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.4181524572537165,
      "delta": 2.4612420865989777,
      "success": true,
      "log_likelihood": -13.653156181794436,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 2.028739274468735,
      "delta": 3.8689805294944497,
      "success": true,
      "log_likelihood": -9.84802447274117,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 2.4196181303336672,
      "delta": 2.540293511462395,
      "success": true,
      "log_likelihood": -11.04233234469759,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 10.0,
      "delta": 0.0,
      "success": true,
      "log_likelihood": -0.006472187475228865,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 2.4169548107952608,
      "delta": 2.441772178255946,
      "success": true,
      "log_likelihood": -11.096668638397961,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 10.0,
      "delta": 0.0,
      "success": true,
      "log_likelihood": -0.0064721874752288674,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.5441688200581685,
      "delta": 3.2758127194740765,
      "success": true,
      "log_likelihood": -11.166531339808193,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 5.893152497169399,
      "delta": 10.0,
      "success": true,
      "log_likelihood": -2.2405174095475386,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.14165813439790753,
      "delta": 3.41207538986491,
      "success": true,
      "log_likelihood": -9.090310470183452,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 2.2353425014683603,
      "delta": 4.41683589482494,
      "success": true,
      "log_likelihood": -8.816156963863413,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 10.0,
      "delta": 0.0,
      "success": true,
      "log_likelihood": -0.006472187475228864,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 10.0,
      "delta": 0.0,
      "success": true,
      "log_likelihood": -0.006472187475228864,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 10.0,
      "delta": 0.0,
      "success": true,
      "log_likelihood": -0.006472187475228867,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 10.0,
      "delta": 0.0,
      "success": true,
      "log_likelihood": -0.006472187475228865,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 8.776957078330454,
      "delta": 4.207570009149571,
      "success": true,
      "log_likelihood": -2.746171475944796,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 3.5717773095176373,
      "delta": 1.5225659733419306,
      "success": true,
      "log_likelihood": -6.650035492083053,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 10.0,
      "delta": 0.0,
      "success": true,
      "log_likelihood": -0.006472187475228866,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.3997519848416382,
      "delta": 1.930053307816188,
      "success": true,
      "log_likelihood": -15.240283485247948,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 3.1465178216653475,
      "delta": 1.5080787798119073,
      "success": true,
      "log_likelihood": -7.939517179732957,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.6803285349674643,
      "delta": 1.4190143175802032,
      "success": true,
      "log_likelihood": -18.3242320693857,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.1922266219921818,
      "delta": 1.5114549966957476,
      "success": true,
      "log_likelihood": -16.991218465930846,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.3696393810587422,
      "delta": 2.3827760961454776,
      "success": true,
      "log_likelihood": -13.939297529925398,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.5707532695054236,
      "delta": 1.7910054103999653,
      "success": true,
      "log_likelihood": -14.89471869622598,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 2.1870225483223984,
      "delta": 2.73764151431528,
      "success": true,
      "log_likelihood": -11.622843834237258,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 2.895498589190168,
      "delta": 10.0,
      "success": true,
      "log_likelihood": -3.938665188746549,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 2.382065565492829,
      "delta": 0.8624622519056561,
      "success": true,
      "log_likelihood": -9.361863495346606,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.3686517665752627,
      "delta": 0.7717220570805617,
      "success": true,
      "log_likelihood": -15.902796867922524,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 10.0,
      "delta": 0.0,
      "success": true,
      "log_likelihood": -0.006472187475228866,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.0,
      "delta": 3.805999865833499,
      "success": true,
      "log_likelihood": -7.931512218248691,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.5302961369373134,
      "delta": 0.9385741120248899,
      "success": true,
      "log_likelihood": -21.05837517841964,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.9859964341406958,
      "delta": 2.019874600390587,
      "success": true,
      "log_likelihood": -15.412194969827262,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 10.0,
      "delta": 0.0,
      "success": true,
      "log_likelihood": -0.006472187475228865,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.9073925624890498,
      "delta": 1.5867284424429842,
      "success": true,
      "log_likelihood": -13.363774643090018,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 4.1584677791831695,
      "delta": 3.68871481919983,
      "success": true,
      "log_likelihood": -7.009324202283983,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.418221616688572,
      "delta": 2.278274597482445,
      "success": true,
      "log_likelihood": -14.22566913199398,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.18242586253675,
      "delta": 1.0867703664936132,
      "success": true,
      "log_likelihood": -17.719069088202833,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.9042278339215821,
      "delta": 0.3196709632971814,
      "success": true,
      "log_likelihood": -9.541669266017566,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.127770875257176,
      "delta": 1.3063009741171767,
      "success": true,
      "log_likelihood": -17.746254323617997,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.4485544292443741,
      "delta": 2.482117419350239,
      "success": true,
      "log_likelihood": -12.426179406444788,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.8697705015275412,
      "delta": 0.0,
      "success": true,
      "log_likelihood": -7.745036531465977,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.3558975344247612,
      "delta": 1.5925313655418363,
      "success": true,
      "log_likelihood": -16.139319575009356,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.8991331012169221,
      "delta": 2.033173197967871,
      "success": true,
      "log_likelihood": -13.257553280902997,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.3962000080723507,
      "delta": 0.7958752579491822,
      "success": true,
      "log_likelihood": -15.740340539853582,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.3997518938019218,
      "delta": 1.9300537894096332,
      "success": true,
      "log_likelihood": -15.240283488084179,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.6486299103812321,
      "delta": 1.2985982542531747,
      "success": true,
      "log_likelihood": -18.995917545500415,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.437076245239299,
      "delta": 3.2198532224260528,
      "success": true,
      "log_likelihood": -11.269891204977872,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.38724987171046094,
      "delta": 0.3456426039868969,
      "success": true,
      "log_likelihood": -23.589996984358955,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.2183338092425942,
      "delta": 0.8529073154061083,
      "success": true,
      "log_likelihood": -17.33769282181486,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.0,
      "delta": 1.7887959005072893,
      "success": true,
      "log_likelihood": -13.305935033380631,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.9537898688988873,
      "delta": 1.0885845306318154,
      "success": true,
      "log_likelihood": -19.084444854119393,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.6554068583128476,
      "delta": 0.45901467197287094,
      "success": true,
      "log_likelihood": -21.649576318392004,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.44635567889397554,
      "delta": 1.2332836529550848,
      "success": true,
      "log_likelihood": -19.14585130622506,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 3.808786207251704,
      "delta": 9.455450866578941,
      "success": true,
      "log_likelihood": -4.334577663655377,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.0033158253290004,
      "delta": 3.421384510283284,
      "success": true,
      "log_likelihood": -10.386539880529426,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.1376584578382773,
      "delta": 0.0,
      "success": true,
      "log_likelihood": -13.680488206347572,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.07468400455819929,
      "delta": 2.935712185911137,
      "success": true,
      "log_likelihood": -9.825736629765832,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.4313185929064787,
      "delta": 0.464605079263665,
      "success": true,
      "log_likelihood": -14.062138466423018,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.900309263474847,
      "delta": 0.869301335762653,
      "success": true,
      "log_likelihood": -19.76650471312921,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.3305865983077183,
      "delta": 2.1438618042383233,
      "success": true,
      "log_likelihood": -14.763159511586363,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.0,
      "delta": 3.806000788925798,
      "success": true,
      "log_likelihood": -7.931512218248795,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.6307292914782293,
      "delta": 0.977141180114091,
      "success": true,
      "log_likelihood": -20.702526781711487,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.696573201255151,
      "delta": 3.0401091687551878,
      "success": true,
      "log_likelihood": -11.083994119635303,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.631286387669617,
      "delta": 1.9393207270157424,
      "success": true,
      "log_likelihood": -14.437445103466626,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 2.309594201060116,
      "delta": 0.5413850491043344,
      "success": true,
      "log_likelihood": -8.407405638163981,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.8700650027531611,
      "delta": 0.7069752901170491,
      "success": true,
      "log_likelihood": -11.779558639026906,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.4154039497595852,
      "delta": 1.470396022989063,
      "success": true,
      "log_likelihood": -16.02928879983014,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.3560460027248256,
      "delta": 0.0,
      "success": true,
      "log_likelihood": -11.540124489362114,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.5984559877672332,
      "delta": 10.0,
      "success": true,
      "log_likelihood": -1.933807477661458,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.03723593583186178,
      "delta": 1.9994268355849485,
      "success": true,
      "log_likelihood": -12.598482049176376,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.3705392313933784,
      "delta": 1.817063409895194,
      "success": true,
      "log_likelihood": -15.606148322591475,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.4028899813246,
      "delta": 0.5665186396601635,
      "success": true,
      "log_likelihood": -14.83372668378743,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.4606034718123059,
      "delta": 0.6219330521870181,
      "success": true,
      "log_likelihood": -22.66357189402518,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.8873611219723037,
      "delta": 1.7135699320395306,
      "success": true,
      "log_likelihood": -13.469173044839597,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 2.079392686379573,
      "delta": 0.20438288678726504,
      "success": true,
      "log_likelihood": -7.80217368444298,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.0,
      "delta": 3.4521989063916134,
      "success": true,
      "log_likelihood": -8.474686531170379,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.5316295424048842,
      "delta": 0.26699931809979577,
      "success": true,
      "log_likelihood": -22.37065605266308,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.0,
      "delta": 3.805992247424869,
      "success": true,
      "log_likelihood": -7.93151221825989,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.468457373305618,
      "delta": 0.5662315062745451,
      "success": true,
      "log_likelihood": -22.809114635753875,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.3338931842745176,
      "delta": 0.0,
      "success": true,
      "log_likelihood": -11.741860654220119,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.0,
      "delta": 2.689263178852025,
      "success": true,
      "log_likelihood": -10.063924084618408,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 2.5057263516767967,
      "delta": 3.2626252183713826,
      "success": true,
      "log_likelihood": -10.339432461633852,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.3395962331744884,
      "delta": 0.1984542556632903,
      "success": true,
      "log_likelihood": -23.819155639730667,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.16603893872710984,
      "delta": 4.314238723383584,
      "success": true,
      "log_likelihood": -7.785436408855775,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.145469223186038,
      "delta": 0.8855463162003371,
      "success": true,
      "log_likelihood": -17.95964190243428,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.3165155095864825,
      "delta": 2.1578564728048337,
      "success": true,
      "log_likelihood": -13.317159678762044,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 3.1024827195400193,
      "delta": 0.675592300261669,
      "success": true,
      "log_likelihood": -5.81784069230872,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.5459201362405146,
      "delta": 1.9787985693949102,
      "success": true,
      "log_likelihood": -14.679368249029759,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.7069632916970164,
      "delta": 0.33270921955897775,
      "success": true,
      "log_likelihood": -20.8331233140352,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    }
  ],
  "parameter_recovery": {
    "correlations": {
      "gamma": {
        "r": 0.8313696017262885,
        "p": 9.536450208112648e-27
      },
      "delta": {
        "r": 0.856561292012421,
        "p": 6.520865983138553e-30
      }
    }
  },
  "bic_results": {
    "average_bic": 30.756923372277615,
    "individual_bics": [
      23.030062313427038,
      39.72956324267647,
      27.260168668573158,
      34.47335024050109,
      26.863086822394557,
      29.2517025663074,
      7.179982251862677,
      29.36037515370814,
      7.179982251862677,
      29.500100556528608,
      11.648072696007297,
      25.347658817279125,
      24.799351804639045,
      7.179982251862677,
      7.179982251862677,
      7.179982251862677,
      7.179982251862677,
      12.659380828801812,
      20.467108861078326,
      7.179982251862677,
      37.64760484740812,
      23.046072236378134,
      43.81550201568362,
      41.14947480877391,
      35.04563293676301,
      36.95647526936418,
      30.412725545386735,
      15.044368254405317,
      25.890764867605434,
      38.97263161275727,
      7.179982251862677,
      23.0300623134096,
      49.2837882337515,
      37.99142781656674,
      7.179982251862677,
      33.894587163092254,
      21.185686281480187,
      35.61837614090018,
      42.605176053317884,
      26.250376408947353,
      42.65954652414821,
      32.019396689801795,
      22.657110939844173,
      39.44567702693093,
      33.68214443871821,
      38.647718956619386,
      37.64760485308058,
      45.15887296791305,
      29.706820286867966,
      54.34703184563013,
      41.842423520541935,
      33.77890794367348,
      45.335927585151005,
      50.466190513696226,
      45.45874048936234,
      15.836193204222974,
      27.94011763797107,
      34.52801428960736,
      26.81851113644388,
      35.291314809758255,
      46.700047303170635,
      36.69335690008494,
      23.030062313409807,
      48.57209144033519,
      29.335026116182824,
      36.04192808384547,
      23.981849153240184,
      30.72615515496603,
      39.2256154765725,
      30.247286855636446,
      11.034652832235135,
      32.36400197526497,
      38.37933452209517,
      36.83449124448708,
      52.494181664962575,
      34.10538396659141,
      22.77138524579818,
      24.11641093925298,
      51.90834998223838,
      23.030062313431998,
      52.78526714841997,
      30.650759185352456,
      27.29488604614904,
      27.84590280017992,
      54.80534915637355,
      22.73791069462377,
      43.08632168178078,
      33.80135723443631,
      18.80271926152966,
      36.52577437497174,
      48.833284504982615
    ],
    "num_parameters": 2,
    "bic_formula": "BIC = -2 * log_likelihood + k * log(n)"
  }
}