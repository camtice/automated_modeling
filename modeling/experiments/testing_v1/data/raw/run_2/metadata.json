{
  "task_description": "In the  experiment, each participant is given 36 different proposals to respond to. Each is designated by a trial number in the data set This gives 36 instances for the learnable parameters to be trained. There is also a pretask where the participant finds a number of tokens that correspond to their contribution to the group. This is designated by the variable \"token_self\". The other variable, \"token_opp\", is the number of tokens found the opponent's and represents the opoonents contribution to the shared pot that will be later divided by the opponent.\n\nNote that in each trial there is a variable amount of money in the combined earning, so that two equal split_self variables do not represent the same \"fairness\".\n\nBelow is the description of each variable in the dataset, which will be followed by information about the data type of the variable:\n\ntrial_type = how much was the contribution [1 = equal, 2 = opponent more, 3 = participant more]\ntrial_role = the role of the participant [1 = responder, 2 = proposer]\ntoken_opp = number of tokens found by the opponent\ntoken_self = number of tokens found by the participant\ncombined_earning = amount of money earned in total (note that each token found is \u00a33)\nsplit_opp = the proposed share of the opponent (in \u00a3)\nsplit_self = the proposed share for the participant (in \u00a3)\nsplitperc_opp = same but in %\nsplit_perc_self = same but in %\naccept = whether the participant responded accept (1) or reject (0)\naccepted_amount = if accepted, what is the amount gain (in \u00a3)\naccepted_perc = same as above but in %\nproposed_perc = when participant is the proposer, what is the % proposed to the opponent\n\nDataset:\n\nDataset Structure:\nVariables available:\n- ID (int64)\n- group (object)\n- trial_number (int64)\n- trial_type (int64)\n- trial_role (int64)\n- token_opp (int64)\n- token_self (int64)\n- combined_earning (int64)\n- split_opp (float64)\n- split_self (float64)\n- splitperc_opp (int64)\n- splitperc_self (int64)\n- accept (float64)\n- accepted_amount (float64)\n- accepted_perc (float64)\n- proposed_perc (float64)\n- proposed_amount (float64)\n\nNumber of observations: 3276\n\nDataset:\n\nDataset Structure:\nVariables available:\n- ID (int64)\n- group (object)\n- trial_number (int64)\n- trial_type (int64)\n- trial_role (int64)\n- token_opp (int64)\n- token_self (int64)\n- combined_earning (int64)\n- split_opp (float64)\n- split_self (float64)\n- splitperc_opp (int64)\n- splitperc_self (int64)\n- accept (float64)\n- accepted_amount (float64)\n- accepted_perc (float64)\n- proposed_perc (float64)\n- proposed_amount (float64)\n\nNumber of observations: 3276",
  "output_description": "Design a computational model for the given task. The model should obtain the utility, (not the probability of choosing an action).  Your goal is to eventually explore the entire space of possible explainations and mechanisms by which the observed behavior arises.\n\nYour model should use the given variables appropriately, but does not necessary need to use all or even most of the variables. Do not include the model for the utility of rejecting an offer. \n\nThe model should:\n1. Predict only responder behavior.\n2. Build on relevant psychological principles.\n3. Be considerate of high covariance between learnable parameters as the model\nwill have to pass parameter recovery tests.\n4. Be applicable to the dataset given within the task description (i.e. the model should be able to be run using only the provided dataset structure).\n5. Not include parameters to simulate general stochasticity of behavior, because this will be handled later by a temperature parameter.\n6. Should have no more than two learnable parameters.\n7. This specific model should calculate the utility of an action, which will then be used to determine\nthe probability of choosing that action. Negative values should represent a negative utility, and thus an unlikly action.\n\nFor any learnable parameters in your model, you must specify finite numerical bounds (it just can not be infinity) in the variable descriptions. However, this bound should be generous. The utility variable may be unbounded (-inf to inf).\n\nFirst, reason step by step about:\n* The key psychological mechanisms involved\n* How these mechanisms interact\n* What mathematical form could capture these interactions\n* What parameters would be needed to calibrate the model\n* How the model variables map to observable behavior\n\nThen, provide your formal mathematical model between <MODEL> tags, followed by variable descriptions between <VARIABLES> tags. Use clear mathematical notation and ensure each variable is fully described. Every variable must be utilized within the mathematical formula provided between <MODEL> and </MODEL>. For variable descriptions, provide them in a JSON format with the following structure: <VARIABLES> Bounds are by default inclusive. Please spell out the greek variable names instead of using the symbols. Finally, you should provide a short description of the model in the summary tags <SUMMARY> </SUMMARY>. This will be used to compare different computational models of the task; it should be concise and purely descriptive. Do not include generic information about the name of the tasks, since that is implied. \n\n{\n  \"variables\": {\n    \"variable_name\": {\n      \"description\": \"Clear description\",\n      \"range\": {\n        \"min\": value,\n        \"max\": value,\n        \"inclusive_min\": boolean,\n        \"inclusive_max\": boolean\n      },\n      \"distribution\": {\n        \"type\": \"distribution type\",\n        \"parameters\": {}\n      },\n      \"learnable\": boolean,\n      \"source\": \"learnable/data/calculated\"\n    }\n  }\n}\n</VARIABLES>\n\nExample #1: \n<EXAMPLE>\n(Model of a Random Choice Task):\nLet me think through this step by step...\n[your reasoning here]\n\n<MODEL>\nU_i = \u03b2 + \u03b5E + \u03b7N\n</MODEL>\n\n<VARIABLES>\n{\n  \"variables\": {\n    \"U_i\": {\n      \"description\": \"Utility of choosing action i\",\n      \"range\": {\n        \"min\": \"-inf\",\n        \"max\": \"inf\"\n      },\n      \"learnable\": false,\n      \"source\": \"calculated\"\n    },\n    \"beta\": {\n      \"description\": \"Base tendency parameter (inherent preference)\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": 1\n      },\n      \"learnable\": true,\n      \"source\": \"learnable\"\n    },\n    \"epsilon\": {\n      \"description\": \"Environmental sensitivity parameter\",\n      \"range\": {\n        \"min\": \"-inf\",\n        \"max\": \"inf\"\n      },\n      \"learnable\": true,\n      \"source\": \"learnable\"\n    },\n    \"E\": {\n      \"description\": \"Environmental cue value\",\n      \"range\": {\n        \"min\": \"-inf\",\n        \"max\": \"inf\"\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"eta\": {\n      \"description\": \"Noise parameter\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": 1,\n        \"exclusive_max\": true\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"N\": {\n      \"description\": \"Random noise drawn from normal distribution N(0,1)\",\n      \"distribution\": {\n        \"type\": \"normal\",\n        \"mean\": 0,\n        \"std\": 1\n      },\n      \"learnable\": false,\n      \"source\": \"calculated\"\n    }\n  }\n}\n</VARIABLES>\n<SUMMARY>\nA linear utility model combining base preference, environmental influence, and stochastic noise. The model uses two learnable parameters: a base tendency parameter (\u03b2) constrained to [0,1] and an unconstrained environmental sensitivity parameter (\u03b5). Environmental cues and normally distributed noise modify the base utility, allowing for both systematic and random variation in choice behavior.\n</SUMMARY>\n</EXAMPLE>\n\nPlease be sure to provide the mathematical formula for the model between <MODEL> and </MODEL>, and the variable descriptions between <VARIABLES> and </VARIABLES>. No description of the model should be provided within the <MODEL> tags.\n\nThe parameter names you choose in your <VARIABLES> section will be used exactly as specified in subsequent code generation. Please choose clear, non-reserved parameter names that can be used directly in Python code. For example, avoid Python reserved words like 'lambda' and use alternatives like 'learning_rate' or 'lambda_param'.\n\nYou will be given the complete list of models that you have already created. Analyze the models, and notice the absence of possible explanations of behaviors that should be tested. You should start with simple obvious explanations, and as you notice these being thoroughly explored you should shift to fundamentally different models of behavior. Pay less attention to the names of the variables, and how they are actually interacting with the given behavioral data.\n\nYour results will be scored on a combination of BIC with a penalization for number of learned parameters, the ability to recover those learned parameters, and the ability of those parameters to account for the differences in behaviors among varying groups of people.\n\nPrevious Models:\nModel 1:\nSpecification: U_accept = split_self - alpha * max( (token_self/(token_self+token_opp))*combined_earning - split_self , 0 ) - beta * max( split_self - (token_self/(token_self+token_opp))*combined_earning , 0 )\nSummary: The model computes the utility of accepting an offer by comparing the offered monetary share (split_self) to a fairness reference derived from the participant\u2019s token allocation (token_self) relative to total tokens (token_self + token_opp) and the combined earning. Two learnable parameters (alpha and beta) penalize deviations from this fairness reference, reflecting sensitivity to disadvantageous and advantageous inequity respectively.",
  "dataset_info": "\nDataset Structure:\nVariables available:\n- ID (int64)\n- group (object)\n- trial_number (int64)\n- trial_type (int64)\n- trial_role (int64)\n- token_opp (int64)\n- token_self (int64)\n- combined_earning (int64)\n- split_opp (float64)\n- split_self (float64)\n- splitperc_opp (int64)\n- splitperc_self (int64)\n- accept (float64)\n- accepted_amount (float64)\n- accepted_perc (float64)\n- proposed_perc (float64)\n- proposed_amount (float64)\n\nNumber of observations: 3276",
  "learnable_parameters": {
    "gamma": {
      "description": "Sensitivity to disadvantageous inequity (when the offer is below the fairness reference).",
      "range": {
        "min": 0,
        "max": 100,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": null,
      "learnable": true,
      "source": "learnable"
    },
    "theta": {
      "description": "Sensitivity to advantageous inequity (when the offer is above the fairness reference).",
      "range": {
        "min": 0,
        "max": 100,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": null,
      "learnable": true,
      "source": "learnable"
    }
  },
  "model_specification": "U_accept = split_self - gamma * [max( fairness_reference - split_self, 0 )]^2 - theta * [max( split_self - fairness_reference, 0 )]^2\n\nwhere fairness_reference = (token_self / (token_self + token_opp)) * combined_earning",
  "variable_descriptions": {
    "U_accept": {
      "description": "Utility of accepting the offer, computed as the offered share minus a quadratic penalty for deviations from fairness.",
      "range": {
        "min": "-inf",
        "max": "inf",
        "inclusive_min": false,
        "inclusive_max": false
      },
      "distribution": null,
      "learnable": false,
      "source": "calculated"
    },
    "split_self": {
      "description": "The monetary share proposed for the participant (in \u00a3).",
      "range": {
        "min": 0,
        "max": "inf",
        "inclusive_min": true,
        "inclusive_max": false
      },
      "distribution": null,
      "learnable": false,
      "source": "data"
    },
    "token_self": {
      "description": "The number of tokens found by the participant.",
      "range": {
        "min": 0,
        "max": "inf",
        "inclusive_min": true,
        "inclusive_max": false
      },
      "distribution": null,
      "learnable": false,
      "source": "data"
    },
    "token_opp": {
      "description": "The number of tokens found by the opponent. Note that token_opp must be at least 1 to avoid division by zero.",
      "range": {
        "min": 1,
        "max": "inf",
        "inclusive_min": true,
        "inclusive_max": false
      },
      "distribution": null,
      "learnable": false,
      "source": "data"
    },
    "combined_earning": {
      "description": "Total combined earnings from tokens (each token is worth \u00a33), representing the total money available.",
      "range": {
        "min": 0,
        "max": "inf",
        "inclusive_min": true,
        "inclusive_max": false
      },
      "distribution": null,
      "learnable": false,
      "source": "data"
    },
    "fairness_reference": {
      "description": "The fair share calculated based on token counts and combined earnings: (token_self / (token_self + token_opp)) * combined_earning.",
      "range": {
        "min": 0,
        "max": "inf",
        "inclusive_min": true,
        "inclusive_max": false
      },
      "distribution": null,
      "learnable": false,
      "source": "calculated"
    },
    "gamma": {
      "description": "Sensitivity to disadvantageous inequity (when the offer is below the fairness reference).",
      "range": {
        "min": 0,
        "max": 100,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": null,
      "learnable": true,
      "source": "learnable"
    },
    "theta": {
      "description": "Sensitivity to advantageous inequity (when the offer is above the fairness reference).",
      "range": {
        "min": 0,
        "max": 100,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": null,
      "learnable": true,
      "source": "learnable"
    }
  },
  "model_summary": "A quadratic inequity aversion model for responders. The utility of accepting an offer is computed as the offered monetary value minus a squared penalty based on deviation from a fairness reference derived from token allocation. Two learnable parameters govern the sensitivity to disadvantageous (gamma) and advantageous (theta) inequity.",
  "full_reasoning": "Step-by-step reasoning:\n1. Key psychological mechanisms: The responder cares about how the monetary offer (split_self) compares to a fairness reference. This fairness reference is derived from the participant\u2019s token allocation relative to the total tokens (i.e., token_self relative to token_self + token_opp) multiplied by the combined available money. Any deviation from this fair share is penalized.\n2. Interaction of mechanisms: When an offer is less than the fairness reference (disadvantageous inequity), the responder experiences a penalty; similarly, an offer above the fairness reference (advantageous inequity) may also trigger a penalty (but typically of a different magnitude). Instead of a linear penalty as in previous models, a quadratic penalty is used to capture the sensitivity to the degree of deviation.\n3. Mathematical form: The model computes the utility of accepting an offer as the offered share less a quadratic penalty on the deviation from the fairness reference. Two parameters govern the sensitivity: one (gamma) for disadvantageous inequity and one (theta) for advantageous inequity.\n4. Required parameters: Two learnable parameters are introduced:\n   \u2022 gamma: sensitivity to when the offer is below the fairness reference.\n   \u2022 theta: sensitivity to when the offer is above the fairness reference.\n5. Mapping to observable behavior: The fairness reference is calculated solely from data (token_self, token_opp, combined_earning). The monetary offer split_self is directly observed, and the computed utility (U_accept) will be used later (with a temperature parameter) to predict acceptance likelihood.\n\nThe formal model specification is provided below.\n\n<MODEL>\nU_accept = split_self - gamma * [max( fairness_reference - split_self, 0 )]^2 - theta * [max( split_self - fairness_reference, 0 )]^2\n\nwhere fairness_reference = (token_self / (token_self + token_opp)) * combined_earning\n</MODEL>\n\nBelow are the variable descriptions.\n\n<VARIABLES>\n{\n  \"variables\": {\n    \"U_accept\": {\n      \"description\": \"Utility of accepting the offer, computed as the offered share minus a quadratic penalty for deviations from fairness.\",\n      \"range\": {\n        \"min\": \"-inf\",\n        \"max\": \"inf\",\n        \"inclusive_min\": false,\n        \"inclusive_max\": false\n      },\n      \"learnable\": false,\n      \"source\": \"calculated\"\n    },\n    \"split_self\": {\n      \"description\": \"The monetary share proposed for the participant (in \u00a3).\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": \"inf\",\n        \"inclusive_min\": true,\n        \"inclusive_max\": false\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"token_self\": {\n      \"description\": \"The number of tokens found by the participant.\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": \"inf\",\n        \"inclusive_min\": true,\n        \"inclusive_max\": false\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"token_opp\": {\n      \"description\": \"The number of tokens found by the opponent. Note that token_opp must be at least 1 to avoid division by zero.\",\n      \"range\": {\n        \"min\": 1,\n        \"max\": \"inf\",\n        \"inclusive_min\": true,\n        \"inclusive_max\": false\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"combined_earning\": {\n      \"description\": \"Total combined earnings from tokens (each token is worth \u00a33), representing the total money available.\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": \"inf\",\n        \"inclusive_min\": true,\n        \"inclusive_max\": false\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"fairness_reference\": {\n      \"description\": \"The fair share calculated based on token counts and combined earnings: (token_self / (token_self + token_opp)) * combined_earning.\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": \"inf\",\n        \"inclusive_min\": true,\n        \"inclusive_max\": false\n      },\n      \"learnable\": false,\n      \"source\": \"calculated\"\n    },\n    \"gamma\": {\n      \"description\": \"Sensitivity to disadvantageous inequity (when the offer is below the fairness reference).\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": 100,\n        \"inclusive_min\": true,\n        \"inclusive_max\": true\n      },\n      \"learnable\": true,\n      \"source\": \"learnable\"\n    },\n    \"theta\": {\n      \"description\": \"Sensitivity to advantageous inequity (when the offer is above the fairness reference).\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": 100,\n        \"inclusive_min\": true,\n        \"inclusive_max\": true\n      },\n      \"learnable\": true,\n      \"source\": \"learnable\"\n    }\n  }\n}\n</VARIABLES>\n\n<SUMMARY>\nA quadratic inequity aversion model for responders. The utility of accepting an offer is computed as the offered monetary value minus a squared penalty based on deviation from a fairness reference derived from token allocation. Two learnable parameters govern the sensitivity to disadvantageous (gamma) and advantageous (theta) inequity.\n</SUMMARY>",
  "simulation_code": "def simulate_model(trial_data, gamma=1, theta=1):\n    utility_values = []\n    for trial in trial_data:\n        split_self = trial.get(\"split_self\", 0)\n        token_self = trial.get(\"token_self\", 0)\n        token_opp = trial.get(\"token_opp\", 1)  # Assuming at least 1 to avoid division by zero\n        combined_earning = trial.get(\"combined_earning\", 0)\n\n        # Calculate the fairness reference\n        fairness_reference = (token_self / (token_self + token_opp)) * combined_earning\n        \n        # Calculate penalties\n        disadvantageous_penalty = max(fairness_reference - split_self, 0) ** 2\n        advantageous_penalty = max(split_self - fairness_reference, 0) ** 2\n        \n        # Calculate utility\n        U_accept = split_self - (gamma * disadvantageous_penalty) - (theta * advantageous_penalty)\n        utility_values.append(U_accept)\n    \n    return utility_values",
  "fitting_results": [
    {
      "gamma": 100.0,
      "theta": 0.35676489986086307,
      "success": true,
      "log_likelihood": -28.21374937287962,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.3820729455282245,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -18.852786491914973,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.49562154831436833,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -11.712456780443832,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.554359577269193,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -14.838651133087021,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.8188756459749729,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -9.659856581947796,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.3084441118730016,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -12.491358929404603,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.0,
      "theta": 2.2947529805562115e-15,
      "success": true,
      "log_likelihood": -6.9501298794562105,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.30904979071840005,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -11.713571713330536,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.0,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -6.950129879456211,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.7425773657755007,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -13.59249057422253,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.7845308388420014,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -7.6810776888350984,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 3.9510474619636753,
      "theta": 0.3566978219965069,
      "success": true,
      "log_likelihood": -14.660226354731062,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.8481439111729456,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -9.913029563351433,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.0,
      "theta": 2.0160906515235893e-17,
      "success": true,
      "log_likelihood": -6.950129879456208,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.0,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -6.950129879456209,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.0,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -6.95012987945621,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.0,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -6.950129879456209,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.05809184019779333,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -9.83317147461112,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.06293772298588521,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -10.23495924060611,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.0,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -6.950129879456208,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.37226642132201615,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -17.185557561696093,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.07958337709734599,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -10.95452256879853,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.4804709380580792,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -21.235842255074488,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.30127920993044177,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -19.270592455219408,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.6088021907132171,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -13.064870839541669,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.2678389804827571,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -17.668078942717656,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.3805131170035638,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -13.37141912540725,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 3.1056975113444,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -5.26610300548335,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.05301397630349127,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -11.1531556440315,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.1067938115062868,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -16.244023880897103,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.0,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -6.950129879456209,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 4.670981308263636,
      "theta": 52.90710824194982,
      "success": true,
      "log_likelihood": -37.061870758927654,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.3319546624440742,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -25.218446289976246,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.5522697989662401,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -18.36334844921106,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.0,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -6.9501298794562105,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.17898405757419664,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -15.40146156284241,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.24293238127429098,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -11.177864841711862,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.5268898693173978,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -14.116776674128857,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.21656766749564005,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -18.029301797189685,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.0,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -10.850129878148211,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.3113331678795197,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -17.458882613586223,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.0179086752140236,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -20.277106871415782,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.0,
      "theta": 2.735556352492955e-16,
      "success": true,
      "log_likelihood": -9.650129877974955,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.3058847315331231,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -17.108848569368565,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.29754882564768753,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -14.267378768841242,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.10463612739076544,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -16.248705187941617,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.40270684134078805,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -15.852522465621378,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.37188784962238947,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -25.152301019267565,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.0187629399611184,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -9.690650589453194,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.13679334811080945,
      "theta": 75.99547752256917,
      "success": true,
      "log_likelihood": -49.83346091210107,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.15778131501508624,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -17.167012214087656,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.0506383043941725,
      "theta": 96.48726807325485,
      "success": true,
      "log_likelihood": -46.980998964406965,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.2469533786516704,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -21.040487713708167,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.13289379876430268,
      "theta": 0.35665716908534534,
      "success": true,
      "log_likelihood": -23.612740312114987,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.4992049335245297,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -24.097560850153208,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.6921873076581848,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -6.326044913935946,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.5612975881718052,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -11.293728553784653,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.0,
      "theta": 6.182864170126444e-17,
      "success": true,
      "log_likelihood": -13.775129876771425,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 3.241394922823381,
      "theta": 69.15146976330747,
      "success": true,
      "log_likelihood": -37.43190076432399,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.021000091798809916,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -14.736636200428748,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.21131960339822678,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -20.747383880896287,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.47979102601035895,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -16.087849711595865,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 100.0,
      "theta": 0.35664079975896884,
      "success": true,
      "log_likelihood": -28.21374937285215,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.3376078540084369,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -22.862345829638247,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.3144379009622271,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -15.579747062161477,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.28840952614380594,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -17.389231246615587,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.0,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -10.400129878563996,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.05522868959158133,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -12.752011757619563,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.22902786013166831,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -18.2754474793756,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.0,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -12.05012987694544,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 100.0,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -0.39673809127534926,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.599271794943717,
      "theta": 93.87585600568784,
      "success": true,
      "log_likelihood": -42.01030534825239,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.3735929794505663,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -16.37682125982054,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.04701739053637519,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -15.556997621126358,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.19275351342474326,
      "theta": 4.723306474895193,
      "success": true,
      "log_likelihood": -26.67095846644603,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.26296063017812416,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -12.944989312339642,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.0,
      "theta": 2.446693199250955e-16,
      "success": true,
      "log_likelihood": -9.725129878614155,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 3.5619501918093026,
      "theta": 93.31994229697467,
      "success": true,
      "log_likelihood": -17.69203970400339,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.07673514570624133,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -25.742448599832752,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 100.0,
      "theta": 0.3567197345874299,
      "success": true,
      "log_likelihood": -28.213749372597118,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.22852997192993899,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -26.02361133322819,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.0,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -12.20012987731324,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 3.6170131190295685,
      "theta": 92.81791569398494,
      "success": true,
      "log_likelihood": -12.09590067009886,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.40020457042882873,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -13.110915047162013,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.10447593456266967,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -29.079586458066014,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 4.670992468151588,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -14.288761688744707,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.17764690940594433,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -17.86164269962391,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.083600995273786,
      "theta": 4.72380338995797,
      "success": true,
      "log_likelihood": -18.30674127328413,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.0,
      "theta": 6.532458938260228e-16,
      "success": true,
      "log_likelihood": -9.050129878931928,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.33760785860551845,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -16.86234583378895,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.08911525557418956,
      "theta": 0.0,
      "success": true,
      "log_likelihood": -22.195292233409898,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    }
  ],
  "parameter_recovery": {
    "correlations": {
      "gamma": {
        "r": 0.7454669426940942,
        "p": 5.814593359294752e-19
      },
      "theta": {
        "r": 0.5932763934501908,
        "p": 7.802474204917234e-11
      }
    }
  },
  "bic_results": {
    "average_bic": 40.22961830172509,
    "individual_bics": [
      63.594536622671455,
      44.872610860742164,
      30.591951437799885,
      36.844340143086264,
      26.48675104080781,
      32.14975573572143,
      21.06729763582464,
      30.594181303573293,
      21.067297635824644,
      34.35201902535728,
      22.529193254582417,
      36.48749058637434,
      26.993097003615084,
      21.067297635824637,
      21.067297635824637,
      21.067297635824637,
      21.067297635824637,
      26.83338082613446,
      27.636956358124436,
      21.067297635824637,
      41.538153000304405,
      29.07608301450928,
      49.63872238706119,
      45.70822278735103,
      33.296779555995556,
      42.50319576234753,
      33.90987612772672,
      17.69924388787892,
      29.473349164975218,
      39.655085638706424,
      21.067297635824637,
      81.29077939476753,
      57.60393045686471,
      43.89373477533434,
      21.06729763582464,
      37.96996100259704,
      29.522767560335943,
      35.40059122516993,
      43.22564147129159,
      28.867297633208644,
      42.08480310408466,
      47.72125161974378,
      26.467297632862127,
      41.38473501564935,
      35.701795414594706,
      39.66444825279545,
      38.87208280815498,
      57.47163991544735,
      26.54833905581861,
      106.83395970111435,
      41.50106230508753,
      101.12903580572615,
      49.24801330432855,
      54.39251850114219,
      55.362159577218634,
      19.819127704784112,
      29.754494984481525,
      34.71729763045507,
      82.0308394055602,
      36.640310277769714,
      48.66180563870479,
      39.34273730010395,
      63.594536622616516,
      52.89172953618871,
      38.32653200123517,
      41.94550037014339,
      27.967297634040214,
      32.671061392151344,
      43.71793283566342,
      31.2672976308031,
      7.960514059462918,
      91.187648573417,
      39.9206803965533,
      38.28103311916494,
      60.50895480980428,
      33.057016501591505,
      26.617297634140527,
      42.551117284918995,
      58.65193507657772,
      63.59453662210645,
      59.214260543368596,
      31.5672976315387,
      31.35883921710994,
      33.388867971236245,
      65.32621079304425,
      35.74456125440163,
      42.89032327616004,
      43.780520423480475,
      25.267297634776078,
      40.89172954449012,
      51.557622343732014
    ],
    "num_parameters": 2,
    "bic_formula": "BIC = -2 * log_likelihood + k * log(n)"
  }
}