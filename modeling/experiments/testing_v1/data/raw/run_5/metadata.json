{
  "task_description": "In the  experiment, each participant is given 36 different proposals to respond to. Each is designated by a trial number in the data set This gives 36 instances for the learnable parameters to be trained. There is also a pretask where the participant finds a number of tokens that correspond to their contribution to the group. This is designated by the variable \"token_self\". The other variable, \"token_opp\", is the number of tokens found the opponent's and represents the opoonents contribution to the shared pot that will be later divided by the opponent.\n\nNote that in each trial there is a variable amount of money in the combined earning, so that two equal split_self variables do not represent the same \"fairness\".\n\nBelow is the description of each variable in the dataset, which will be followed by information about the data type of the variable:\n\ntrial_type = how much was the contribution [1 = equal, 2 = opponent more, 3 = participant more]\ntrial_role = the role of the participant [1 = responder, 2 = proposer]\ntoken_opp = number of tokens found by the opponent\ntoken_self = number of tokens found by the participant\ncombined_earning = amount of money earned in total (note that each token found is \u00a33)\nsplit_opp = the proposed share of the opponent (in \u00a3)\nsplit_self = the proposed share for the participant (in \u00a3)\nsplitperc_opp = same but in %\nsplit_perc_self = same but in %\naccept = whether the participant responded accept (1) or reject (0)\naccepted_amount = if accepted, what is the amount gain (in \u00a3)\naccepted_perc = same as above but in %\nproposed_perc = when participant is the proposer, what is the % proposed to the opponent\n\nDataset:\n\nDataset Structure:\nVariables available:\n- ID (int64)\n- group (object)\n- trial_number (int64)\n- trial_type (int64)\n- trial_role (int64)\n- token_opp (int64)\n- token_self (int64)\n- combined_earning (int64)\n- split_opp (float64)\n- split_self (float64)\n- splitperc_opp (int64)\n- splitperc_self (int64)\n- accept (float64)\n- accepted_amount (float64)\n- accepted_perc (float64)\n- proposed_perc (float64)\n- proposed_amount (float64)\n\nNumber of observations: 3276\n\nDataset:\n\nDataset Structure:\nVariables available:\n- ID (int64)\n- group (object)\n- trial_number (int64)\n- trial_type (int64)\n- trial_role (int64)\n- token_opp (int64)\n- token_self (int64)\n- combined_earning (int64)\n- split_opp (float64)\n- split_self (float64)\n- splitperc_opp (int64)\n- splitperc_self (int64)\n- accept (float64)\n- accepted_amount (float64)\n- accepted_perc (float64)\n- proposed_perc (float64)\n- proposed_amount (float64)\n\nNumber of observations: 3276",
  "output_description": "Design a computational model for the given task. The model should obtain the utility, (not the probability of choosing an action).  Your goal is to eventually explore the entire space of possible explainations and mechanisms by which the observed behavior arises.\n\nYour model should use the given variables appropriately, but does not necessary need to use all or even most of the variables. Do not include the model for the utility of rejecting an offer. \n\nThe model should:\n1. Predict only responder behavior.\n2. Build on relevant psychological principles.\n3. Be considerate of high covariance between learnable parameters as the model\nwill have to pass parameter recovery tests.\n4. Be applicable to the dataset given within the task description (i.e. the model should be able to be run using only the provided dataset structure).\n5. Not include parameters to simulate general stochasticity of behavior, because this will be handled later by a temperature parameter.\n6. Should have no more than two learnable parameters.\n7. This specific model should calculate the utility of an action, which will then be used to determine\nthe probability of choosing that action. Negative values should represent a negative utility, and thus an unlikly action.\n\nFor any learnable parameters in your model, you must specify finite numerical bounds (it just can not be infinity) in the variable descriptions. However, this bound should be generous. The utility variable may be unbounded (-inf to inf).\n\nFirst, reason step by step about:\n* The key psychological mechanisms involved\n* How these mechanisms interact\n* What mathematical form could capture these interactions\n* What parameters would be needed to calibrate the model\n* How the model variables map to observable behavior\n\nThen, provide your formal mathematical model between <MODEL> tags, followed by variable descriptions between <VARIABLES> tags. Use clear mathematical notation and ensure each variable is fully described. Every variable must be utilized within the mathematical formula provided between <MODEL> and </MODEL>. For variable descriptions, provide them in a JSON format with the following structure: <VARIABLES> Bounds are by default inclusive. Please spell out the greek variable names instead of using the symbols. Finally, you should provide a short description of the model in the summary tags <SUMMARY> </SUMMARY>. This will be used to compare different computational models of the task; it should be concise and purely descriptive. Do not include generic information about the name of the tasks, since that is implied. \n\n{\n  \"variables\": {\n    \"variable_name\": {\n      \"description\": \"Clear description\",\n      \"range\": {\n        \"min\": value,\n        \"max\": value,\n        \"inclusive_min\": boolean,\n        \"inclusive_max\": boolean\n      },\n      \"distribution\": {\n        \"type\": \"distribution type\",\n        \"parameters\": {}\n      },\n      \"learnable\": boolean,\n      \"source\": \"learnable/data/calculated\"\n    }\n  }\n}\n</VARIABLES>\n\nExample #1: \n<EXAMPLE>\n(Model of a Random Choice Task):\nLet me think through this step by step...\n[your reasoning here]\n\n<MODEL>\nU_i = \u03b2 + \u03b5E + \u03b7N\n</MODEL>\n\n<VARIABLES>\n{\n  \"variables\": {\n    \"U_i\": {\n      \"description\": \"Utility of choosing action i\",\n      \"range\": {\n        \"min\": \"-inf\",\n        \"max\": \"inf\"\n      },\n      \"learnable\": false,\n      \"source\": \"calculated\"\n    },\n    \"beta\": {\n      \"description\": \"Base tendency parameter (inherent preference)\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": 1\n      },\n      \"learnable\": true,\n      \"source\": \"learnable\"\n    },\n    \"epsilon\": {\n      \"description\": \"Environmental sensitivity parameter\",\n      \"range\": {\n        \"min\": \"-inf\",\n        \"max\": \"inf\"\n      },\n      \"learnable\": true,\n      \"source\": \"learnable\"\n    },\n    \"E\": {\n      \"description\": \"Environmental cue value\",\n      \"range\": {\n        \"min\": \"-inf\",\n        \"max\": \"inf\"\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"eta\": {\n      \"description\": \"Noise parameter\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": 1,\n        \"exclusive_max\": true\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"N\": {\n      \"description\": \"Random noise drawn from normal distribution N(0,1)\",\n      \"distribution\": {\n        \"type\": \"normal\",\n        \"mean\": 0,\n        \"std\": 1\n      },\n      \"learnable\": false,\n      \"source\": \"calculated\"\n    }\n  }\n}\n</VARIABLES>\n<SUMMARY>\nA linear utility model combining base preference, environmental influence, and stochastic noise. The model uses two learnable parameters: a base tendency parameter (\u03b2) constrained to [0,1] and an unconstrained environmental sensitivity parameter (\u03b5). Environmental cues and normally distributed noise modify the base utility, allowing for both systematic and random variation in choice behavior.\n</SUMMARY>\n</EXAMPLE>\n\nPlease be sure to provide the mathematical formula for the model between <MODEL> and </MODEL>, and the variable descriptions between <VARIABLES> and </VARIABLES>. No description of the model should be provided within the <MODEL> tags.\n\nThe parameter names you choose in your <VARIABLES> section will be used exactly as specified in subsequent code generation. Please choose clear, non-reserved parameter names that can be used directly in Python code. For example, avoid Python reserved words like 'lambda' and use alternatives like 'learning_rate' or 'lambda_param'.\n\nYou will be given the complete list of models that you have already created. Analyze the models, and notice the absence of possible explanations of behaviors that should be tested. You should start with simple obvious explanations, and as you notice these being thoroughly explored you should shift to fundamentally different models of behavior. Pay less attention to the names of the variables, and how they are actually interacting with the given behavioral data.\n\nYour results will be scored on a combination of BIC with a penalization for number of learned parameters, the ability to recover those learned parameters, and the ability of those parameters to account for the differences in behaviors among varying groups of people.\n\nPrevious Models:\nModel 1:\nSpecification: U_accept = split_self - alpha * max( (token_self/(token_self+token_opp))*combined_earning - split_self , 0 ) - beta * max( split_self - (token_self/(token_self+token_opp))*combined_earning , 0 )\nSummary: The model computes the utility of accepting an offer by comparing the offered monetary share (split_self) to a fairness reference derived from the participant\u2019s token allocation (token_self) relative to total tokens (token_self + token_opp) and the combined earning. Two learnable parameters (alpha and beta) penalize deviations from this fairness reference, reflecting sensitivity to disadvantageous and advantageous inequity respectively.\nModel 2:\nSpecification: U_accept = split_self - gamma * [max( fairness_reference - split_self, 0 )]^2 - theta * [max( split_self - fairness_reference, 0 )]^2\n\nwhere fairness_reference = (token_self / (token_self + token_opp)) * combined_earning\nSummary: A quadratic inequity aversion model for responders. The utility of accepting an offer is computed as the offered monetary value minus a squared penalty based on deviation from a fairness reference derived from token allocation. Two learnable parameters govern the sensitivity to disadvantageous (gamma) and advantageous (theta) inequity.\nModel 3:\nSpecification: U_accept = split_self + lambda_param * exp(- tau_param * abs(split_self - ((token_self/(token_self+token_opp))*combined_earning)))\nSummary: A utility model for responder behavior that combines the offered monetary share (split_self) with an additional fairness bonus. The bonus is maximal when the offer equals the fairness reference (computed from token_self, token_opp, and combined_earning) and decays exponentially with the absolute deviation from fairness. The model includes two learnable parameters: lambda_param, scaling the bonus magnitude, and tau_param, governing the decay rate.\nModel 4:\nSpecification: U_accept = ln(1 + split_self) \n           - kappa * max( ln(1 + (token_self/(token_self+token_opp))*combined_earning) - ln(1 + split_self), 0 )\n           - mu    * max( ln(1 + split_self) - ln(1 + (token_self/(token_self+token_opp))*combined_earning), 0 )\nSummary: This model computes the utility of accepting an offer by first applying a logarithmic transformation to the offered monetary amount to capture diminishing sensitivity. A fairness reference is derived from the participant\u2019s token ratio and combined earnings. Two learnable parameters (kappa and mu) penalize deviations from this fairness reference, with separate weights for disadvantageous and advantageous inequity, respectively.",
  "dataset_info": "\nDataset Structure:\nVariables available:\n- ID (int64)\n- group (object)\n- trial_number (int64)\n- trial_type (int64)\n- trial_role (int64)\n- token_opp (int64)\n- token_self (int64)\n- combined_earning (int64)\n- split_opp (float64)\n- split_self (float64)\n- splitperc_opp (int64)\n- splitperc_self (int64)\n- accept (float64)\n- accepted_amount (float64)\n- accepted_perc (float64)\n- proposed_perc (float64)\n- proposed_amount (float64)\n\nNumber of observations: 3276",
  "learnable_parameters": {
    "alpha": {
      "description": "Fairness sensitivity parameter that scales the penalty for deviations from the fairness reference.",
      "range": {
        "min": 0,
        "max": 10,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": null,
      "learnable": true,
      "source": "learnable"
    },
    "delta": {
      "description": "Curvature parameter that modulates the non-linear sensitivity to the absolute deviation from fairness.",
      "range": {
        "min": 0.1,
        "max": 3,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": null,
      "learnable": true,
      "source": "learnable"
    }
  },
  "model_specification": "U_accept = split_self - alpha * | split_self - (token_self/(token_self + token_opp))*combined_earning |^delta",
  "variable_descriptions": {
    "U_accept": {
      "description": "Utility of accepting the offer; a higher value indicates a more attractive option.",
      "range": {
        "min": "-inf",
        "max": "inf",
        "inclusive_min": false,
        "inclusive_max": false
      },
      "distribution": null,
      "learnable": false,
      "source": "calculated"
    },
    "split_self": {
      "description": "Monetary share allocated to the participant in the offer (in \u00a3).",
      "range": {
        "min": 0,
        "max": 500,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": null,
      "learnable": false,
      "source": "data"
    },
    "token_self": {
      "description": "Number of tokens found by the participant, reflecting their contribution.",
      "range": {
        "min": 0,
        "max": 100,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": null,
      "learnable": false,
      "source": "data"
    },
    "token_opp": {
      "description": "Number of tokens found by the opponent.",
      "range": {
        "min": 0,
        "max": 100,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": null,
      "learnable": false,
      "source": "data"
    },
    "combined_earning": {
      "description": "Total monetary earnings available for sharing, with each token worth \u00a33.",
      "range": {
        "min": 0,
        "max": 1000,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": null,
      "learnable": false,
      "source": "data"
    },
    "alpha": {
      "description": "Fairness sensitivity parameter that scales the penalty for deviations from the fairness reference.",
      "range": {
        "min": 0,
        "max": 10,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": null,
      "learnable": true,
      "source": "learnable"
    },
    "delta": {
      "description": "Curvature parameter that modulates the non-linear sensitivity to the absolute deviation from fairness.",
      "range": {
        "min": 0.1,
        "max": 3,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": null,
      "learnable": true,
      "source": "learnable"
    }
  },
  "model_summary": "A utility model for responders that calculates the attractiveness of accepting an offer by subtracting a non-linear penalty from the monetary share offered (split_self). The penalty is determined by the absolute deviation between the offer and a fairness reference derived from the participant\u2019s token share relative to the total and the combined earnings. Two learnable parameters, alpha and delta, control the sensitivity and curvature of the penalty, respectively.",
  "full_reasoning": "Step-by-step reasoning:\n\n1. Key psychological mechanisms:  \n\u2003\u2022 Participants compare the monetary share they are offered (split_self) against a fairness reference determined by their contribution rather than absolute amounts.  \n\u2003\u2022 The fairness reference is computed from the proportion of tokens that the participant obtained (token_self) relative to the total tokens (token_self + token_opp), scaled by the combined earning.  \n\u2003\u2022 Participants are assumed to be \"punished\" for deviations from this fairness reference. The further the offer is from what is \u201cfair,\u201d the lower the subjective utility.\n\n2. Interactions of these mechanisms:  \n\u2003\u2022 When the offer equals the fairness expectation, no penalty is incurred.  \n\u2003\u2022 As the offer deviates (either below or above) from the fairness reference, a penalty is applied.  \n\u2003\u2022 The sensitivity to this deviation is nonlinear: small deviations may incur a moderate penalty, but large deviations may be discounted or over\u2010penalized, depending on the curvature.\n\n3. Mathematical form:  \n\u2003\u2022 We use the absolute deviation between the offer (split_self) and the fairness reference computed as (token_self/(token_self+token_opp))*combined_earning.  \n\u2003\u2022 The deviation is raised to a power delta (to capture nonlinear sensitivity).  \n\u2003\u2022 A scaling parameter alpha then modulates the overall penalty.\n\n4. Required parameters:  \n\u2003\u2022 alpha: controls the sensitivity (penalty weight) to deviations from fairness.  \n\u2003\u2022 delta: governs the curvature (nonlinearity) of the sensitivity to deviations.  \n\n5. Mapping to observed behavior:  \n\u2003\u2022 The observed monetary split (split_self) and fair share (derived via token_self, token_opp, combined_earning) enter directly into the model.  \n\u2003\u2022 The calculated utility U_accept will be higher when the offer is close to the fairness reference and lower when the deviation is large.  \n\u2003\u2022 Only the utility for accepting an offer is modeled, which can later be converted to choice probabilities using a separate temperature parameter.\n\nBelow is the formal specification:\n\n<MODEL>\nU_accept = split_self - alpha * | split_self - (token_self/(token_self + token_opp))*combined_earning |^delta\n</MODEL>\n\n<VARIABLES>\n{\n  \"variables\": {\n    \"U_accept\": {\n      \"description\": \"Utility of accepting the offer; a higher value indicates a more attractive option.\",\n      \"range\": {\n        \"min\": \"-inf\",\n        \"max\": \"inf\",\n        \"inclusive_min\": false,\n        \"inclusive_max\": false\n      },\n      \"learnable\": false,\n      \"source\": \"calculated\"\n    },\n    \"split_self\": {\n      \"description\": \"Monetary share allocated to the participant in the offer (in \u00a3).\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": 500,\n        \"inclusive_min\": true,\n        \"inclusive_max\": true\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"token_self\": {\n      \"description\": \"Number of tokens found by the participant, reflecting their contribution.\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": 100,\n        \"inclusive_min\": true,\n        \"inclusive_max\": true\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"token_opp\": {\n      \"description\": \"Number of tokens found by the opponent.\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": 100,\n        \"inclusive_min\": true,\n        \"inclusive_max\": true\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"combined_earning\": {\n      \"description\": \"Total monetary earnings available for sharing, with each token worth \u00a33.\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": 1000,\n        \"inclusive_min\": true,\n        \"inclusive_max\": true\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"alpha\": {\n      \"description\": \"Fairness sensitivity parameter that scales the penalty for deviations from the fairness reference.\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": 10,\n        \"inclusive_min\": true,\n        \"inclusive_max\": true\n      },\n      \"learnable\": true,\n      \"source\": \"learnable\"\n    },\n    \"delta\": {\n      \"description\": \"Curvature parameter that modulates the non-linear sensitivity to the absolute deviation from fairness.\",\n      \"range\": {\n        \"min\": 0.1,\n        \"max\": 3,\n        \"inclusive_min\": true,\n        \"inclusive_max\": true\n      },\n      \"learnable\": true,\n      \"source\": \"learnable\"\n    }\n  }\n}\n</VARIABLES>\n\n<SUMMARY>\nA utility model for responders that calculates the attractiveness of accepting an offer by subtracting a non-linear penalty from the monetary share offered (split_self). The penalty is determined by the absolute deviation between the offer and a fairness reference derived from the participant\u2019s token share relative to the total and the combined earnings. Two learnable parameters, alpha and delta, control the sensitivity and curvature of the penalty, respectively.\n</SUMMARY>",
  "simulation_code": "def simulate_model(trial_data, alpha=1, delta=1):\n    utility_values = []\n    \n    for trial in trial_data:\n        split_self = trial.get(\"split_self\", 0)\n        token_self = trial.get(\"token_self\", 0)\n        token_opp = trial.get(\"token_opp\", 0)\n        combined_earning = trial.get(\"combined_earning\", 0)\n\n        # Compute fairness reference\n        if (token_self + token_opp) > 0:\n            fairness_reference = (token_self / (token_self + token_opp)) * combined_earning\n        else:\n            fairness_reference = 0  # To handle the case where both token_self and token_opp are 0\n        \n        # Calculate utility\n        deviation = abs(split_self - fairness_reference)\n        penalty = alpha * (deviation ** delta)\n        U_accept = split_self - penalty\n        \n        utility_values.append(U_accept)\n\n    return utility_values",
  "fitting_results": [
    {
      "alpha": 8.5188468595239,
      "delta": 0.1507442009193531,
      "success": true,
      "log_likelihood": -9.73688442594023,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 1.7810906270598603,
      "delta": 0.8746975209037102,
      "success": true,
      "log_likelihood": -16.58709569473285,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.5062935774483698,
      "delta": 1.978791396924128,
      "success": true,
      "log_likelihood": -11.793853617597172,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 1.7545321921994192,
      "delta": 1.0495922397862398,
      "success": true,
      "log_likelihood": -14.382041226786553,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.49871646381248946,
      "delta": 2.447158944704455,
      "success": true,
      "log_likelihood": -9.72715662480257,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.07961343043067523,
      "delta": 3.0,
      "success": true,
      "log_likelihood": -12.263422565558294,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.0,
      "delta": 0.1,
      "success": true,
      "log_likelihood": -6.9501298794562105,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.08441753734653493,
      "delta": 3.0,
      "success": true,
      "log_likelihood": -10.852382090221786,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.0,
      "delta": 0.1,
      "success": true,
      "log_likelihood": -6.950129879456211,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 2.184372120592233,
      "delta": 1.064704333082546,
      "success": true,
      "log_likelihood": -12.173873922111081,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.2987734917961687,
      "delta": 2.8672894081260525,
      "success": true,
      "log_likelihood": -7.640567303279391,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 7.154613284398121,
      "delta": 0.3117699246692726,
      "success": true,
      "log_likelihood": -10.754474207253029,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 1.109998044792797,
      "delta": 1.7383110566111801,
      "success": true,
      "log_likelihood": -10.01607262971572,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.0,
      "delta": 0.1,
      "success": true,
      "log_likelihood": -6.950129879456208,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.0,
      "delta": 0.1,
      "success": true,
      "log_likelihood": -6.950129879456209,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.0,
      "delta": 0.1,
      "success": true,
      "log_likelihood": -6.95012987945621,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.0,
      "delta": 0.1,
      "success": true,
      "log_likelihood": -6.950129879456209,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.0,
      "delta": 0.1,
      "success": true,
      "log_likelihood": -10.550129878667317,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.0,
      "delta": 0.1,
      "success": true,
      "log_likelihood": -11.075129878322363,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.0,
      "delta": 0.1,
      "success": true,
      "log_likelihood": -6.950129879456208,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 1.162059480237438,
      "delta": 1.177854724411017,
      "success": true,
      "log_likelihood": -15.772950715580954,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.0,
      "delta": 0.1,
      "success": true,
      "log_likelihood": -12.275129878003387,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 4.211659098831316,
      "delta": 0.22937542922836493,
      "success": true,
      "log_likelihood": -17.24481404580496,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 1.6101413065588182,
      "delta": 0.8257200804623281,
      "success": true,
      "log_likelihood": -17.23817677997025,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.5898278637266395,
      "delta": 2.020751624072109,
      "success": true,
      "log_likelihood": -13.17002912989523,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 1.261097203854298,
      "delta": 0.9520112264101976,
      "success": true,
      "log_likelihood": -15.824083610166587,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.4612982183905073,
      "delta": 1.8504055164418052,
      "success": true,
      "log_likelihood": -13.42491567449796,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 2.625174681243852,
      "delta": 1.8552524082560389,
      "success": true,
      "log_likelihood": -6.437117200204605,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.0,
      "delta": 0.1,
      "success": true,
      "log_likelihood": -11.750129878204175,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.23838443954698574,
      "delta": 1.5134021247993008,
      "success": true,
      "log_likelihood": -16.158861266079064,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.0,
      "delta": 0.1,
      "success": true,
      "log_likelihood": -6.950129879456209,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 8.518847179432221,
      "delta": 0.15074231134191426,
      "success": true,
      "log_likelihood": -9.73688442599615,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 3.1433715216640796,
      "delta": 0.3561935668975819,
      "success": true,
      "log_likelihood": -21.06328389337848,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 2.842417276395199,
      "delta": 0.6838854022953581,
      "success": true,
      "log_likelihood": -15.419136010666328,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.0,
      "delta": 0.1,
      "success": true,
      "log_likelihood": -6.9501298794562105,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.9847891687243548,
      "delta": 0.8602247000984038,
      "success": true,
      "log_likelihood": -15.018129337702089,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.05920192638345104,
      "delta": 3.0,
      "success": true,
      "log_likelihood": -10.860453997298585,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.6193017687233252,
      "delta": 1.8645079934310973,
      "success": true,
      "log_likelihood": -14.196976573963218,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.5309625112939507,
      "delta": 1.3984310553614907,
      "success": true,
      "log_likelihood": -17.74700880031447,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.0,
      "delta": 0.1,
      "success": true,
      "log_likelihood": -10.850129878148211,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.4552238956325105,
      "delta": 1.7209171387834832,
      "success": true,
      "log_likelihood": -17.46467592876801,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 5.271467742165453,
      "delta": 0.4493115591561353,
      "success": true,
      "log_likelihood": -12.386021993895628,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.0,
      "delta": 0.1,
      "success": true,
      "log_likelihood": -9.650129877974955,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 1.1442824381140995,
      "delta": 1.0409742486207503,
      "success": true,
      "log_likelihood": -16.670101628011974,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.07460321785820266,
      "delta": 3.0,
      "success": true,
      "log_likelihood": -14.239585657071842,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.2971108456753209,
      "delta": 1.3553074574081938,
      "success": true,
      "log_likelihood": -16.20498574279057,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.8931131650015828,
      "delta": 1.3883290265691948,
      "success": true,
      "log_likelihood": -15.690068105704432,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 3.5650656833155883,
      "delta": 0.3806787193631044,
      "success": true,
      "log_likelihood": -17.703247570549397,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.40024874753233175,
      "delta": 3.0,
      "success": true,
      "log_likelihood": -9.408766325721544,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 3.0744325965504125,
      "delta": 0.1,
      "success": true,
      "log_likelihood": -22.572464468915413,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.03361696721043001,
      "delta": 3.0,
      "success": true,
      "log_likelihood": -17.05122273907883,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 6.9733441157096685,
      "delta": 0.16667070552047794,
      "success": true,
      "log_likelihood": -14.176901283008181,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 1.7727662272084965,
      "delta": 0.6518900707871229,
      "success": true,
      "log_likelihood": -18.985772068568362,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 2.5884638691717403,
      "delta": 0.1,
      "success": true,
      "log_likelihood": -20.204599696414913,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 3.054127126590061,
      "delta": 0.5826027256451306,
      "success": true,
      "log_likelihood": -20.302277821696162,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.906715782980269,
      "delta": 2.887327515851029,
      "success": true,
      "log_likelihood": -6.6749066923530505,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 2.8575000964277657,
      "delta": 1.1364415925357685,
      "success": true,
      "log_likelihood": -11.28069202299962,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.0,
      "delta": 0.4590434798394221,
      "success": true,
      "log_likelihood": -13.775129876771425,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 7.377057084096968,
      "delta": 0.2290148327689104,
      "success": true,
      "log_likelihood": -11.434050687653464,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.2899201258098544,
      "delta": 0.7481379590873172,
      "success": true,
      "log_likelihood": -14.515951662314134,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 1.035044335320844,
      "delta": 0.9344932465025401,
      "success": true,
      "log_likelihood": -19.94174381155139,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 1.3011158389797957,
      "delta": 1.225081457942283,
      "success": true,
      "log_likelihood": -15.194005620107975,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 8.518696279064407,
      "delta": 0.15076042199001724,
      "success": true,
      "log_likelihood": -9.736884429829958,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 2.632723686076876,
      "delta": 0.4547846376617535,
      "success": true,
      "log_likelihood": -21.10926939809637,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 5.01009125652868,
      "delta": 0.5009616866296346,
      "success": true,
      "log_likelihood": -11.329265490026296,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 1.4589540004801795,
      "delta": 0.8784960815943673,
      "success": true,
      "log_likelihood": -15.462639333686411,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.0,
      "delta": 0.1,
      "success": true,
      "log_likelihood": -10.400129878563996,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.0,
      "delta": 0.1,
      "success": true,
      "log_likelihood": -13.400129877080907,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 1.9189691159207272,
      "delta": 0.5497787179218149,
      "success": true,
      "log_likelihood": -16.24283771407348,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.0,
      "delta": 0.1,
      "success": true,
      "log_likelihood": -12.05012987694544,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 8.06426307847334,
      "delta": 0.3499794434477624,
      "success": true,
      "log_likelihood": -6.262682731225304,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 6.967685560660338,
      "delta": 0.16527847024676692,
      "success": true,
      "log_likelihood": -13.88242491103364,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.9449064385417228,
      "delta": 1.3019134139227213,
      "success": true,
      "log_likelihood": -16.066261565770056,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.32364791126157955,
      "delta": 0.9541088146863203,
      "success": true,
      "log_likelihood": -15.28676688506112,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 2.70063580624174,
      "delta": 0.3794269485957923,
      "success": true,
      "log_likelihood": -21.8020811424165,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.09470974924631342,
      "delta": 2.748234172642969,
      "success": true,
      "log_likelihood": -12.210170362670777,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.0,
      "delta": 0.1,
      "success": true,
      "log_likelihood": -9.725129878614155,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 10.0,
      "delta": 0.1,
      "success": true,
      "log_likelihood": -8.873191908638605,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 2.3627412299680755,
      "delta": 0.1,
      "success": true,
      "log_likelihood": -21.496460192892226,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 8.518807977938742,
      "delta": 0.15074853430351384,
      "success": true,
      "log_likelihood": -9.736884426202005,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 2.8068919902135416,
      "delta": 0.2228046581722982,
      "success": true,
      "log_likelihood": -23.46071329567336,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.0,
      "delta": 0.1,
      "success": true,
      "log_likelihood": -12.20012987731324,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 6.892279548902696,
      "delta": 0.5013154019521888,
      "success": true,
      "log_likelihood": -10.539785100565904,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.7689280301630452,
      "delta": 1.4950315624007446,
      "success": true,
      "log_likelihood": -13.106724662089608,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 2.075736730816359,
      "delta": 0.26940266392684903,
      "success": true,
      "log_likelihood": -25.389398960777655,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 7.096810210554052,
      "delta": 0.3423125339480318,
      "success": true,
      "log_likelihood": -11.35126598553994,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.25516524315508293,
      "delta": 1.7593209203889364,
      "success": true,
      "log_likelihood": -17.874579670056782,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 4.48279170909545,
      "delta": 0.6984189718759433,
      "success": true,
      "log_likelihood": -13.087559405612431,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.0,
      "delta": 0.5932299251064193,
      "success": true,
      "log_likelihood": -9.050129878931928,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 2.632671922473733,
      "delta": 0.45480130724127504,
      "success": true,
      "log_likelihood": -15.109269399959258,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "alpha": 0.9898723600365483,
      "delta": 0.5837987075347698,
      "success": true,
      "log_likelihood": -21.180770037632936,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    }
  ],
  "parameter_recovery": {
    "correlations": {
      "alpha": {
        "r": 0.8581735838891374,
        "p": 3.903285992617822e-30
      },
      "delta": {
        "r": 0.6135866296786503,
        "p": 1.1423474641167222e-11
      }
    }
  },
  "bic_results": {
    "average_bic": 33.919640769986295,
    "individual_bics": [
      26.640806728792683,
      40.341229266377916,
      30.754745112106562,
      35.93112033048533,
      26.62135112651736,
      31.693883008028806,
      21.06729763582464,
      28.871802057355794,
      21.067297635824644,
      31.51478572113438,
      22.448172483471,
      28.675986291418276,
      27.199183136343663,
      21.067297635824637,
      21.067297635824637,
      21.067297635824637,
      21.067297635824637,
      28.26729763424685,
      29.317297633556947,
      21.067297635824637,
      38.71293930807413,
      31.717297632918992,
      41.65666596852214,
      41.64339143685272,
      33.50709613670268,
      38.815205097245396,
      34.01686922590814,
      20.04127227732143,
      30.667297633320572,
      39.48476040907035,
      21.067297635824637,
      26.640806728904522,
      49.293605663669176,
      38.005309898244874,
      21.06729763582464,
      37.203296552316395,
      28.887945871509388,
      35.56099102483866,
      42.66105547754116,
      28.867297633208644,
      42.09638973444824,
      31.939081864703475,
      26.467297632862127,
      40.507241132936166,
      35.6462091910559,
      39.57700936249336,
      38.547174088321086,
      42.57353301801101,
      25.984570528355306,
      52.311966814743045,
      41.26948335506988,
      35.52084044292858,
      45.13858201404894,
      47.576237269742045,
      47.77159352030454,
      20.51685126161832,
      29.72842192291146,
      34.71729763045507,
      30.035139252219146,
      36.198941201540485,
      47.050525500015,
      37.55504911712817,
      26.640806736572138,
      49.38557667310496,
      29.825568856964814,
      38.09231654428504,
      27.967297634040214,
      33.96729763107403,
      39.65271330505918,
      31.2672976308031,
      19.692403339362826,
      34.9318876989795,
      39.29956100845233,
      37.74057164703446,
      50.77120016174522,
      31.58737860225377,
      26.617297634140527,
      24.91342169418943,
      50.15995826269667,
      26.640806729316232,
      54.08846446825894,
      31.5672976315387,
      28.246608078044027,
      33.380487201091434,
      57.94583579846753,
      29.869569847992096,
      42.91619721702578,
      33.34215668813708,
      25.267297634776078,
      37.38557667683074,
      49.52857795217809
    ],
    "num_parameters": 2,
    "bic_formula": "BIC = -2 * log_likelihood + k * log(n)"
  }
}