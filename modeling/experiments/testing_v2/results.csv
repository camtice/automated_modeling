run_number,average_bic,model_specification,model_summary,version,alpha_recovery,beta_recovery,w_recovery,gamma_recovery,kappa_recovery
3,30.552646387620232,"Let fairness_norm = combined_earning * (token_self / (token_self + token_opp))
U_accept = w * split_self - kappa * log(1 + exp(fairness_norm - split_self))","This model is a smooth fairness utility model for responder acceptance. The utility for accepting an offer is a combination of a weighted offered amount (self-interest) and a penalty that smoothly increases when the offer falls below a fairness norm, which is calculated as the proportional share based on token contributions. Two learnable parameters (w and kappa) govern the influence of self-interest and fairness sensitivity, respectively.",v2,,,0.8199620995837353,,0.8677696079110727
2,34.26389764185722,"Let N = combined_earning × (token_self / (token_self + token_opp)).

Define the penalty term P as:
 P = { gamma × (N – split_self) if split_self < N
    (1 – gamma) × (split_self – N) if split_self ≥ N }.

Then the utility for accepting an offer is given by:
 U_accept = w × split_self – P.","A dual–component, piecewise linear utility model for responders that integrates weighted self–interest with an asymmetrically applied fairness penalty. The fairness norm is computed as the proportional share from the combined earning based on token contributions. Two learnable parameters are used: w, the self–interest weight on the monetary offer, and gamma, which governs the strength of the penalty when the offer falls below the fairness norm relative to when it exceeds the norm.",v2,,,0.852166645607177,0.6248063588996795,
1,35.00456496022979,"U_accept = split_self - ( alpha * max( (combined_earning * (token_self/(token_self+token_opp))) - split_self, 0 ) + beta * max( split_self - (combined_earning * (token_self/(token_self+token_opp))), 0 ) )","A fairness-based utility model for responder decisions that compares the received monetary share to a fairness norm computed from the participant’s token contribution relative to total tokens. Deviations below the fair share incur a penalty weighted by alpha, and deviations above incur a penalty weighted by beta. This linear model uses two learnable parameters to capture inequity aversion.",v2,0.9063280794576508,0.7508431731513826,,,
