{
  "task_description": "In the  experiment, each participant is given 36 different proposals to respond to. Each is designated by a trial number in the data set This gives 36 instances for the learnable parameters to be trained. There is also a pretask where the participant finds a number of tokens that correspond to their contribution to the group. This is designated by the variable \"token_self\". The other variable, \"token_opp\", is the number of tokens found the opponent's and represents the opoonents contribution to the shared pot that will be later divided by the opponent.\n\nNote that in each trial there is a variable amount of money in the combined earning, so that two equal split_self variables do not represent the same \"fairness\".\n\nBelow is the description of each variable in the dataset, which will be followed by information about the data type of the variable:\n\ntrial_type = how much was the contribution [1 = equal, 2 = opponent more, 3 = participant more]\ntrial_role = the role of the participant [1 = responder, 2 = proposer]\ntoken_opp = number of tokens found by the opponent\ntoken_self = number of tokens found by the participant\ncombined_earning = amount of money earned in total (note that each token found is \u00a33)\nsplit_opp = the proposed share of the opponent (in \u00a3)\nsplit_self = the proposed share for the participant (in \u00a3)\nsplitperc_opp = same but in %\nsplit_perc_self = same but in %\naccept = whether the participant responded accept (1) or reject (0)\naccepted_amount = if accepted, what is the amount gain (in \u00a3)\naccepted_perc = same as above but in %\nproposed_perc = when participant is the proposer, what is the % proposed to the opponent\n\nDataset:\n\nDataset Structure:\nVariables available:\n- ID (int64)\n- group (object)\n- trial_number (int64)\n- trial_type (int64)\n- trial_role (int64)\n- token_opp (int64)\n- token_self (int64)\n- combined_earning (int64)\n- split_opp (float64)\n- split_self (float64)\n- splitperc_opp (int64)\n- splitperc_self (int64)\n- accept (float64)\n- accepted_amount (float64)\n- accepted_perc (float64)\n- proposed_perc (float64)\n- proposed_amount (float64)\n\nNumber of observations: 3276\n\nDataset:\n\nDataset Structure:\nVariables available:\n- ID (int64)\n- group (object)\n- trial_number (int64)\n- trial_type (int64)\n- trial_role (int64)\n- token_opp (int64)\n- token_self (int64)\n- combined_earning (int64)\n- split_opp (float64)\n- split_self (float64)\n- splitperc_opp (int64)\n- splitperc_self (int64)\n- accept (float64)\n- accepted_amount (float64)\n- accepted_perc (float64)\n- proposed_perc (float64)\n- proposed_amount (float64)\n\nNumber of observations: 3276",
  "output_description": "Design a computational model for the given task. The model should obtain the utility, (not the probability of choosing an action).  Your goal is to eventually explore the entire space of possible explainations and mechanisms by which the observed behavior arises.\n\nYour model should use the given variables appropriately, but does not necessary need to use all or even most of the variables. Do not include the model for the utility of rejecting an offer. \n\nThe model should:\n1. Predict only responder behavior.\n2. Build on relevant psychological principles.\n3. Be considerate of high covariance between learnable parameters as the model\nwill have to pass parameter recovery tests.\n4. Be applicable to the dataset given within the task description (i.e. the model should be able to be run using only the provided dataset structure).\n5. Not include parameters to simulate general stochasticity of behavior, because this will be handled later by a temperature parameter.\n6. Should have no more than two learnable parameters.\n7. This specific model should calculate the utility of an action, which will then be used to determine\nthe probability of choosing that action. Negative values should represent a negative utility, and thus an unlikly action.\n\nFor any learnable parameters in your model, you must specify finite numerical bounds (it just can not be infinity) in the variable descriptions. However, this bound should be generous. The utility variable may be unbounded (-inf to inf).\n\nFirst, reason step by step about:\n* The key psychological mechanisms involved\n* How these mechanisms interact\n* What mathematical form could capture these interactions\n* What parameters would be needed to calibrate the model\n* How the model variables map to observable behavior\n\nThen, provide your formal mathematical model between <MODEL> tags, followed by variable descriptions between <VARIABLES> tags. Use clear mathematical notation and ensure each variable is fully described. Every variable must be utilized within the mathematical formula provided between <MODEL> and </MODEL>. For variable descriptions, provide them in a JSON format with the following structure: <VARIABLES> Bounds are by default inclusive. Please spell out the greek variable names instead of using the symbols. Finally, you should provide a short description of the model in the summary tags <SUMMARY> </SUMMARY>. This will be used to compare different computational models of the task; it should be concise and purely descriptive. Do not include generic information about the name of the tasks, since that is implied. \n\n{\n  \"variables\": {\n    \"variable_name\": {\n      \"description\": \"Clear description\",\n      \"range\": {\n        \"min\": value,\n        \"max\": value,\n        \"inclusive_min\": boolean,\n        \"inclusive_max\": boolean\n      },\n      \"distribution\": {\n        \"type\": \"distribution type\",\n        \"parameters\": {}\n      },\n      \"learnable\": boolean,\n      \"source\": \"learnable/data/calculated\"\n    }\n  }\n}\n</VARIABLES>\n\nExample #1: \n<EXAMPLE>\n(Model of a Random Choice Task):\nLet me think through this step by step...\n[your reasoning here]\n\n<MODEL>\nU_i = \u03b2 + \u03b5E + \u03b7N\n</MODEL>\n\n<VARIABLES>\n{\n  \"variables\": {\n    \"U_i\": {\n      \"description\": \"Utility of choosing action i\",\n      \"range\": {\n        \"min\": \"-inf\",\n        \"max\": \"inf\"\n      },\n      \"learnable\": false,\n      \"source\": \"calculated\"\n    },\n    \"beta\": {\n      \"description\": \"Base tendency parameter (inherent preference)\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": 1\n      },\n      \"learnable\": true,\n      \"source\": \"learnable\"\n    },\n    \"epsilon\": {\n      \"description\": \"Environmental sensitivity parameter\",\n      \"range\": {\n        \"min\": \"-inf\",\n        \"max\": \"inf\"\n      },\n      \"learnable\": true,\n      \"source\": \"learnable\"\n    },\n    \"E\": {\n      \"description\": \"Environmental cue value\",\n      \"range\": {\n        \"min\": \"-inf\",\n        \"max\": \"inf\"\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"eta\": {\n      \"description\": \"Noise parameter\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": 1,\n        \"exclusive_max\": true\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"N\": {\n      \"description\": \"Random noise drawn from normal distribution N(0,1)\",\n      \"distribution\": {\n        \"type\": \"normal\",\n        \"mean\": 0,\n        \"std\": 1\n      },\n      \"learnable\": false,\n      \"source\": \"calculated\"\n    }\n  }\n}\n</VARIABLES>\n<SUMMARY>\nA linear utility model combining base preference, environmental influence, and stochastic noise. The model uses two learnable parameters: a base tendency parameter (\u03b2) constrained to [0,1] and an unconstrained environmental sensitivity parameter (\u03b5). Environmental cues and normally distributed noise modify the base utility, allowing for both systematic and random variation in choice behavior.\n</SUMMARY>\n</EXAMPLE>\n\nPlease be sure to provide the mathematical formula for the model between <MODEL> and </MODEL>, and the variable descriptions between <VARIABLES> and </VARIABLES>. No description of the model should be provided within the <MODEL> tags.\n\nThe parameter names you choose in your <VARIABLES> section will be used exactly as specified in subsequent code generation. Please choose clear, non-reserved parameter names that can be used directly in Python code. For example, avoid Python reserved words like 'lambda' and use alternatives like 'learning_rate' or 'lambda_param'.",
  "dataset_info": "\nDataset Structure:\nVariables available:\n- ID (int64)\n- group (object)\n- trial_number (int64)\n- trial_type (int64)\n- trial_role (int64)\n- token_opp (int64)\n- token_self (int64)\n- combined_earning (int64)\n- split_opp (float64)\n- split_self (float64)\n- splitperc_opp (int64)\n- splitperc_self (int64)\n- accept (float64)\n- accepted_amount (float64)\n- accepted_perc (float64)\n- proposed_perc (float64)\n- proposed_amount (float64)\n\nNumber of observations: 3276",
  "learnable_parameters": {
    "gamma": {
      "description": "Reward sensitivity parameter, scaling how much the monetary value of the proposer\u2019s split adds to utility.",
      "range": {
        "min": 0,
        "max": 10,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": {
        "type": "uniform",
        "parameters": {
          "min": 0,
          "max": 10
        }
      },
      "learnable": true,
      "source": "learnable"
    },
    "alpha": {
      "description": "Inequity aversion parameter, scaling the penalty for receiving less than a proportionate fair share.",
      "range": {
        "min": 0,
        "max": 10,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": {
        "type": "uniform",
        "parameters": {
          "min": 0,
          "max": 10
        }
      },
      "learnable": true,
      "source": "learnable"
    }
  },
  "model_specification": "U_i = gamma * split_self - alpha * max( (combined_earning * (token_self / (token_self + token_opp))) - split_self , 0 )",
  "variable_descriptions": {
    "U_i": {
      "description": "Utility of accepting the offer, combining monetary gain and fairness penalty. Negative values indicate low utility of acceptance.",
      "range": {
        "min": "-inf",
        "max": "inf",
        "inclusive_min": false,
        "inclusive_max": false
      },
      "distribution": {
        "type": "calculated",
        "parameters": {}
      },
      "learnable": false,
      "source": "calculated"
    },
    "gamma": {
      "description": "Reward sensitivity parameter, scaling how much the monetary value of the proposer\u2019s split adds to utility.",
      "range": {
        "min": 0,
        "max": 10,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": {
        "type": "uniform",
        "parameters": {
          "min": 0,
          "max": 10
        }
      },
      "learnable": true,
      "source": "learnable"
    },
    "alpha": {
      "description": "Inequity aversion parameter, scaling the penalty for receiving less than a proportionate fair share.",
      "range": {
        "min": 0,
        "max": 10,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": {
        "type": "uniform",
        "parameters": {
          "min": 0,
          "max": 10
        }
      },
      "learnable": true,
      "source": "learnable"
    },
    "split_self": {
      "description": "Proposed share for the participant (responder) in monetary units (in \u00a3).",
      "range": {
        "min": 0,
        "max": "combined_earning",
        "inclusive_min": true,
        "inclusive_max": false
      },
      "distribution": {
        "type": "data",
        "parameters": {}
      },
      "learnable": false,
      "source": "data"
    },
    "combined_earning": {
      "description": "Total available monetary amount in the trial, proportional to tokens.",
      "range": {
        "min": 0,
        "max": "inf",
        "inclusive_min": true,
        "inclusive_max": false
      },
      "distribution": {
        "type": "data",
        "parameters": {}
      },
      "learnable": false,
      "source": "data"
    },
    "token_self": {
      "description": "Number of tokens earned by the participant, reflecting their contribution.",
      "range": {
        "min": 0,
        "max": "inf",
        "inclusive_min": true,
        "inclusive_max": false
      },
      "distribution": {
        "type": "data",
        "parameters": {}
      },
      "learnable": false,
      "source": "data"
    },
    "token_opp": {
      "description": "Number of tokens earned by the opponent, reflecting their contribution.",
      "range": {
        "min": 0,
        "max": "inf",
        "inclusive_min": true,
        "inclusive_max": false
      },
      "distribution": {
        "type": "data",
        "parameters": {}
      },
      "learnable": false,
      "source": "data"
    }
  },
  "model_summary": "This model computes the utility for a responder\u2019s acceptance decision by combining the monetary gain (split_self) with a fairness penalty based on the difference between an expected fair share (derived from token_self, token_opp, and combined_earning) and the actual offer. Two learnable parameters, gamma and alpha, capture sensitivity to monetary reward and aversion to disadvantageous inequality respectively.",
  "full_reasoning": "Step-by-step reasoning:\n\u2022 Psychological mechanisms: Responders\u2019 acceptance decisions are influenced not just by the absolute monetary payoff (their own split) but also by perceptions of fairness. In particular, responders compare the proposed self-share with a normatively \u201cfair\u201d amount based on relative contributions (computed using token_self and token_opp). If the offer falls short of what they would consider fair, this disadvantageous inequality leads to reduced utility.\n\u2022 Mechanism interaction: The fair share is computed as the proportionate share of the total available money (combined_earning) given the responder\u2019s token contribution. The final utility for accepting an offer increases with the monetary gain (split_self) but is penalized if the offer is below the fair share.\n\u2022 Mathematical formulation: We first compute the fair share F = (token_self / (token_self + token_opp)) \u00d7 combined_earning. Then, the \u201cinequality cost\u201d is the shortfall when the proposed offer (split_self) is lower than F. Only in disadvantageous cases (i.e. when F > split_self) is a penalty incurred. Thus, we capture two psychological forces: reward maximization via the multiplier gamma on the actual payoff, and inequity aversion via the penalty term scaled by alpha.\n\u2022 Parameters and calibration: There are two learnable parameters. Gamma (\u03b3) tunes the reward sensitivity (i.e. the value of each monetary unit), and alpha (\u03b1) tunes the degree of aversion to receiving less than one\u2019s fair share. Their bounds are set to be generous (e.g. from 0 to 10).\n\u2022 Observable mapping: The observed variables\u2014split_self, combined_earning, token_self, and token_opp\u2014are all available in the dataset. These enter directly into the formula, and the resulting utility (U_i) is used to compare how likely a responder is to accept a given proposal.\n\nBelow is the formal specification:\n\n<MODEL>\nU_i = gamma * split_self - alpha * max( (combined_earning * (token_self / (token_self + token_opp))) - split_self , 0 )\n</MODEL>\n\n<VARIABLES>\n{\n  \"variables\": {\n    \"U_i\": {\n      \"description\": \"Utility of accepting the offer, combining monetary gain and fairness penalty. Negative values indicate low utility of acceptance.\",\n      \"range\": {\n        \"min\": \"-inf\",\n        \"max\": \"inf\",\n        \"inclusive_min\": false,\n        \"inclusive_max\": false\n      },\n      \"distribution\": {\n        \"type\": \"calculated\",\n        \"parameters\": {}\n      },\n      \"learnable\": false,\n      \"source\": \"calculated\"\n    },\n    \"gamma\": {\n      \"description\": \"Reward sensitivity parameter, scaling how much the monetary value of the proposer\u2019s split adds to utility.\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": 10,\n        \"inclusive_min\": true,\n        \"inclusive_max\": true\n      },\n      \"distribution\": {\n        \"type\": \"uniform\",\n        \"parameters\": {\n          \"min\": 0,\n          \"max\": 10\n        }\n      },\n      \"learnable\": true,\n      \"source\": \"learnable\"\n    },\n    \"alpha\": {\n      \"description\": \"Inequity aversion parameter, scaling the penalty for receiving less than a proportionate fair share.\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": 10,\n        \"inclusive_min\": true,\n        \"inclusive_max\": true\n      },\n      \"distribution\": {\n        \"type\": \"uniform\",\n        \"parameters\": {\n          \"min\": 0,\n          \"max\": 10\n        }\n      },\n      \"learnable\": true,\n      \"source\": \"learnable\"\n    },\n    \"split_self\": {\n      \"description\": \"Proposed share for the participant (responder) in monetary units (in \u00a3).\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": \"combined_earning\",\n        \"inclusive_min\": true,\n        \"inclusive_max\": false\n      },\n      \"distribution\": {\n        \"type\": \"data\",\n        \"parameters\": {}\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"combined_earning\": {\n      \"description\": \"Total available monetary amount in the trial, proportional to tokens.\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": \"inf\",\n        \"inclusive_min\": true,\n        \"inclusive_max\": false\n      },\n      \"distribution\": {\n        \"type\": \"data\",\n        \"parameters\": {}\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"token_self\": {\n      \"description\": \"Number of tokens earned by the participant, reflecting their contribution.\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": \"inf\",\n        \"inclusive_min\": true,\n        \"inclusive_max\": false\n      },\n      \"distribution\": {\n        \"type\": \"data\",\n        \"parameters\": {}\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"token_opp\": {\n      \"description\": \"Number of tokens earned by the opponent, reflecting their contribution.\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": \"inf\",\n        \"inclusive_min\": true,\n        \"inclusive_max\": false\n      },\n      \"distribution\": {\n        \"type\": \"data\",\n        \"parameters\": {}\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    }\n  }\n}\n</VARIABLES>\n\n<SUMMARY>\nThis model computes the utility for a responder\u2019s acceptance decision by combining the monetary gain (split_self) with a fairness penalty based on the difference between an expected fair share (derived from token_self, token_opp, and combined_earning) and the actual offer. Two learnable parameters, gamma and alpha, capture sensitivity to monetary reward and aversion to disadvantageous inequality respectively.\n</SUMMARY>",
  "simulation_code": "def simulate_model(trial_data, gamma=1.0, alpha=1.0):\n    utility_values = []\n    for trial in trial_data:\n        split_self = trial.get(\"split_self\", 0)\n        combined_earning = trial.get(\"combined_earning\", 0)\n        token_self = trial.get(\"token_self\", 0)\n        token_opp = trial.get(\"token_opp\", 0)\n        \n        if token_self + token_opp > 0:\n            # Calculate the fair share\n            fair_share = (token_self / (token_self + token_opp)) * combined_earning\n        else:\n            fair_share = 0  # To handle division by zero if both tokens are zero\n        \n        # Calculate the utility according to the model specification\n        utility = (gamma * split_self) - alpha * max(fair_share - split_self, 0)\n        \n        utility_values.append(utility)\n    \n    return utility_values",
  "fitting_results": [
    {
      "gamma": 0.0,
      "alpha": 3.8060065313048383,
      "success": true,
      "log_likelihood": -7.93151221825652,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.1798529422637478,
      "alpha": 1.7641857240237742,
      "success": true,
      "log_likelihood": -16.281262682882303,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 2.499839044041141,
      "alpha": 3.5888865000066774,
      "success": true,
      "log_likelihood": -10.046565395964926,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.4181525507966475,
      "alpha": 2.461248851358276,
      "success": true,
      "log_likelihood": -13.65315618174943,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 2.0287378928379987,
      "alpha": 3.8689800059288797,
      "success": true,
      "log_likelihood": -9.84802447274734,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 2.419602530764248,
      "alpha": 2.5402770235277754,
      "success": true,
      "log_likelihood": -11.042332344875376,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 10.0,
      "alpha": 0.0,
      "success": true,
      "log_likelihood": -0.006472187475228865,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 2.416924058512749,
      "alpha": 2.441743457100171,
      "success": true,
      "log_likelihood": -11.096668637595517,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 10.0,
      "alpha": 0.0,
      "success": true,
      "log_likelihood": -0.0064721874752288674,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.5441703532099367,
      "alpha": 3.2758136706321612,
      "success": true,
      "log_likelihood": -11.166531339813334,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 5.893152467708259,
      "alpha": 10.0,
      "success": true,
      "log_likelihood": -2.2405174095475364,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.1416568188262432,
      "alpha": 3.4120963695983026,
      "success": true,
      "log_likelihood": -9.090310470672312,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 2.2353432313527497,
      "alpha": 4.4168369943594135,
      "success": true,
      "log_likelihood": -8.816156963862134,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 10.0,
      "alpha": 0.0,
      "success": true,
      "log_likelihood": -0.006472187475228864,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 10.0,
      "alpha": 0.0,
      "success": true,
      "log_likelihood": -0.006472187475228864,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 10.0,
      "alpha": 0.0,
      "success": true,
      "log_likelihood": -0.006472187475228867,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 10.0,
      "alpha": 0.0,
      "success": true,
      "log_likelihood": -0.006472187475228865,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 8.776872443619688,
      "alpha": 4.207521990653856,
      "success": true,
      "log_likelihood": -2.7461714756611477,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 3.5716856423701917,
      "alpha": 1.5225113438457658,
      "success": true,
      "log_likelihood": -6.6500354895586975,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 10.0,
      "alpha": 0.0,
      "success": true,
      "log_likelihood": -0.006472187475228866,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.3997524219665227,
      "alpha": 1.9300538917292962,
      "success": true,
      "log_likelihood": -15.240283485246914,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 3.1465076722506473,
      "alpha": 1.5080717839069857,
      "success": true,
      "log_likelihood": -7.939517179686463,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.6803262675931264,
      "alpha": 1.419006889380033,
      "success": true,
      "log_likelihood": -18.32423206924847,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.1922203488600165,
      "alpha": 1.5114467259886921,
      "success": true,
      "log_likelihood": -16.99121846570976,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.3696395144773013,
      "alpha": 2.382776098985395,
      "success": true,
      "log_likelihood": -13.939297529924835,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.5707653819437812,
      "alpha": 1.791018922480721,
      "success": true,
      "log_likelihood": -14.894718696377206,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 2.1870323982017803,
      "alpha": 2.737661463701391,
      "success": true,
      "log_likelihood": -11.622843834789695,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 2.8954986104382194,
      "alpha": 10.0,
      "success": true,
      "log_likelihood": -3.938665188746549,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 2.3820792069367505,
      "alpha": 0.8624683888268222,
      "success": true,
      "log_likelihood": -9.361863495528684,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.3686519526735792,
      "alpha": 0.7717214018356635,
      "success": true,
      "log_likelihood": -15.902796867908929,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 10.0,
      "alpha": 0.0,
      "success": true,
      "log_likelihood": -0.006472187475228866,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.0,
      "alpha": 3.8060016708849442,
      "success": true,
      "log_likelihood": -7.931512218249187,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.5302951734495704,
      "alpha": 0.9385727803239929,
      "success": true,
      "log_likelihood": -21.05837517840274,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.9859899711173998,
      "alpha": 2.0198773061817064,
      "success": true,
      "log_likelihood": -15.412194970680718,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 10.0,
      "alpha": 0.0,
      "success": true,
      "log_likelihood": -0.006472187475228865,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.9073910487599353,
      "alpha": 1.5867230433679835,
      "success": true,
      "log_likelihood": -13.363774643165181,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 4.15844732717861,
      "alpha": 3.6887059215100364,
      "success": true,
      "log_likelihood": -7.009324201998309,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.4182377312552827,
      "alpha": 2.278262766274136,
      "success": true,
      "log_likelihood": -14.225669128149267,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.182570104411249,
      "alpha": 1.0869826189272007,
      "success": true,
      "log_likelihood": -17.719069199399176,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.9042241089373801,
      "alpha": 0.319666312726663,
      "success": true,
      "log_likelihood": -9.541669265955306,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.1277709422172435,
      "alpha": 1.3063017355907292,
      "success": true,
      "log_likelihood": -17.746254323654178,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.44855972840086183,
      "alpha": 2.4821635847399257,
      "success": true,
      "log_likelihood": -12.426179408096093,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.8697689087265552,
      "alpha": 0.0,
      "success": true,
      "log_likelihood": -7.745036531330751,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.3558948452645398,
      "alpha": 1.5925272378491302,
      "success": true,
      "log_likelihood": -16.139319574912818,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.8991398515266436,
      "alpha": 2.033186322640773,
      "success": true,
      "log_likelihood": -13.25755328119438,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.396208521141737,
      "alpha": 0.7958743355547868,
      "success": true,
      "log_likelihood": -15.740340540945237,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.3997877804740322,
      "alpha": 1.9300693354750127,
      "success": true,
      "log_likelihood": -15.240283493683297,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.6486289458841507,
      "alpha": 1.2985975326194306,
      "success": true,
      "log_likelihood": -18.995917545495953,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.4370780980164963,
      "alpha": 3.219853363984189,
      "success": true,
      "log_likelihood": -11.269891205037542,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.38724929678267656,
      "alpha": 0.3456421242406251,
      "success": true,
      "log_likelihood": -23.58999698435805,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.2183545677491898,
      "alpha": 0.8529210908429216,
      "success": true,
      "log_likelihood": -17.33769282050914,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.0,
      "alpha": 1.7887927918216178,
      "success": true,
      "log_likelihood": -13.305935033358304,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.9537897259902114,
      "alpha": 1.0885844297599157,
      "success": true,
      "log_likelihood": -19.084444854119923,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.6554072285772149,
      "alpha": 0.45901508727778645,
      "success": true,
      "log_likelihood": -21.64957631839206,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.4463333322692111,
      "alpha": 1.2332420512840858,
      "success": true,
      "log_likelihood": -19.145851304795364,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 3.808931828047326,
      "alpha": 9.455762673244907,
      "success": true,
      "log_likelihood": -4.3345776654390145,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.003323715498913,
      "alpha": 3.4214001065393305,
      "success": true,
      "log_likelihood": -10.386539880594311,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.1376583945198173,
      "alpha": 0.0,
      "success": true,
      "log_likelihood": -13.680488206347652,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.07470159684605539,
      "alpha": 2.9357307636078414,
      "success": true,
      "log_likelihood": -9.8257366317601,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.4313188640435346,
      "alpha": 0.4646052708334119,
      "success": true,
      "log_likelihood": -14.06213846642367,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.9003087598244864,
      "alpha": 0.8693006259898601,
      "success": true,
      "log_likelihood": -19.76650471312995,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.3306075565749154,
      "alpha": 2.143894965189264,
      "success": true,
      "log_likelihood": -14.763159512628604,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.0,
      "alpha": 3.8060005817386755,
      "success": true,
      "log_likelihood": -7.931512218248744,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.6307180643837172,
      "alpha": 0.9771450133631415,
      "success": true,
      "log_likelihood": -20.702526780886977,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.6965586307890747,
      "alpha": 3.0401154122186798,
      "success": true,
      "log_likelihood": -11.08399412110251,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.631288712297257,
      "alpha": 1.9393214054868366,
      "success": true,
      "log_likelihood": -14.437445103460313,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 2.3095929951136016,
      "alpha": 0.5413830272937985,
      "success": true,
      "log_likelihood": -8.407405638179815,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.8700511391359078,
      "alpha": 0.7069672941524414,
      "success": true,
      "log_likelihood": -11.779558639070453,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.4154146917802792,
      "alpha": 1.4704070029787555,
      "success": true,
      "log_likelihood": -16.029288800122085,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.356044832430924,
      "alpha": 0.0,
      "success": true,
      "log_likelihood": -11.540124489366363,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.5984558024935662,
      "alpha": 10.0,
      "success": true,
      "log_likelihood": -1.933807477661314,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.03723945809042021,
      "alpha": 1.9994374551981096,
      "success": true,
      "log_likelihood": -12.598482049221477,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.3706357017225446,
      "alpha": 1.817167072946871,
      "success": true,
      "log_likelihood": -15.606148306463508,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.4028707369956637,
      "alpha": 0.5665088345598461,
      "success": true,
      "log_likelihood": -14.833726682772772,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.46060259784735413,
      "alpha": 0.621934468742867,
      "success": true,
      "log_likelihood": -22.663571894014787,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.8873661574653569,
      "alpha": 1.713576847193222,
      "success": true,
      "log_likelihood": -13.469173044853425,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 2.0793917659298295,
      "alpha": 0.20438304845872216,
      "success": true,
      "log_likelihood": -7.802173684440673,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.0,
      "alpha": 3.452200139623074,
      "success": true,
      "log_likelihood": -8.474686531170738,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.5316326264346076,
      "alpha": 0.26700166028726396,
      "success": true,
      "log_likelihood": -22.370656052732127,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.0,
      "alpha": 3.806000234641491,
      "success": true,
      "log_likelihood": -7.931512218248695,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.46845629880713924,
      "alpha": 0.5662304026152942,
      "success": true,
      "log_likelihood": -22.809114635743594,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.333893236737057,
      "alpha": 0.0,
      "success": true,
      "log_likelihood": -11.741860654220131,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.0,
      "alpha": 2.6892626749825146,
      "success": true,
      "log_likelihood": -10.063924084618556,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 2.5057306633433836,
      "alpha": 3.262628680321209,
      "success": true,
      "log_likelihood": -10.339432461638587,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.33959235607997657,
      "alpha": 0.19845267237932981,
      "success": true,
      "log_likelihood": -23.819155639861446,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.16603840771277703,
      "alpha": 4.3141768111032786,
      "success": true,
      "log_likelihood": -7.785436408194111,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.145469548682338,
      "alpha": 0.8855518945941782,
      "success": true,
      "log_likelihood": -17.95964190237326,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.31650958081052966,
      "alpha": 2.1578286697967894,
      "success": true,
      "log_likelihood": -13.31715967871441,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 3.102495011766059,
      "alpha": 0.6755981955094346,
      "success": true,
      "log_likelihood": -5.817840692312497,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 1.54592557256785,
      "alpha": 1.9788053978922775,
      "success": true,
      "log_likelihood": -14.679368249087887,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "gamma": 0.7069678303540626,
      "alpha": 0.3327122714472907,
      "success": true,
      "log_likelihood": -20.833123314140785,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    }
  ],
  "parameter_recovery": {
    "correlations": {
      "gamma": {
        "r": 0.8562801940856043,
        "p": 7.126632153486914e-30
      },
      "alpha": {
        "r": 0.8398124927400509,
        "p": 9.54878977186305e-28
      }
    }
  },
  "bic_error": "'ModelOutput' object has no attribute 'metrics'"
}