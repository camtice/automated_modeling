{
  "task_description": "In the  experiment, each participant is given 36 different proposals to respond to. Each is designated by a trial number in the data set This gives 36 instances for the learnable parameters to be trained. There is also a pretask where the participant finds a number of tokens that correspond to their contribution to the group. This is designated by the variable \"token_self\". The other variable, \"token_opp\", is the number of tokens found the opponent's and represents the opoonents contribution to the shared pot that will be later divided by the opponent.\n\nNote that in each trial there is a variable amount of money in the combined earning, so that two equal split_self variables do not represent the same \"fairness\".\n\nBelow is the description of each variable in the dataset, which will be followed by information about the data type of the variable:\n\ntrial_type = how much was the contribution [1 = equal, 2 = opponent more, 3 = participant more]\ntrial_role = the role of the participant [1 = responder, 2 = proposer]\ntoken_opp = number of tokens found by the opponent\ntoken_self = number of tokens found by the participant\ncombined_earning = amount of money earned in total (note that each token found is \u00a33)\nsplit_opp = the proposed share of the opponent (in \u00a3)\nsplit_self = the proposed share for the participant (in \u00a3)\nsplitperc_opp = same but in %\nsplit_perc_self = same but in %\naccept = whether the participant responded accept (1) or reject (0)\naccepted_amount = if accepted, what is the amount gain (in \u00a3)\naccepted_perc = same as above but in %\nproposed_perc = when participant is the proposer, what is the % proposed to the opponent\n\nDataset:\n\nDataset Structure:\nVariables available:\n- ID (int64)\n- group (object)\n- trial_number (int64)\n- trial_type (int64)\n- trial_role (int64)\n- token_opp (int64)\n- token_self (int64)\n- combined_earning (int64)\n- split_opp (float64)\n- split_self (float64)\n- splitperc_opp (int64)\n- splitperc_self (int64)\n- accept (float64)\n- accepted_amount (float64)\n- accepted_perc (float64)\n- proposed_perc (float64)\n- proposed_amount (float64)\n\nNumber of observations: 3276\n\nDataset:\n\nDataset Structure:\nVariables available:\n- ID (int64)\n- group (object)\n- trial_number (int64)\n- trial_type (int64)\n- trial_role (int64)\n- token_opp (int64)\n- token_self (int64)\n- combined_earning (int64)\n- split_opp (float64)\n- split_self (float64)\n- splitperc_opp (int64)\n- splitperc_self (int64)\n- accept (float64)\n- accepted_amount (float64)\n- accepted_perc (float64)\n- proposed_perc (float64)\n- proposed_amount (float64)\n\nNumber of observations: 3276",
  "output_description": "Design a computational model for the given task. The model should obtain the utility, (not the probability of choosing an action).  Your goal is to eventually explore the entire space of possible explainations and mechanisms by which the observed behavior arises.\n\nYour model should use the given variables appropriately, but does not necessary need to use all or even most of the variables. Do not include the model for the utility of rejecting an offer. \n\nThe model should:\n1. Predict only responder behavior.\n2. Build on relevant psychological principles.\n3. Be considerate of high covariance between learnable parameters as the model\nwill have to pass parameter recovery tests.\n4. Be applicable to the dataset given within the task description (i.e. the model should be able to be run using only the provided dataset structure).\n5. Not include parameters to simulate general stochasticity of behavior, because this will be handled later by a temperature parameter.\n6. Should have no more than two learnable parameters.\n7. This specific model should calculate the utility of an action, which will then be used to determine\nthe probability of choosing that action. Negative values should represent a negative utility, and thus an unlikly action.\n\nFor any learnable parameters in your model, you must specify finite numerical bounds (it just can not be infinity) in the variable descriptions. However, this bound should be generous. The utility variable may be unbounded (-inf to inf).\n\nFirst, reason step by step about:\n* The key psychological mechanisms involved\n* How these mechanisms interact\n* What mathematical form could capture these interactions\n* What parameters would be needed to calibrate the model\n* How the model variables map to observable behavior\n\nThen, provide your formal mathematical model between <MODEL> tags, followed by variable descriptions between <VARIABLES> tags. Use clear mathematical notation and ensure each variable is fully described. Every variable must be utilized within the mathematical formula provided between <MODEL> and </MODEL>. For variable descriptions, provide them in a JSON format with the following structure: <VARIABLES> Bounds are by default inclusive. Please spell out the greek variable names instead of using the symbols. Finally, you should provide a short description of the model in the summary tags <SUMMARY> </SUMMARY>. This will be used to compare different computational models of the task; it should be concise and purely descriptive. Do not include generic information about the name of the tasks, since that is implied. \n\n{\n  \"variables\": {\n    \"variable_name\": {\n      \"description\": \"Clear description\",\n      \"range\": {\n        \"min\": value,\n        \"max\": value,\n        \"inclusive_min\": boolean,\n        \"inclusive_max\": boolean\n      },\n      \"distribution\": {\n        \"type\": \"distribution type\",\n        \"parameters\": {}\n      },\n      \"learnable\": boolean,\n      \"source\": \"learnable/data/calculated\"\n    }\n  }\n}\n</VARIABLES>\n\nExample #1: \n<EXAMPLE>\n(Model of a Random Choice Task):\nLet me think through this step by step...\n[your reasoning here]\n\n<MODEL>\nU_i = \u03b2 + \u03b5E + \u03b7N\n</MODEL>\n\n<VARIABLES>\n{\n  \"variables\": {\n    \"U_i\": {\n      \"description\": \"Utility of choosing action i\",\n      \"range\": {\n        \"min\": \"-inf\",\n        \"max\": \"inf\"\n      },\n      \"learnable\": false,\n      \"source\": \"calculated\"\n    },\n    \"beta\": {\n      \"description\": \"Base tendency parameter (inherent preference)\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": 1\n      },\n      \"learnable\": true,\n      \"source\": \"learnable\"\n    },\n    \"epsilon\": {\n      \"description\": \"Environmental sensitivity parameter\",\n      \"range\": {\n        \"min\": \"-inf\",\n        \"max\": \"inf\"\n      },\n      \"learnable\": true,\n      \"source\": \"learnable\"\n    },\n    \"E\": {\n      \"description\": \"Environmental cue value\",\n      \"range\": {\n        \"min\": \"-inf\",\n        \"max\": \"inf\"\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"eta\": {\n      \"description\": \"Noise parameter\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": 1,\n        \"exclusive_max\": true\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"N\": {\n      \"description\": \"Random noise drawn from normal distribution N(0,1)\",\n      \"distribution\": {\n        \"type\": \"normal\",\n        \"mean\": 0,\n        \"std\": 1\n      },\n      \"learnable\": false,\n      \"source\": \"calculated\"\n    }\n  }\n}\n</VARIABLES>\n<SUMMARY>\nA linear utility model combining base preference, environmental influence, and stochastic noise. The model uses two learnable parameters: a base tendency parameter (\u03b2) constrained to [0,1] and an unconstrained environmental sensitivity parameter (\u03b5). Environmental cues and normally distributed noise modify the base utility, allowing for both systematic and random variation in choice behavior.\n</SUMMARY>\n</EXAMPLE>\n\nPlease be sure to provide the mathematical formula for the model between <MODEL> and </MODEL>, and the variable descriptions between <VARIABLES> and </VARIABLES>. No description of the model should be provided within the <MODEL> tags.\n\nThe parameter names you choose in your <VARIABLES> section will be used exactly as specified in subsequent code generation. Please choose clear, non-reserved parameter names that can be used directly in Python code. For example, avoid Python reserved words like 'lambda' and use alternatives like 'learning_rate' or 'lambda_param'.\n\nYou will be given the complete list of models that you have already created. Analyze the models, and notice the absence of possible explanations of behaviors that should be tested. You should start with simple obvious explanations, and as you notice these being thoroughly explored you should shift to fundamentally different models of behavior. Pay less attention to the names of the variables, and how they are actually interacting with the given behavioral data.\n\nYour results will be scored on a combination of BIC with a penalization for number of learned parameters, the ability to recover those learned parameters, and the ability of those parameters to account for the differences in behaviors among varying groups of people.\n\nPrevious Models:\nModel 1:\nSpecification: Let fair_share = combined_earning * token_self / (token_self + token_opp)\nU = split_self - alpha * max(fair_share - split_self, 0) - beta * max(split_self - fair_share, 0)\nSummary: The model computes the utility of accepting an offer by comparing the proposer\u2019s suggested share to a fairness reference determined by the participant\u2019s and opponent\u2019s tokens. Two parameters, alpha and beta, capture sensitivity to disadvantageous and advantageous inequity, respectively, adjusting the net utility based on deviations from fairness.",
  "dataset_info": "\nDataset Structure:\nVariables available:\n- ID (int64)\n- group (object)\n- trial_number (int64)\n- trial_type (int64)\n- trial_role (int64)\n- token_opp (int64)\n- token_self (int64)\n- combined_earning (int64)\n- split_opp (float64)\n- split_self (float64)\n- splitperc_opp (int64)\n- splitperc_self (int64)\n- accept (float64)\n- accepted_amount (float64)\n- accepted_perc (float64)\n- proposed_perc (float64)\n- proposed_amount (float64)\n\nNumber of observations: 3276",
  "learnable_parameters": {
    "I": {
      "description": "Baseline acceptance bias of the responder",
      "range": {
        "min": -100,
        "max": 100,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": null,
      "learnable": true,
      "source": "learnable"
    },
    "lambda_param": {
      "description": "Sensitivity to the squared deviation from the fairness reference",
      "range": {
        "min": 0,
        "max": 100,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": null,
      "learnable": true,
      "source": "learnable"
    }
  },
  "model_specification": "U = I + split_self - lambda_param * ((split_self - (combined_earning * token_self / (token_self + token_opp)))^2 / combined_earning)",
  "variable_descriptions": {
    "U": {
      "description": "Utility of accepting the offer on a given trial",
      "range": {
        "min": "-inf",
        "max": "inf",
        "inclusive_min": false,
        "inclusive_max": false
      },
      "distribution": null,
      "learnable": false,
      "source": "calculated"
    },
    "I": {
      "description": "Baseline acceptance bias of the responder",
      "range": {
        "min": -100,
        "max": 100,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": null,
      "learnable": true,
      "source": "learnable"
    },
    "lambda_param": {
      "description": "Sensitivity to the squared deviation from the fairness reference",
      "range": {
        "min": 0,
        "max": 100,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": null,
      "learnable": true,
      "source": "learnable"
    },
    "split_self": {
      "description": "Proposed share for the participant (monetary value in \u00a3)",
      "range": {
        "min": 0,
        "max": "inf",
        "inclusive_min": true,
        "inclusive_max": false
      },
      "distribution": null,
      "learnable": false,
      "source": "data"
    },
    "combined_earning": {
      "description": "Total amount of money earned in the trial (each token is worth \u00a33)",
      "range": {
        "min": 0,
        "max": "inf",
        "inclusive_min": true,
        "inclusive_max": false
      },
      "distribution": null,
      "learnable": false,
      "source": "data"
    },
    "token_self": {
      "description": "Number of tokens found by the participant",
      "range": {
        "min": 0,
        "max": "inf",
        "inclusive_min": true,
        "inclusive_max": false
      },
      "distribution": null,
      "learnable": false,
      "source": "data"
    },
    "token_opp": {
      "description": "Number of tokens found by the opponent",
      "range": {
        "min": 0,
        "max": "inf",
        "inclusive_min": true,
        "inclusive_max": false
      },
      "distribution": null,
      "learnable": false,
      "source": "data"
    }
  },
  "model_summary": "A quadratic fairness deviation model where utility is derived from the offered monetary gain (split_self) augmented by a baseline bias (I) and penalized by the squared discrepancy between the offered share and the fairness reference (computed from tokens and combined earnings). Two learnable parameters (I and lambda_param) capture the baseline preference and sensitivity to fairness deviations.",
  "full_reasoning": "Step\u2010by\u2010step reasoning:\n1. Key psychological mechanisms:\n\u2003\u2022 Responders are sensitive not only to the absolute amount they receive (split_self) but also to how that amount compares to what they might consider a \u201cfair\u201d share. \n\u2003\u2022 The \u201cfair\u201d share is computed based on their relative contribution (token_self) compared to the opponent\u2019s (token_opp) and the total resources available (combined_earning). \n\u2003\u2022 Deviations from this fairness reference generate a disutility that grows nonlinearly (quadratically) with the departure from the fair share.\n\u2003\u2022 An overall bias or baseline preference (intercept) is included, capturing a general predisposition to accept offers regardless of fairness deviations.\n\n2. Interaction of mechanisms:\n\u2003\u2022 The model computes a fairness reference: fair_share = combined_earning \u00b7 token_self\u2044(token_self + token_opp).\n\u2003\u2022 The utility is then calculated as the actual monetary gain (split_self) plus an intercept (I) that represents a baseline bias, minus a quadratic penalty for deviations from fairness. The quadratic term is normalized by combined_earning to account for the variability in stake size.\n\n3. Mathematical form:\n\u2003\u2022 The utility, U, is given by:\n\u2003\u2003U = I + split_self - \u03bb \u00b7 ((split_self \u2212 fair_share)\u00b2 / combined_earning)\n\u2003\u2022 Here, I and \u03bb are the two learnable parameters. I is an intercept (baseline bias) and \u03bb captures the responder\u2019s sensitivity to fairness deviations.\n\n4. Necessary parameters:\n\u2003\u2022 I (intercept): captures individual baseline tendencies.\n\u2003\u2022 \u03bb (lambda): quantifies the sensitivity to deviations from fairness. \n\u2003\u2022 These parameters are constrained by broad, finite bounds.\n\n5. Mapping to observable behavior:\n\u2003\u2022 The computed U (ranging from highly negative to positive values) will be used to determine the probability of accepting an offer (after adding a later stochastic stage with a temperature parameter). \n\u2003\u2022 Input variables split_self, token_self, token_opp, and combined_earning are directly drawn from the dataset.\n\u2003\u2022 The fairness reference is computed on each trial, and any deviation from this fairness incurs a quadratic penalty scaled by \u03bb.\n\nThe formal model is provided below.\n\n<MODEL>\nU = I + split_self - lambda_param * ((split_self - (combined_earning * token_self / (token_self + token_opp)))^2 / combined_earning)\n</MODEL>\n\n<VARIABLES>\n{\n  \"variables\": {\n    \"U\": {\n      \"description\": \"Utility of accepting the offer on a given trial\",\n      \"range\": {\n        \"min\": \"-inf\",\n        \"max\": \"inf\",\n        \"inclusive_min\": false,\n        \"inclusive_max\": false\n      },\n      \"learnable\": false,\n      \"source\": \"calculated\"\n    },\n    \"I\": {\n      \"description\": \"Baseline acceptance bias of the responder\",\n      \"range\": {\n        \"min\": -100,\n        \"max\": 100,\n        \"inclusive_min\": true,\n        \"inclusive_max\": true\n      },\n      \"learnable\": true,\n      \"source\": \"learnable\"\n    },\n    \"lambda_param\": {\n      \"description\": \"Sensitivity to the squared deviation from the fairness reference\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": 100,\n        \"inclusive_min\": true,\n        \"inclusive_max\": true\n      },\n      \"learnable\": true,\n      \"source\": \"learnable\"\n    },\n    \"split_self\": {\n      \"description\": \"Proposed share for the participant (monetary value in \u00a3)\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": \"inf\",\n        \"inclusive_min\": true,\n        \"inclusive_max\": false\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"combined_earning\": {\n      \"description\": \"Total amount of money earned in the trial (each token is worth \u00a33)\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": \"inf\",\n        \"inclusive_min\": true,\n        \"inclusive_max\": false\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"token_self\": {\n      \"description\": \"Number of tokens found by the participant\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": \"inf\",\n        \"inclusive_min\": true,\n        \"inclusive_max\": false\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"token_opp\": {\n      \"description\": \"Number of tokens found by the opponent\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": \"inf\",\n        \"inclusive_min\": true,\n        \"inclusive_max\": false\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    }\n  }\n}\n</VARIABLES>\n\n<SUMMARY>\nA quadratic fairness deviation model where utility is derived from the offered monetary gain (split_self) augmented by a baseline bias (I) and penalized by the squared discrepancy between the offered share and the fairness reference (computed from tokens and combined earnings). Two learnable parameters (I and lambda_param) capture the baseline preference and sensitivity to fairness deviations.\n</SUMMARY>",
  "simulation_code": "def simulate_model(trial_data, I=0, lambda_param=1):\n    utility_values = []\n    for trial in trial_data:\n        split_self = trial.get(\"split_self\", 0)\n        combined_earning = trial.get(\"combined_earning\", 0)\n        token_self = trial.get(\"token_self\", 0)\n        token_opp = trial.get(\"token_opp\", 0)\n\n        if token_self + token_opp > 0:\n            fair_share = combined_earning * token_self / (token_self + token_opp)\n        else:\n            fair_share = 0  # Handle case where both token_self and token_opp are 0\n\n        penalty = ((split_self - fair_share) ** 2) / combined_earning if combined_earning > 0 else 0\n        U = I + split_self - (lambda_param * penalty)\n        \n        utility_values.append(U)\n    return utility_values",
  "fitting_results": [
    {
      "I": -7.468313234861471,
      "lambda_param": 4.495835291783743,
      "success": true,
      "log_likelihood": -6.997746356437293,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": -1.266439194630777,
      "lambda_param": 3.555124824836417,
      "success": true,
      "log_likelihood": -18.553478193699373,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": 2.976500905525801,
      "lambda_param": 10.968646868911655,
      "success": true,
      "log_likelihood": -9.375739817017902,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": -1.3191094356923112,
      "lambda_param": 5.728319532255465,
      "success": true,
      "log_likelihood": -13.796150247289926,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": 4.123870417635762,
      "lambda_param": 19.160606888801873,
      "success": true,
      "log_likelihood": -7.275724035244202,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": 2.012773552069167,
      "lambda_param": 5.6292233749856,
      "success": true,
      "log_likelihood": -12.434354764342928,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": 59.69641522751307,
      "lambda_param": 0.0,
      "success": true,
      "log_likelihood": 3.5991321032801665e-09,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": 3.178751317585574,
      "lambda_param": 6.4649611700968705,
      "success": true,
      "log_likelihood": -11.592074334626963,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": 84.25844546610588,
      "lambda_param": 0.0,
      "success": true,
      "log_likelihood": 3.600000297685338e-09,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": -0.2503035807132914,
      "lambda_param": 9.89067468517279,
      "success": true,
      "log_likelihood": -12.46589958893997,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": 3.4248665747478086,
      "lambda_param": 17.155294269743948,
      "success": true,
      "log_likelihood": -5.571967093404885,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": -6.274639729504467,
      "lambda_param": 6.357675646268959,
      "success": true,
      "log_likelihood": -7.901100080444147,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": 0.5944564714168715,
      "lambda_param": 10.89600559483921,
      "success": true,
      "log_likelihood": -11.855810314028345,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": 100.0,
      "lambda_param": 0.0,
      "success": true,
      "log_likelihood": 3.600000297685338e-09,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": 82.63577166852757,
      "lambda_param": 4.052378584099976,
      "success": true,
      "log_likelihood": 3.5999991874623136e-09,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": 100.0,
      "lambda_param": 0.0,
      "success": true,
      "log_likelihood": 3.600000297685338e-09,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": 100.0,
      "lambda_param": 0.0,
      "success": true,
      "log_likelihood": 3.600000297685338e-09,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": 4.215190482891882,
      "lambda_param": 3.1689952761058136,
      "success": true,
      "log_likelihood": -7.239496921948032,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": 11.260637200477618,
      "lambda_param": 7.108882676579571,
      "success": true,
      "log_likelihood": -4.581155127095158,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": 100.0,
      "lambda_param": 0.0,
      "success": true,
      "log_likelihood": 3.600000297685338e-09,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": 0.58780226454451,
      "lambda_param": 5.5649508350226515,
      "success": true,
      "log_likelihood": -16.702031900662945,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": 5.325166989939539,
      "lambda_param": 3.9912790820293216,
      "success": true,
      "log_likelihood": -7.990694977164504,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": -3.2887859491998617,
      "lambda_param": 2.745221704173455,
      "success": true,
      "log_likelihood": -16.349164890565916,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": -1.52954774174397,
      "lambda_param": 2.5318582230764237,
      "success": true,
      "log_likelihood": -18.247210915385235,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": 1.7584804907575615,
      "lambda_param": 9.721412859698324,
      "success": true,
      "log_likelihood": -14.525413390810293,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": -0.057541535665502165,
      "lambda_param": 3.8151393758090757,
      "success": true,
      "log_likelihood": -16.060720064348565,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": -0.08382306867118547,
      "lambda_param": 4.391617871409606,
      "success": true,
      "log_likelihood": -14.798155916411517,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": 0.6764733524332613,
      "lambda_param": 26.74408212650863,
      "success": true,
      "log_likelihood": -7.03564380239818,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": 5.692184650670242,
      "lambda_param": 3.6369513118267958,
      "success": true,
      "log_likelihood": -7.817183097760669,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": 1.5293600491035202,
      "lambda_param": 2.3140273247391923,
      "success": true,
      "log_likelihood": -15.812933891206294,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": 100.0,
      "lambda_param": 0.0,
      "success": true,
      "log_likelihood": 3.600000297685338e-09,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": -7.46835439120904,
      "lambda_param": 4.495794166583655,
      "success": true,
      "log_likelihood": -6.997746356016389,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": -3.552765803505127,
      "lambda_param": 1.1156630500031661,
      "success": true,
      "log_likelihood": -19.852357454941256,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": -2.0830050809264615,
      "lambda_param": 4.75599521896158,
      "success": true,
      "log_likelihood": -16.339818570432335,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": 100.0,
      "lambda_param": 0.0,
      "success": true,
      "log_likelihood": 3.600000297685338e-09,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": -0.5729574861397382,
      "lambda_param": 2.0702522086584625,
      "success": true,
      "log_likelihood": -14.608014162723517,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": 4.034089281314145,
      "lambda_param": 6.742120980718292,
      "success": true,
      "log_likelihood": -8.554505572587692,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": 0.40285885775105357,
      "lambda_param": 6.868543562287479,
      "success": true,
      "log_likelihood": -15.70894786932247,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": 0.40540392523027086,
      "lambda_param": 2.881352625523982,
      "success": true,
      "log_likelihood": -18.721320931473,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": 100.0,
      "lambda_param": 15.604212184330963,
      "success": true,
      "log_likelihood": -69.07754834610267,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": 0.016829382274392332,
      "lambda_param": 3.3659359022584083,
      "success": true,
      "log_likelihood": -19.7166650566849,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": -4.115835519029743,
      "lambda_param": 5.757822476710192,
      "success": true,
      "log_likelihood": -13.70065513804404,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": 4.071626923834134,
      "lambda_param": 0.0,
      "success": true,
      "log_likelihood": -5.7562858233904715,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": -0.9950617230836128,
      "lambda_param": 2.8790370567442705,
      "success": true,
      "log_likelihood": -17.28834980775926,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": 0.7954678290565833,
      "lambda_param": 4.52215014022122,
      "success": true,
      "log_likelihood": -14.185929983628096,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": -0.3182523436238206,
      "lambda_param": 1.1820379055909107,
      "success": true,
      "log_likelihood": -16.232446459106683,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": -0.8737995057184158,
      "lambda_param": 3.64849236615843,
      "success": true,
      "log_likelihood": -17.86256635971229,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": -3.4966725586033287,
      "lambda_param": 1.7135151284189938,
      "success": true,
      "log_likelihood": -18.892713702739087,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": 2.417218933787794,
      "lambda_param": 16.574426300375666,
      "success": true,
      "log_likelihood": -10.580517699707716,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": -3.2679434927907876,
      "lambda_param": 0.0,
      "success": true,
      "log_likelihood": -22.687410151793046,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": -0.19317285251944052,
      "lambda_param": 1.7131672797806048,
      "success": true,
      "log_likelihood": -17.85246699221659,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": -6.703861408685093,
      "lambda_param": 2.1639913533435395,
      "success": true,
      "log_likelihood": -11.752786870110313,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": -2.10620949477991,
      "lambda_param": 1.6220387639705671,
      "success": true,
      "log_likelihood": -18.65182642483822,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": -2.513343920157526,
      "lambda_param": 0.3039304880652885,
      "success": true,
      "log_likelihood": -20.239691222978934,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": -2.2916953296765423,
      "lambda_param": 4.252244116333628,
      "success": true,
      "log_likelihood": -20.60721084701508,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": 1.7957074582116512,
      "lambda_param": 23.921395782345098,
      "success": true,
      "log_likelihood": -6.3211543010062226,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": -1.7360116831568795,
      "lambda_param": 12.006730127537542,
      "success": true,
      "log_likelihood": -11.091749270224092,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": 1.0428073289375082,
      "lambda_param": 0.0,
      "success": true,
      "log_likelihood": -13.253874575050647,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": -6.455763715626056,
      "lambda_param": 5.419902985523776,
      "success": true,
      "log_likelihood": -8.368262302621195,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": 94.06153192370036,
      "lambda_param": 13.232776610056652,
      "success": true,
      "log_likelihood": -161.18094318415717,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": -1.3420003586228562,
      "lambda_param": 1.465256969764949,
      "success": true,
      "log_likelihood": -21.109240913889,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": -0.3587493366458865,
      "lambda_param": 5.310978508156119,
      "success": true,
      "log_likelihood": -17.688047697434435,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": -7.46836113811231,
      "lambda_param": 4.4958064817813925,
      "success": true,
      "log_likelihood": -6.9977463560244875,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": -2.672896177840991,
      "lambda_param": 2.1310081022164207,
      "success": true,
      "log_likelihood": -18.790374376690323,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": -3.696661775441995,
      "lambda_param": 7.459427985287284,
      "success": true,
      "log_likelihood": -11.132637917446564,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": -0.9998719341462727,
      "lambda_param": 2.8713549545795902,
      "success": true,
      "log_likelihood": -16.77413183089269,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": 100.0,
      "lambda_param": 24.253992398983776,
      "success": true,
      "log_likelihood": -68.02527340374148,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": 3.4490334889314616,
      "lambda_param": 2.576215599982793,
      "success": true,
      "log_likelihood": -10.847376809840451,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": -1.5676583844674983,
      "lambda_param": 1.9917823758087656,
      "success": true,
      "log_likelihood": -16.10714538260874,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": 100.0,
      "lambda_param": 0.0,
      "success": true,
      "log_likelihood": -69.07755278652137,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": -5.51667071668779,
      "lambda_param": 11.867794462789407,
      "success": true,
      "log_likelihood": -6.913774799869366,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": -6.416840979934054,
      "lambda_param": 3.0127142164783947,
      "success": true,
      "log_likelihood": -11.072793688848645,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": -0.48286162051720877,
      "lambda_param": 4.349684743342832,
      "success": true,
      "log_likelihood": -16.1755378513671,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": 0.06648178499303183,
      "lambda_param": 0.8385439561147273,
      "success": true,
      "log_likelihood": -15.2696956363197,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": -3.375573006843682,
      "lambda_param": 0.19475715508292005,
      "success": true,
      "log_likelihood": -23.366414760093782,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": 1.99879674853806,
      "lambda_param": 4.322274698092576,
      "success": true,
      "log_likelihood": -14.416040626672045,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": 4.858866736692413,
      "lambda_param": 1.7219023461025675,
      "success": true,
      "log_likelihood": -6.647435010238692,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": -9.173861340928031,
      "lambda_param": 1.8895344425572993,
      "success": true,
      "log_likelihood": -6.82086401905914,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": -2.493230228286193,
      "lambda_param": 0.0,
      "success": true,
      "log_likelihood": -21.686735352228283,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": -7.46836498913601,
      "lambda_param": 4.495832552572004,
      "success": true,
      "log_likelihood": -6.9977463561119615,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": -2.782434628457363,
      "lambda_param": 0.6451934109557067,
      "success": true,
      "log_likelihood": -23.723708671568506,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": 46.13399477543374,
      "lambda_param": 0.0,
      "success": true,
      "log_likelihood": -68.5389671217704,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": -5.74104622525934,
      "lambda_param": 9.91784357601452,
      "success": true,
      "log_likelihood": -8.200218750869409,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": -0.5013132312261024,
      "lambda_param": 5.026433797874724,
      "success": true,
      "log_likelihood": -11.736823781726391,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": -2.4932336353139655,
      "lambda_param": 0.0,
      "success": true,
      "log_likelihood": -25.96173535102919,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": -6.2804284332061195,
      "lambda_param": 6.325837956846281,
      "success": true,
      "log_likelihood": -8.73402726466098,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": 0.3040750495065736,
      "lambda_param": 2.300439377601622,
      "success": true,
      "log_likelihood": -18.55641887123945,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": -3.5178563234801916,
      "lambda_param": 8.272247807472688,
      "success": true,
      "log_likelihood": -13.35508499791475,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": 7.395834535512297,
      "lambda_param": 3.1751147857601607,
      "success": true,
      "log_likelihood": -4.5955479675834185,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": -1.8953312649385903,
      "lambda_param": 2.9932581871555852,
      "success": true,
      "log_likelihood": -13.61801754245313,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "I": 85.18737223786593,
      "lambda_param": 2.572835099308002,
      "success": true,
      "log_likelihood": -253.28436022684528,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    }
  ],
  "parameter_recovery": {
    "correlations": {
      "I": {
        "r": 0.5186396541827282,
        "p": 3.247697727949863e-08
      },
      "lambda_param": {
        "r": 0.332483851204099,
        "p": 0.0007255810640240791
      }
    }
  },
  "average_bic": 44.90956735490731,
  "bic_Control": 29.214187410426305,
  "bic_Cocaine": 58.97001188850488,
  "bic_error": "'ModelOutput' object has no attribute 'metrics'"
}