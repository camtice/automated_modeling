{
  "task_description": "In the  experiment, each participant is given 36 different proposals to respond to. Each is designated by a trial number in the data set This gives 36 instances for the learnable parameters to be trained. There is also a pretask where the participant finds a number of tokens that correspond to their contribution to the group. This is designated by the variable \"token_self\". The other variable, \"token_opp\", is the number of tokens found the opponent's and represents the opoonents contribution to the shared pot that will be later divided by the opponent.\n\nNote that in each trial there is a variable amount of money in the combined earning, so that two equal split_self variables do not represent the same \"fairness\".\n\nBelow is the description of each variable in the dataset, which will be followed by information about the data type of the variable:\n\ntrial_type = how much was the contribution [1 = equal, 2 = opponent more, 3 = participant more]\ntrial_role = the role of the participant [1 = responder, 2 = proposer]\ntoken_opp = number of tokens found by the opponent\ntoken_self = number of tokens found by the participant\ncombined_earning = amount of money earned in total (note that each token found is \u00a33)\nsplit_opp = the proposed share of the opponent (in \u00a3)\nsplit_self = the proposed share for the participant (in \u00a3)\nsplitperc_opp = same but in %\nsplit_perc_self = same but in %\naccept = whether the participant responded accept (1) or reject (0)\naccepted_amount = if accepted, what is the amount gain (in \u00a3)\naccepted_perc = same as above but in %\nproposed_perc = when participant is the proposer, what is the % proposed to the opponent\n\nDataset:\n\nDataset Structure:\nVariables available:\n- ID (int64)\n- group (object)\n- trial_number (int64)\n- trial_type (int64)\n- trial_role (int64)\n- token_opp (int64)\n- token_self (int64)\n- combined_earning (int64)\n- split_opp (float64)\n- split_self (float64)\n- splitperc_opp (int64)\n- splitperc_self (int64)\n- accept (float64)\n- accepted_amount (float64)\n- accepted_perc (float64)\n- proposed_perc (float64)\n- proposed_amount (float64)\n\nNumber of observations: 3276\n\nDataset:\n\nDataset Structure:\nVariables available:\n- ID (int64)\n- group (object)\n- trial_number (int64)\n- trial_type (int64)\n- trial_role (int64)\n- token_opp (int64)\n- token_self (int64)\n- combined_earning (int64)\n- split_opp (float64)\n- split_self (float64)\n- splitperc_opp (int64)\n- splitperc_self (int64)\n- accept (float64)\n- accepted_amount (float64)\n- accepted_perc (float64)\n- proposed_perc (float64)\n- proposed_amount (float64)\n\nNumber of observations: 3276",
  "output_description": "Design a computational model for the given task. The model should obtain the utility, (not the probability of choosing an action).  Your goal is to eventually explore the entire space of possible explainations and mechanisms by which the observed behavior arises.\n\nYour model should use the given variables appropriately, but does not necessary need to use all or even most of the variables. Do not include the model for the utility of rejecting an offer. \n\nThe model should:\n1. Predict only responder behavior.\n2. Build on relevant psychological principles.\n3. Be considerate of high covariance between learnable parameters as the model\nwill have to pass parameter recovery tests.\n4. Be applicable to the dataset given within the task description (i.e. the model should be able to be run using only the provided dataset structure).\n5. Not include parameters to simulate general stochasticity of behavior, because this will be handled later by a temperature parameter.\n6. Should have no more than two learnable parameters.\n7. This specific model should calculate the utility of an action, which will then be used to determine\nthe probability of choosing that action. Negative values should represent a negative utility, and thus an unlikly action.\n\nFor any learnable parameters in your model, you must specify finite numerical bounds (it just can not be infinity) in the variable descriptions. However, this bound should be generous. The utility variable may be unbounded (-inf to inf).\n\nFirst, reason step by step about:\n* The key psychological mechanisms involved\n* How these mechanisms interact\n* What mathematical form could capture these interactions\n* What parameters would be needed to calibrate the model\n* How the model variables map to observable behavior\n\nThen, provide your formal mathematical model between <MODEL> tags, followed by variable descriptions between <VARIABLES> tags. Use clear mathematical notation and ensure each variable is fully described. Every variable must be utilized within the mathematical formula provided between <MODEL> and </MODEL>. For variable descriptions, provide them in a JSON format with the following structure: <VARIABLES> Bounds are by default inclusive. Please spell out the greek variable names instead of using the symbols. Finally, you should provide a short description of the model in the summary tags <SUMMARY> </SUMMARY>. This will be used to compare different computational models of the task; it should be concise and purely descriptive. Do not include generic information about the name of the tasks, since that is implied. \n\n{\n  \"variables\": {\n    \"variable_name\": {\n      \"description\": \"Clear description\",\n      \"range\": {\n        \"min\": value,\n        \"max\": value,\n        \"inclusive_min\": boolean,\n        \"inclusive_max\": boolean\n      },\n      \"distribution\": {\n        \"type\": \"distribution type\",\n        \"parameters\": {}\n      },\n      \"learnable\": boolean,\n      \"source\": \"learnable/data/calculated\"\n    }\n  }\n}\n</VARIABLES>\n\nExample #1: \n<EXAMPLE>\n(Model of a Random Choice Task):\nLet me think through this step by step...\n[your reasoning here]\n\n<MODEL>\nU_i = \u03b2 + \u03b5E + \u03b7N\n</MODEL>\n\n<VARIABLES>\n{\n  \"variables\": {\n    \"U_i\": {\n      \"description\": \"Utility of choosing action i\",\n      \"range\": {\n        \"min\": \"-inf\",\n        \"max\": \"inf\"\n      },\n      \"learnable\": false,\n      \"source\": \"calculated\"\n    },\n    \"beta\": {\n      \"description\": \"Base tendency parameter (inherent preference)\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": 1\n      },\n      \"learnable\": true,\n      \"source\": \"learnable\"\n    },\n    \"epsilon\": {\n      \"description\": \"Environmental sensitivity parameter\",\n      \"range\": {\n        \"min\": \"-inf\",\n        \"max\": \"inf\"\n      },\n      \"learnable\": true,\n      \"source\": \"learnable\"\n    },\n    \"E\": {\n      \"description\": \"Environmental cue value\",\n      \"range\": {\n        \"min\": \"-inf\",\n        \"max\": \"inf\"\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"eta\": {\n      \"description\": \"Noise parameter\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": 1,\n        \"exclusive_max\": true\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"N\": {\n      \"description\": \"Random noise drawn from normal distribution N(0,1)\",\n      \"distribution\": {\n        \"type\": \"normal\",\n        \"mean\": 0,\n        \"std\": 1\n      },\n      \"learnable\": false,\n      \"source\": \"calculated\"\n    }\n  }\n}\n</VARIABLES>\n<SUMMARY>\nA linear utility model combining base preference, environmental influence, and stochastic noise. The model uses two learnable parameters: a base tendency parameter (\u03b2) constrained to [0,1] and an unconstrained environmental sensitivity parameter (\u03b5). Environmental cues and normally distributed noise modify the base utility, allowing for both systematic and random variation in choice behavior.\n</SUMMARY>\n</EXAMPLE>\n\nPlease be sure to provide the mathematical formula for the model between <MODEL> and </MODEL>, and the variable descriptions between <VARIABLES> and </VARIABLES>. No description of the model should be provided within the <MODEL> tags.\n\nThe parameter names you choose in your <VARIABLES> section will be used exactly as specified in subsequent code generation. Please choose clear, non-reserved parameter names that can be used directly in Python code. For example, avoid Python reserved words like 'lambda' and use alternatives like 'learning_rate' or 'lambda_param'.",
  "dataset_info": "\nDataset Structure:\nVariables available:\n- ID (int64)\n- group (object)\n- trial_number (int64)\n- trial_type (int64)\n- trial_role (int64)\n- token_opp (int64)\n- token_self (int64)\n- combined_earning (int64)\n- split_opp (float64)\n- split_self (float64)\n- splitperc_opp (int64)\n- splitperc_self (int64)\n- accept (float64)\n- accepted_amount (float64)\n- accepted_perc (float64)\n- proposed_perc (float64)\n- proposed_amount (float64)\n\nNumber of observations: 3276",
  "learnable_parameters": {
    "delta": {
      "description": "Baseline bias parameter, capturing an overall tendency to accept or reject independent of fairness considerations.",
      "range": {
        "min": -10,
        "max": 10,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": null,
      "learnable": true,
      "source": "learnable"
    },
    "phi": {
      "description": "Fairness sensitivity parameter; scales the penalty when the offered share is less than the fair share.",
      "range": {
        "min": 0,
        "max": 10,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": null,
      "learnable": true,
      "source": "learnable"
    }
  },
  "model_specification": "Let F = (token_self / (token_self + token_opp)) \u00d7 combined_earning\n\nThen, the utility for accepting an offer is defined as:\n\n\u2003\u2003U = delta + split_self \u2013 phi \u00d7 max(F \u2013 split_self, 0)",
  "variable_descriptions": {
    "U": {
      "description": "Utility of accepting the offer.",
      "range": {
        "min": "-inf",
        "max": "inf",
        "inclusive_min": false,
        "inclusive_max": false
      },
      "distribution": null,
      "learnable": false,
      "source": "calculated"
    },
    "delta": {
      "description": "Baseline bias parameter, capturing an overall tendency to accept or reject independent of fairness considerations.",
      "range": {
        "min": -10,
        "max": 10,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": null,
      "learnable": true,
      "source": "learnable"
    },
    "phi": {
      "description": "Fairness sensitivity parameter; scales the penalty when the offered share is less than the fair share.",
      "range": {
        "min": 0,
        "max": 10,
        "inclusive_min": true,
        "inclusive_max": true
      },
      "distribution": null,
      "learnable": true,
      "source": "learnable"
    },
    "split_self": {
      "description": "The proposed share for the participant (in \u00a3).",
      "range": {
        "min": 0,
        "max": "inf",
        "inclusive_min": true,
        "inclusive_max": false
      },
      "distribution": null,
      "learnable": false,
      "source": "data"
    },
    "combined_earning": {
      "description": "The total amount of money earned in a trial.",
      "range": {
        "min": 0,
        "max": "inf",
        "inclusive_min": true,
        "inclusive_max": false
      },
      "distribution": null,
      "learnable": false,
      "source": "data"
    },
    "token_self": {
      "description": "Number of tokens found by the participant.",
      "range": {
        "min": 0,
        "max": "inf",
        "inclusive_min": true,
        "inclusive_max": false
      },
      "distribution": null,
      "learnable": false,
      "source": "data"
    },
    "token_opp": {
      "description": "Number of tokens found by the opponent.",
      "range": {
        "min": 0,
        "max": "inf",
        "inclusive_min": true,
        "inclusive_max": false
      },
      "distribution": null,
      "learnable": false,
      "source": "data"
    },
    "F": {
      "description": "Calculated fair share for the participant based on token counts and combined earning.",
      "range": {
        "min": 0,
        "max": "inf",
        "inclusive_min": true,
        "inclusive_max": false
      },
      "distribution": null,
      "learnable": false,
      "source": "calculated"
    }
  },
  "model_summary": "A utility model for responders that combines the monetary value of an offer with a fairness-based penalty. The fair share is computed from the participant\u2019s token count relative to the total tokens (token_self and token_opp) multiplied by the combined earning. Two learnable parameters\u2014a baseline bias (delta) and a fairness sensitivity (phi)\u2014adjust the utility: offers below the fair share incur a penalty scaled by phi, while offers at or above the fair share are unpenalized.",
  "full_reasoning": "Step-by-step reasoning:\n\n1. Key psychological mechanisms:\n   \u2022 Responders compare the money they are offered (split_self) to what they consider \u201cfair.\u201d A natural candidate for fairness is the ratio of tokens searched. Specifically, if a participant finds token_self tokens out of a total of token_self + token_opp tokens, then under a proportional fairness rule their fair share would be:\n\u2003\u2003F = (token_self/(token_self + token_opp)) \u00d7 combined_earning.\n   \u2022 In many economic and social experiments, people experience negative utility when offered less than what they perceive as fair (inequity aversion). In contrast, offers equal to or above the fair share are seen as acceptable.\n\n2. Interaction of mechanisms:\n   \u2022 When the offered split (split_self) falls short of the fair share F, the responder\u2019s utility is penalized. This penalty is scaled by a fairness sensitivity parameter.\n   \u2022 In cases where the offer is equal to or above F, no fairness penalty is applied. There is also a baseline \u201cbias\u201d parameter that shifts utility upward or downward; this can capture an overall tendency to accept or reject offers independent of tokens.\n\n3. Mathematical form:\n   \u2022 Compute F as defined above.\n   \u2022 Define the utility function U for the action \u201caccept\u201d as the monetary gain (split_self) plus an additive bias parameter \u03b4 (delta). Then subtract a penalty only when the offer is below the fair share. The penalty is the fairness discrepancy (F \u2013 split_self) scaled by a fairness sensitivity parameter \u03c6 (phi).\n   \u2022 Mathematically:\n\u2003\u2003U = \u03b4 + split_self \u2013 \u03c6 \u00d7 max(F \u2212 split_self, 0)\n\n4. Learnable parameters:\n   \u2022 \u03b4 (delta): The baseline utility bias. It is learnable and allowed to be both positive or negative.\n   \u2022 \u03c6 (phi): The fairness sensitivity parameter that penalizes offers below fairness. It is learnable and must be non-negative.\n\n5. Mapping to observable behavior:\n   \u2022 The variables token_self, token_opp, and combined_earning provide a calculation of the objective fair share F.\n   \u2022 The observed offer is captured by split_self.\n   \u2022 The computed utility U will be used subsequently (with an externally supplied temperature parameter) to determine the probability of acceptance (although only the utility itself is modeled here).\n   \u2022 The two learnable parameters \u03b4 and \u03c6 are designed to account for baseline bias and sensitivity to unfair outcomes respectively, and their bounds are chosen to be generous to allow for appropriate calibration while minimizing covariance issues.\n\nThe final formal specification is provided below.\n\n---------------------\n\n<MODEL>\nLet F = (token_self / (token_self + token_opp)) \u00d7 combined_earning\n\nThen, the utility for accepting an offer is defined as:\n\n\u2003\u2003U = delta + split_self \u2013 phi \u00d7 max(F \u2013 split_self, 0)\n</MODEL>\n\n<VARIABLES>\n{\n  \"variables\": {\n    \"U\": {\n      \"description\": \"Utility of accepting the offer.\",\n      \"range\": {\n        \"min\": \"-inf\",\n        \"max\": \"inf\",\n        \"inclusive_min\": false,\n        \"inclusive_max\": false\n      },\n      \"learnable\": false,\n      \"source\": \"calculated\"\n    },\n    \"delta\": {\n      \"description\": \"Baseline bias parameter, capturing an overall tendency to accept or reject independent of fairness considerations.\",\n      \"range\": {\n        \"min\": -10,\n        \"max\": 10,\n        \"inclusive_min\": true,\n        \"inclusive_max\": true\n      },\n      \"learnable\": true,\n      \"source\": \"learnable\"\n    },\n    \"phi\": {\n      \"description\": \"Fairness sensitivity parameter; scales the penalty when the offered share is less than the fair share.\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": 10,\n        \"inclusive_min\": true,\n        \"inclusive_max\": true\n      },\n      \"learnable\": true,\n      \"source\": \"learnable\"\n    },\n    \"split_self\": {\n      \"description\": \"The proposed share for the participant (in \u00a3).\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": \"inf\",\n        \"inclusive_min\": true,\n        \"inclusive_max\": false\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"combined_earning\": {\n      \"description\": \"The total amount of money earned in a trial.\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": \"inf\",\n        \"inclusive_min\": true,\n        \"inclusive_max\": false\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"token_self\": {\n      \"description\": \"Number of tokens found by the participant.\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": \"inf\",\n        \"inclusive_min\": true,\n        \"inclusive_max\": false\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"token_opp\": {\n      \"description\": \"Number of tokens found by the opponent.\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": \"inf\",\n        \"inclusive_min\": true,\n        \"inclusive_max\": false\n      },\n      \"learnable\": false,\n      \"source\": \"data\"\n    },\n    \"F\": {\n      \"description\": \"Calculated fair share for the participant based on token counts and combined earning.\",\n      \"range\": {\n        \"min\": 0,\n        \"max\": \"inf\",\n        \"inclusive_min\": true,\n        \"inclusive_max\": false\n      },\n      \"learnable\": false,\n      \"source\": \"calculated\"\n    }\n  }\n}\n</VARIABLES>\n\n<SUMMARY>\nA utility model for responders that combines the monetary value of an offer with a fairness-based penalty. The fair share is computed from the participant\u2019s token count relative to the total tokens (token_self and token_opp) multiplied by the combined earning. Two learnable parameters\u2014a baseline bias (delta) and a fairness sensitivity (phi)\u2014adjust the utility: offers below the fair share incur a penalty scaled by phi, while offers at or above the fair share are unpenalized.\n</SUMMARY>",
  "simulation_code": "def simulate_model(trial_data, delta=0, phi=1):\n    utility_values = []\n    for trial in trial_data:\n        token_self = trial.get(\"token_self\", 0)\n        token_opp = trial.get(\"token_opp\", 0)\n        combined_earning = trial.get(\"combined_earning\", 0)\n        split_self = trial.get(\"split_self\", 0)\n\n        # Calculate F\n        if token_self + token_opp > 0:  # To avoid division by zero\n            F = (token_self / (token_self + token_opp)) * combined_earning\n        else:\n            F = 0  # If both token_self and token_opp are 0, F can logically be set to 0\n\n        # Calculate U\n        U = delta + split_self - phi * max(F - split_self, 0)\n        utility_values.append(U)\n    \n    return utility_values",
  "fitting_results": [
    {
      "delta": -6.383021906988747,
      "phi": 2.046592608192659,
      "success": true,
      "log_likelihood": -6.173579779332185,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 0.750425043572461,
      "phi": 1.791548700356176,
      "success": true,
      "log_likelihood": -16.270977860069337,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 4.0117627588009865,
      "phi": 2.972295517023603,
      "success": true,
      "log_likelihood": -10.705124853594732,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": -0.5043769866926134,
      "phi": 1.720419126175564,
      "success": true,
      "log_likelihood": -13.974376521078844,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 5.316005682398533,
      "phi": 4.399309369901032,
      "success": true,
      "log_likelihood": -8.65234168119334,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 4.42415085891015,
      "phi": 2.3977960877019595,
      "success": true,
      "log_likelihood": -11.585308268263974,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 10.0,
      "phi": 0.0,
      "success": true,
      "log_likelihood": -0.05368990312462738,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 7.074930445981596,
      "phi": 3.0900583428995216,
      "success": true,
      "log_likelihood": -10.061812594716745,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 10.0,
      "phi": 0.0,
      "success": true,
      "log_likelihood": -0.05368990312462738,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 1.4867700930366246,
      "phi": 3.0089425138405597,
      "success": true,
      "log_likelihood": -11.344160537119762,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 4.354337222594042,
      "phi": 3.9135662374927107,
      "success": true,
      "log_likelihood": -7.195897904462961,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": -5.433374537026265,
      "phi": 2.072404642046554,
      "success": true,
      "log_likelihood": -7.26637066631217,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 3.748852516719189,
      "phi": 3.946740456997457,
      "success": true,
      "log_likelihood": -8.915273779989562,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 10.0,
      "phi": 0.0,
      "success": true,
      "log_likelihood": -0.05368990312462738,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 10.0,
      "phi": 0.0,
      "success": true,
      "log_likelihood": -0.053689903124627375,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 10.0,
      "phi": 0.0,
      "success": true,
      "log_likelihood": -0.05368990312462739,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 10.0,
      "phi": 0.0,
      "success": true,
      "log_likelihood": -0.05368990312462736,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 5.096799541652822,
      "phi": 1.3559371841964358,
      "success": true,
      "log_likelihood": -7.81040886641468,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 10.0,
      "phi": 2.384308328069827,
      "success": true,
      "log_likelihood": -5.535674496555351,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 10.0,
      "phi": 0.0,
      "success": true,
      "log_likelihood": -0.05368990312462737,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 3.5079599130359207,
      "phi": 2.5787467333912506,
      "success": true,
      "log_likelihood": -14.111937506589676,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 9.05205873103064,
      "phi": 2.345480883616284,
      "success": true,
      "log_likelihood": -7.26905271340546,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": -2.9035761986380875,
      "phi": 0.8671342228582662,
      "success": true,
      "log_likelihood": -16.56614862894568,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": -0.18780714180624006,
      "phi": 1.2493826338988263,
      "success": true,
      "log_likelihood": -17.094280890085017,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 5.683189703448693,
      "phi": 3.9067092979831486,
      "success": true,
      "log_likelihood": -11.357401445087044,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 1.4478601794281665,
      "phi": 1.6274050242578235,
      "success": true,
      "log_likelihood": -15.285214366549502,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 2.014173675545787,
      "phi": 1.9958954778765283,
      "success": true,
      "log_likelihood": -13.045078511280115,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 4.7656323849814175,
      "phi": 8.234062108282513,
      "success": true,
      "log_likelihood": -4.50201154090793,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 8.147604687744998,
      "phi": 1.9222620765320249,
      "success": true,
      "log_likelihood": -7.721295110849963,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 3.710108104724352,
      "phi": 1.4301085302602317,
      "success": true,
      "log_likelihood": -14.579062506346038,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 10.0,
      "phi": 0.0,
      "success": true,
      "log_likelihood": -0.05368990312462736,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": -6.383021254066593,
      "phi": 2.0465915711865996,
      "success": true,
      "log_likelihood": -6.17357977933863,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": -3.0374038088845907,
      "phi": 0.5324021540768414,
      "success": true,
      "log_likelihood": -19.62815307688858,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": -0.8234395714701453,
      "phi": 1.7464443945606087,
      "success": true,
      "log_likelihood": -15.272874131315254,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 10.0,
      "phi": 0.0,
      "success": true,
      "log_likelihood": -0.05368990312462737,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": -0.1125831869806984,
      "phi": 0.7912552856524263,
      "success": true,
      "log_likelihood": -14.912963603874413,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 5.22995653514846,
      "phi": 2.3391215118610234,
      "success": true,
      "log_likelihood": -9.871733052148743,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 2.9561814258558057,
      "phi": 2.7423102543030726,
      "success": true,
      "log_likelihood": -13.47023522524273,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 2.820571556625899,
      "phi": 1.7034597151709854,
      "success": true,
      "log_likelihood": -16.70173838646645,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 4.881109949884668,
      "phi": 0.9230113631362147,
      "success": true,
      "log_likelihood": -8.61183235105166,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 3.075980161338216,
      "phi": 2.084741333853407,
      "success": true,
      "log_likelihood": -16.533027746688674,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": -2.764015359406753,
      "phi": 2.1758144395826244,
      "success": true,
      "log_likelihood": -12.07412877443057,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 5.228424067339052,
      "phi": 0.36169841830985683,
      "success": true,
      "log_likelihood": -5.689521158055434,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 0.2683731375867359,
      "phi": 1.3021854057590552,
      "success": true,
      "log_likelihood": -16.46445310746995,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 2.209170226671838,
      "phi": 1.770203492443416,
      "success": true,
      "log_likelihood": -14.005244951010361,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 0.2308315293177569,
      "phi": 0.5726257797990487,
      "success": true,
      "log_likelihood": -16.151863221627607,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 1.4100505716793372,
      "phi": 1.910587954812154,
      "success": true,
      "log_likelihood": -15.298730423153703,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": -2.4727827137098015,
      "phi": 0.9246372159041014,
      "success": true,
      "log_likelihood": -17.974370034649688,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 5.638487685209455,
      "phi": 5.004245171726734,
      "success": true,
      "log_likelihood": -9.068765058675833,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": -3.26794410021132,
      "phi": 0.0,
      "success": true,
      "log_likelihood": -22.687410151793006,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 0.850997542170791,
      "phi": 0.9026875115979197,
      "success": true,
      "log_likelihood": -17.347443598655612,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": -6.051905645659562,
      "phi": 0.9038106324529243,
      "success": true,
      "log_likelihood": -11.409727872655528,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": -1.5236840542583145,
      "phi": 0.6997820689397218,
      "success": true,
      "log_likelihood": -18.50321103377517,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": -2.5845545880511636,
      "phi": 0.06616475093353323,
      "success": true,
      "log_likelihood": -20.285118909591024,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": -1.392921128370025,
      "phi": 1.4545008241224056,
      "success": true,
      "log_likelihood": -20.220164286752865,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 3.366953708933301,
      "phi": 5.162729087166897,
      "success": true,
      "log_likelihood": -6.189517303544148,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": -0.5051068256666617,
      "phi": 3.147108416624021,
      "success": true,
      "log_likelihood": -10.347224409782374,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 1.0428609661769679,
      "phi": 0.0,
      "success": true,
      "log_likelihood": -13.253874573841214,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": -5.742965821443563,
      "phi": 1.7241101696842116,
      "success": true,
      "log_likelihood": -7.916641277824498,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 0.7273447108960787,
      "phi": 0.374982806208773,
      "success": true,
      "log_likelihood": -14.41059290206617,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 0.09557751240176729,
      "phi": 0.9851111954411487,
      "success": true,
      "log_likelihood": -19.804703711532007,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 2.7164248573202587,
      "phi": 2.6392975536486003,
      "success": true,
      "log_likelihood": -14.023778633413844,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": -6.382997519500455,
      "phi": 2.0466162912986325,
      "success": true,
      "log_likelihood": -6.173579779399654,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": -2.6408694880256114,
      "phi": 0.5831663203002122,
      "success": true,
      "log_likelihood": -19.44979791730517,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": -2.598457171178971,
      "phi": 2.315231038913297,
      "success": true,
      "log_likelihood": -10.087469878012964,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 0.6828190515221811,
      "phi": 1.4676952725803512,
      "success": true,
      "log_likelihood": -15.21311856420035,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 5.829644982218049,
      "phi": 1.1565695581012323,
      "success": true,
      "log_likelihood": -7.695481950415759,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 5.401718899538359,
      "phi": 1.4353648706095141,
      "success": true,
      "log_likelihood": -10.45113398490724,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": -1.0589210045781388,
      "phi": 0.7717429215401461,
      "success": true,
      "log_likelihood": -16.21173823804929,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 3.0306045235370003,
      "phi": 0.4243868404287118,
      "success": true,
      "log_likelihood": -10.608905773254248,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": -2.194904291107265,
      "phi": 10.0,
      "success": true,
      "log_likelihood": -1.6526045746690603,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": -5.717192394011651,
      "phi": 1.1399241338783208,
      "success": true,
      "log_likelihood": -10.652727439964384,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 0.690653247602468,
      "phi": 1.6131443343384118,
      "success": true,
      "log_likelihood": -15.866735313559571,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 0.5330307526143525,
      "phi": 0.43791729402739427,
      "success": true,
      "log_likelihood": -15.192972651299364,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": -2.383607257432726,
      "phi": 0.46041459207766894,
      "success": true,
      "log_likelihood": -22.772649862678204,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 5.999914008647435,
      "phi": 2.579059644775863,
      "success": true,
      "log_likelihood": -11.83513009271987,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 6.361682229506251,
      "phi": 1.0318251124481017,
      "success": true,
      "log_likelihood": -6.5283805140997835,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": -8.506856931995806,
      "phi": 0.9443671675579599,
      "success": true,
      "log_likelihood": -6.592360167048545,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": -2.49323353343958,
      "phi": 0.0,
      "success": true,
      "log_likelihood": -21.686735352218847,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": -6.3830256642513,
      "phi": 2.0466020173508115,
      "success": true,
      "log_likelihood": -6.173579779328478,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": -2.0666486708633878,
      "phi": 0.47935210615287205,
      "success": true,
      "log_likelihood": -23.288950504660686,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 1.7057899686644395,
      "phi": 0.0,
      "success": true,
      "log_likelihood": -10.998506324687545,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": -5.8379287649276215,
      "phi": 1.6268264233328638,
      "success": true,
      "log_likelihood": -8.86725373490507,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": -0.1258366384837521,
      "phi": 1.413865314013665,
      "success": true,
      "log_likelihood": -12.996341724318107,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": -1.8498022496928612,
      "phi": 0.24703418597614385,
      "success": true,
      "log_likelihood": -25.769436375145965,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": -4.7677373622838575,
      "phi": 3.0203065242257057,
      "success": true,
      "log_likelihood": -7.157681751091026,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 2.0370646538312758,
      "phi": 1.3058145808243324,
      "success": true,
      "log_likelihood": -17.36265649913258,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": -2.9946714865469217,
      "phi": 1.9892562921954133,
      "success": true,
      "log_likelihood": -13.517243682634586,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": 8.874957202392194,
      "phi": 1.5826644592341474,
      "success": true,
      "log_likelihood": -4.984511684425918,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": -1.7739890120513842,
      "phi": 0.8353622646628666,
      "success": true,
      "log_likelihood": -14.556905243650444,
      "optimization_message": "CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL",
      "participant_id": null,
      "n_trials": 36
    },
    {
      "delta": -0.5405887925368805,
      "phi": 0.41352236845828294,
      "success": true,
      "log_likelihood": -21.17481215995019,
      "optimization_message": "CONVERGENCE: RELATIVE REDUCTION OF F <= FACTR*EPSMCH",
      "participant_id": null,
      "n_trials": 36
    }
  ],
  "parameter_recovery": {
    "correlations": {
      "delta": {
        "r": 0.9252978920269084,
        "p": 4.698073720955481e-43
      },
      "phi": {
        "r": 0.7034221470671219,
        "p": 3.336289766535498e-16
      }
    }
  },
  "average_bic": 30.185236215864315,
  "bic_Control": 25.141260548669095,
  "bic_Cocaine": 34.70379775106003,
  "bic_error": "'ModelOutput' object has no attribute 'metrics'"
}